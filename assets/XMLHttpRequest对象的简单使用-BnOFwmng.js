import{createElementBlock as n,openBlock as t,createStaticVNode as l}from"vue";import{c as p}from"./app-BzoAWw-A.js";import"nprogress";import"pinia-plugin-persistedstate";import"vue-router";import"vue-router-better-scroller";import"@vueuse/core";import"@vueuse/components";import"@vueuse/router";import"octokit";import"pinia";import"date-fns";const e={class:"kan-doc"},b="XMLHttpRequest对象的简单使用",m=1600959427,q="2020-09-24T22:57:07.000Z",v="2023-02-13T18:28:43.000Z",R=["XMLHttpRequest"],E=["编程"],H=15371,F=[{property:"og:title",content:"XMLHttpRequest对象的简单使用"},{name:"twitter:title",content:"XMLHttpRequest对象的简单使用"}],X={__name:"XMLHttpRequest对象的简单使用",setup(d,{expose:a}){return a({frontmatter:{title:"XMLHttpRequest对象的简单使用",key:1600959427,date:"2020-09-24T22:57:07.000Z",updated:"2023-02-13T18:28:43.000Z",tags:["XMLHttpRequest"],categories:["编程"],wordCount:15371,meta:[{property:"og:title",content:"XMLHttpRequest对象的简单使用"},{name:"twitter:title",content:"XMLHttpRequest对象的简单使用"}]}}),p({title:"XMLHttpRequest对象的简单使用",meta:[{property:"og:title",content:"XMLHttpRequest对象的简单使用"},{name:"twitter:title",content:"XMLHttpRequest对象的简单使用"}]}),(g,s)=>(t(),n("div",e,s[0]||(s[0]=[l(`<p><code>XMLHttpRequest</code>对象的简单使用</p><h1 id="xmlhttprequest" tabindex="-1">XMLHttpRequest <a class="header-anchor" href="#xmlhttprequest">🔗</a></h1><p><code>XMLHttpRequest</code>是一个浏览器对象，通过这个对象，可以实现和服务器进行数据上的交互。</p><p><code>Wiki</code>上这么定义<code>XMLHttpRequest</code>。</p><blockquote><p><code>XMLHTTP</code>是一组<code>API</code>函数集，可被<code>JavaScript</code>、<code>JScript</code>、<code>VBScript</code>以及其它<code>web</code>浏览器内嵌的脚本语言调用，通过<code>HTTP</code>在浏览器和<code>web</code>服务器之间收发<code>XML</code>或其它数据。<strong><code>XMLHTTP</code>最大的好处在于可以动态地更新网页</strong>，它<strong>无需重新从服务器读取整个网页</strong>，也<strong>不需要安装额外的插件</strong>。该技术被许多网站使用，以实现快速响应的动态网页应用。</p></blockquote><p>这也就是我们常说的通过<code>AJAX</code>技术来实现网页的局部更新。</p><p><code>Wiki</code>上这么定义<code>AJAX</code>。</p><blockquote><p><code>AJAX</code>即“<strong>Asynchronous JavaScript and XML</strong>”（异步的<code>JavaScript</code>与<code>XML</code>技术），指的是一套综合了多项技术的浏览器端网页开发技术。</p></blockquote><blockquote><p>传统的<code>web</code>应用允许用户端填写表单（<code>form</code>），当提交表单时就向网页服务器发送一个请求。服务器接收并处理传来的表单，然后送回一个新的网页，但这个做法<strong>浪费了许多带宽</strong>，因为在前后两个页面中的大部分<code>HTML</code>代码往往是相同的。由于每次应用的沟通都需要向服务器发送请求，应用的回应时间依赖于服务器的回应时间。这导致了用户界面的回应比本机应用慢得多。</p></blockquote><blockquote><p>与此不同，<code>AJAX</code>应用可以仅向服务器发送并取回必须的数据，并在客户端采用<code>JavaScript</code>处理来自服务器的回应。因为<strong>在服务器和浏览器之间交换的数据大量减少</strong>，服务器回应更快了。同时，很多的处理工作可以在发出请求的客户端机器上完成，因此<code>web</code>服务器的负荷也减少了。</p></blockquote><p>也就是说，我们通过<code>XMLHttpRequest</code>对象和服务器进行交互，格式为<code>XML</code>，而现在大部分使用的是<code>JSON</code>格式的对象，<code>Wiki</code>上称此为<code>AJAJ</code></p><blockquote><p>类似于<code>DHTML</code>或<code>LAMP</code>，<code>AJAX</code>不是指一种单一的技术，而是有机地利用了一系列相关的技术。虽然其名称包含<code>XML</code>，但实际上数据格式可以由<code>JSON</code>代替，进一步减少数据量，形成所谓的<strong>AJAJ</strong>。而客户端与服务器也并不需要异步。一些基于<code>AJAX</code>的“派生／合成”式（<code>derivative</code>/<code>composite</code>）的技术也正在出现，如<strong>AFLAX</strong>。</p></blockquote><p>Tips: 在最后我们看到了一个<code>AFLAX</code>这个比较陌生的名词，那么这个又是啥呢</p><blockquote><p><code>AFLAX</code>是<code>&#39;A JavaScript Library for Macromedia&#39;s Flash™ Platform&#39;</code>的略称。<code>AFLAX</code>是(<code>AJAX</code> - <code>Javascript + Flash</code>) - 基于<code>AJAX</code>的“派生／合成”式（<code>derivative</code>/<code>composite</code>）技术。正如略称字面的意思，<code>AFLAX</code> 是<strong>融合 Ajax 和 Flash</strong>的开发技术。</p></blockquote><p>感觉这个都没怎么听过，<code>chrome</code>计划在今年年末就停止对<code>flash</code>的支持了，现在的<code>js</code>能操作的东西越来越多，感觉<code>flash</code>也逐渐的退出了历史的舞台（个人觉得 😂）。</p><p>当我们打开一个使用<code>flash</code>技术的网址时，会有下面的提示</p><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/24/0pTFXR.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/24/0pTFXR.png" alt="bilibili的flash播放器"></a></p><p>似乎扯远了，<code>XMLHttpRequest</code>可能我们在做项目的时候没见过（至少我做的两个都基本不需要跟他打交道，取而代之的是封装它的<code>Axios</code>）。</p><p>但是做项目大部分都使用过<code>Axios</code>这个库，这个库在浏览器端上的底层实现就是依赖了<code>XMLHttpRequest</code>。</p><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/0pHEFK.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/0pHEFK.png" alt="Axios在浏览器端底层的依赖"></a></p><p>那么如何原生的使用使用这个对象呢？</p><p>首先，<code>XMLHttpRequest</code>是一个构造器，需要先 new 出来一个对象。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> XMLHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span></code></pre><p>可以在浏览器上看到它的全部的属性和方法。</p><p><a data-fancybox="doc-gallery" href="https://i.loli.net/2020/09/25/WHqXQErUgM7xlyA.png" target="_blank" rel="noopener noreferrer"><img src="https://i.loli.net/2020/09/25/WHqXQErUgM7xlyA.png" alt=""></a></p><p>其中前面<code>on</code>开头的很明显是一个监听事件的回调函数：</p><ul><li><code>onabort</code></li><li><code>onerror</code></li><li><code>onload</code></li><li><code>onloadstart</code></li><li><code>onloadend</code></li><li><code>onprogress</code></li><li><code>onreadystatechange</code></li><li><code>ontimeout</code></li></ul><p>其他的就是一些属性：</p><ul><li><code>readyState</code></li><li><code>response</code></li><li><code>responseText</code></li><li><code>responseType</code></li><li><code>responseURL</code></li><li><code>responseXML</code></li><li><code>status</code></li><li><code>statusText</code></li><li><code>timeout</code></li><li><code>withCredentials</code></li></ul><p>其中有个比较特别的是<code>upload</code>对象，这是和上传有关的对象，现在先不管他。</p><p>伟人鲁迅曾经说过：“光说不做，那叫耍流氓”。</p><h1 id="前置准备" tabindex="-1">前置准备 <a class="header-anchor" href="#前置准备">🔗</a></h1><p>so，我们要实际操作来验证这些到底是个啥东西，他们的执行顺序以及含义。</p><p>我们先搭个<code>http</code>服务器出来。</p><p>这里我使用的是<code>Koa</code>以及配套的<code>Koa-Router</code>（<code>Koa</code>的路由中间件，可以很容易地进行<code>api</code>的编写）。</p><p>和<code>Koa-Static</code>（<code>Koa</code>的静态文件映射中间件，这里主要映射下测试用的<code>html</code>文件）。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-text"><span class="line"><span>|-- server</span></span>
<span class="line"><span>  |-- html            // 这里存放Html文件</span></span>
<span class="line"><span>    |-- index.html</span></span>
<span class="line"><span>  |-- index.js        // server的入口文件</span></span></code></pre><p>在<code>index.js</code>来编写我们的这个<code>http</code>服务器。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> Koa</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> require</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">koa</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> KoaStatic</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> require</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">koa-static</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> KoaRouter</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> require</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">koa-router</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> app</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> Koa</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> router</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> KoaRouter</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> path</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> require</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">path</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> home</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> KoaStatic</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">path</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">join</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">__dirname</span><span style="--s-dark:#666666;--s-light:#999999;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// 配置当前目录为静态目录，</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">app</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">use</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">home</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// 配置路由</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">app</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">use</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">router</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">routes</span><span style="--s-dark:#666666;--s-light:#999999;">()).</span><span style="--s-dark:#80A665;--s-light:#59873A;">use</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">router</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">allowedMethods</span><span style="--s-dark:#666666;--s-light:#999999;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> port</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 3030</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">app</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">listen</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">port</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">err</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">err</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> throw</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> err</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">\`</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">服务器已经运行，端口号为：</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">\${</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">port</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">}</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">\`</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span></code></pre><p>使用<code>node</code>之后，如果启动成功，则会出现我们写在<code>listen</code>函数的回调。</p><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/09NNo8.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/09NNo8.png" alt=""></a></p><p>ok，我们来写一个简单的<code>index.html</code>页面，放到<code>html</code>文件夹里面。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;!</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">DOCTYPE</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> html</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">html</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> lang</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">zh</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">head</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">meta</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> charset</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">UTF-8</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;"> /&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">title</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">AJAX</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">title</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">head</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">body</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">h1</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">Hello World!</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">h1</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">body</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">html</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p>如果没有意外，就可以出现我们的初始的页面了。</p><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/09URBt.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/09URBt.png" alt=""></a></p><p>ok，接下来我们写一个简单的接口，返回一个对象。</p><p>我们稍微改下项目的目录：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-text"><span class="line"><span>|-- server</span></span>
<span class="line"><span>  |-- html            // 这里存放Html文件</span></span>
<span class="line"><span>    |-- index.html</span></span>
<span class="line"><span>  |-- router          // 放置接口的文件夹</span></span>
<span class="line"><span>    |-- index.js</span></span>
<span class="line"><span>  |-- index.js        // server的入口文件</span></span></code></pre><p>编写<code>router</code>文件下面的<code>index.js</code>。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> KoaRouter</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> require</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">koa-router</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> router</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> KoaRouter</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">router</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">get</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">/hello</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> async</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ctx</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> next</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  ctx</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">body</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">hello world!</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">export</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> default</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> router</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span></code></pre><p>在把根下面的<code>index.js</code>文件稍微更改下。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> Koa</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> require</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">koa</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> KoaStatic</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> require</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">koa-static</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// - const KoaRouter = require(&quot;koa-router&quot;);</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> app</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> Koa</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// - const router = new KoaRouter();</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// +</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> router</span><span style="--s-dark:#666666;--s-light:#999999;"> }</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> require</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">./router/index.js</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// ...</span></span></code></pre><p>然后访问<code>/hello</code>，如果显示了<code>hello world！</code>那就证明接口可以调用了。</p><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/09dbT0.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/09dbT0.png" alt=""></a></p><h1 id="xmlhttprequest-测试" tabindex="-1">XMLHttpRequest 测试 <a class="header-anchor" href="#xmlhttprequest-测试">🔗</a></h1><p>开始在<code>index.html</code>里面写请求。</p><p>如何去发送一个请求呢，这就要使用<code>open</code>函数。</p><h2 id="open" tabindex="-1"><code>open</code> <a class="header-anchor" href="#open">🔗</a></h2><p><code>open</code>函数有<code>5</code>个参数，但大部分情况下只会说到<code>3</code>个</p><ul><li><code>url</code> 请求的目标地址；</li><li><code>method</code> 请求的方法；</li><li><code>async</code> （可选）请求是否异步，默认为<code>true</code> // Tips：一般都不会去指定为<code>false</code>（同步），由于 js 为单线程的模型，线程的阻塞意味着将无法响应页面上的其他操作（比如<code>dom</code>事件，或者其他同步的操作，比如一个<code>while</code>循环）；</li><li><code>user</code> （可选）用户名用于认证用途；</li><li><code>password</code>（可选）密码用于认证用途。</li></ul><p>ok，那我们写出来：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> XMLHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">open</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">get</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">http://localhost:3030/hello</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span></code></pre><p>发现没有发送请求，what？</p><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/09DBNt.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/09DBNt.png" alt=""></a></p><p>没错，<code>open</code>函数只是初始化一个请求而已，此时还没有发送 http 请求。</p><p>为了发送 http 请求，需要在<code>open</code>之后调用<code>send</code>方法。</p><h2 id="send" tabindex="-1"><code>send</code> <a class="header-anchor" href="#send">🔗</a></h2><p><code>send</code>方法有一个参数，该参数也就是我们希望附带在请求上的数据。</p><ul><li><code>body</code> 请求的主体数据，在 MDN 上标注着可以使用的几种类型，<code>Document</code>（发送前被序列化）<code>Blob</code>，<code>BufferSource</code>，<code>FormData</code>，<code>URLSearchParams</code>，<code>USVString</code>。</li></ul><p>我们发送的是<code>get</code>请求，一般不在主题上附带数据，直接指定为<code>null</code>即可。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> XMLHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">open</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">get</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">http://localhost:3030/hello</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">send</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">null</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span></code></pre><p>刷新之后我们发现出现了发送的请求。</p><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/096p80.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/096p80.png" alt=""></a></p><p>但是单单成功发送可不行，我们当然希望可以拿到发送回来的数据。</p><p>这时候，我们就需要监听<code>readystatechange</code>这个事件，给<code>onreadystatechange</code>写上回调。</p><h2 id="onreadystatechange" tabindex="-1"><code>onreadystatechange</code> <a class="header-anchor" href="#onreadystatechange">🔗</a></h2><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> XMLHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">open</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">get</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">http://localhost:3030/hello</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">onreadystatechange</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ev</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> xhr</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> this</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">xhr</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">response</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">send</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">null</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span></code></pre><p>刷新发现，怎么出现了三个输出，其中一个是空白行，两个相同的<code>hello world!</code>。</p><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/09RNTg.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/09RNTg.png" alt=""></a></p><p>这是为啥呢？<code>MDN</code>上有解释</p><blockquote><p>只要<code>readyState</code>属性发生变化，就会调用相应的处理函数。这个回调函数会被用户线程所调用。<code>XMLHttpRequest.onreadystatechange</code>会在<code>XMLHttpRequest</code>的<code>readyState</code>属性发生改变时触发<code>readystatechange</code>事件的时候被调用。</p></blockquote><p>那这个<code>readyState</code>又是什么东西呢？记得我们前面也有在<code>XMLHttpRequest</code>看到这个属性，<code>MDN</code>上给出了解释：</p><blockquote><p><code>XMLHttpRequest.readyState</code>属性返回一个<code>XMLHttpRequest</code>代理当前所处的状态。一个<code>XHR</code>代理总是处于下列状态中的一个。 <a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/09W9nf.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/09W9nf.png" alt=""></a></p></blockquote><p>也就是说应该调用五次这个回调函数才对，那么为什么只调用了<code>3</code>次呢？</p><p>我们可以把<code>readyState</code>打印出来看一下：</p><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/09WBUe.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/09WBUe.png" alt=""></a></p><p>发现只出现了<code>2 3 4</code>，并没有 <code>0 1</code>，看看缺失的<code>0</code>的意思是：<strong>代理被创建，但尚未调用<code>open()</code>方法。</strong></p><p>再看看我们的代码，我们把回调写在了<code>open</code>函数之后，自然就不会调用到了，我们需要把回调的注册提前。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> XMLHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// 把注册回调提前</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">onreadystatechange</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ev</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> xhr</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> this</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">xhr</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">readyState</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">open</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">get</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">http://localhost:3030/hello</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">send</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">null</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span></code></pre><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/09hsXt.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/09hsXt.png" alt=""></a></p><p>发现还是少了<code>0</code>这个状态，到底是为啥呢？</p><p>原因是回调函数是在<code>readyState</code>改变后才进行回调的。</p><p>也就是从<code>0</code>变为<code>1</code>然后调用回调，所以回调函数中的范围只有<code>1 - 4</code>。</p><p>也就是 <code>0 -&gt; 1 -&gt; callback（此时是1） -&gt; 2 -&gt; callback（此时是2） -&gt; 3 -&gt; callback（此时是3） -&gt; 4 -&gt; callback（此时是4）</code>。</p><p>我们可以在注册回调之前打印<code>readyState</code>的值看看。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> XMLHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">readyState</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">onreadystatechange</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ev</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> xhr</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> this</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">xhr</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">readyState</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">open</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">get</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">http://localhost:3030/hello</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">send</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">null</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span></code></pre><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/094RDx.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/094RDx.png" alt=""></a></p><p>发现出现了<code>0</code>状态。</p><p>所以如果在回调内判断是否为<code>0</code>来执行逻辑的，那么永远都不会执行。</p><p>（PS：看了好多网上的文章，都没讲清楚，懵懵懂懂的 😂，果然还是要实践出真知）</p><p>我也在火狐上面测试了这段代码，发现和谷歌浏览器的行为一致。</p><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/095jyR.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/095jyR.png" alt=""></a></p><p>实现者也相当的贴心，已经在<code>XMLHttpRequest</code>构造器上挂载了静态属性供我们使用。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">XMLHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">UNSENT</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">XMLHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">OPENED</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">XMLHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">HEADERS_RECEIVED</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">XMLHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">LOADING</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">XMLHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">DONE</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span></code></pre><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/09o9un.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/09o9un.png" alt=""></a></p><p>这样子就可以减少魔法值的使用了，好处就是代码的意思更加明朗，并且如果以后这些对应的数字更改的话，对代码完全没有影响。</p><p>清楚之后，我们就明白了只需要判断在<code>DONE</code>状态下就可以拿到传输完成的数据了。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> XMLHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">onreadystatechange</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ev</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">DONE</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ===</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">readyState</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">response</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">open</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">get</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">http://localhost:3030/hello</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">send</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">null</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span></code></pre><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/09TQMj.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/09TQMj.png" alt=""></a></p><p>很好，现在已经可以拿到数据了。</p><p>但是我一个不小心把<code>/hello</code>写错成<code>/hella</code>。</p><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/09TbY8.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/09TbY8.png" alt=""></a></p><p>完蛋，报错，也就是是说<code>DONE</code>状态只是标志了传输的完成而已，并不能保证传输正确。</p><p>在这个基础上，需要其他的状态来保证，这个就是状态码<code>status</code>。</p><p>关于状态码，可以查看：</p><ul><li><a href="http://www.faqs.org/rfcs/rfc1945.html" target="_blank" rel="noopener">HTTP1.0 的 RFC 文档的第 9 节</a></li><li><a href="http://www.faqs.org/rfcs/rfc2616.html" target="_blank" rel="noopener">HTTP1.1 的 RFC 文档的第 10 节</a></li></ul><p>（虽然英文文档看着痛苦，但还是要看啊 😭）</p><p>这里我们的重点不是状态码的类别，只需要简单地判断是否为<code>200</code>即可。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> RequestStatus</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">  OK</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 200</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> XMLHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">onreadystatechange</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ev</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">DONE</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ===</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">readyState</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">status</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ===</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> RequestStatus</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">OK</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">response</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> else</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">        \`</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Sorry啊，出现了一点小错误，错误状态码为：</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">\${</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">status</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">}</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">，原因为：</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">\${</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">response</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">}</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">\`</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      );</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">open</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">get</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">http://localhost:3030/hello</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">send</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">null</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span></code></pre><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/09qQhV.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/09qQhV.png" alt=""></a></p><p>现在基本上就可以发送以及接受请求了，但是还有一些监听的钩子和一些属性没有说。</p><h2 id="其他的监听函数" tabindex="-1">其他的监听函数 <a class="header-anchor" href="#其他的监听函数">🔗</a></h2><ul><li><code>onabort</code></li><li><code>onerror</code></li><li><code>onload</code></li><li><code>onloadstart</code></li><li><code>onloadend</code></li><li><code>onprogress</code></li><li><code>ontimeout</code></li></ul><p>不管三七二十一，简单地打印点东西，看看是什么东西</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> RequestStatus</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">  OK</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 200</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> XMLHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">onreadystatechange</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ev</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">DONE</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ===</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">readyState</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">status</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ===</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> RequestStatus</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">OK</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">response</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> else</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">        \`</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Sorry啊，出现了一点小错误，错误状态码为：</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">\${</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">status</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">}</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">，原因为：</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">\${</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">response</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">}</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">\`</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      );</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">onload</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ev</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">onload</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">onloadstart</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ev</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">onloadstart</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// ...其他回调的绑定</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">open</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">get</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">http://localhost:3030/hello</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">send</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">null</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span></code></pre><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/0CADoV.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/0CADoV.png" alt=""></a></p><p>我们发现只打印了三个，其实从名字上，我们也能大致地推断出意思</p><p><code>onloadstart</code> 在数据开始传输的回调 <code>onload</code> 在数据传输过程中的回调 <code>onloadend</code> 数据传输结束的回调</p><p>我们试着让连接出错，看看打印了什么回调</p><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/0CEoBn.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/0CEoBn.png" alt=""></a></p><p>我们发现依然有<code>onloadstart</code>和<code>onloadend</code>，但是<code>onload</code>变成了<code>onerror</code></p><p>除了这两个，还有一个<code>onabort</code>，<code>onprogress</code>和<code>ontimeout</code></p><h3 id="ontimeout" tabindex="-1"><code>ontimeout</code> <a class="header-anchor" href="#ontimeout">🔗</a></h3><p>这个看名字其实很容易识别出来，就是连接超时了，就会调用这个回调函数。</p><p>那我们就把这个条件创造出来。</p><p>我们可以指定<code>timeout</code>属性来指定超时的时间，这个属性的值的单位是毫秒。</p><p>所以我们指定<code>500ms</code>之后提示超时。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">timeout</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 500</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // 这个语句要放在send之前</span></span></code></pre><p>然后我们在服务端设置延迟<code>2</code>秒才进行数据的响应。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">router</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">get</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">/hello</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> async</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ctx</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> next</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  ctx</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">body</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> await</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#B8A965;--s-light:#998418;"> Promise</span><span style="--s-dark:#666666;--s-light:#999999;">((</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">resolve</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">    setTimeout</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">      resolve</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">hello world!</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    },</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 2000</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  });</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  await</span><span style="--s-dark:#80A665;--s-light:#59873A;"> next</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span></code></pre><p>然后我们一刷新网页，就可以发现回调函数被执行了。</p><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/0CrOjU.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/0CrOjU.png" alt=""></a></p><h3 id="onabort" tabindex="-1"><code>onabort</code> <a class="header-anchor" href="#onabort">🔗</a></h3><p><code>abort</code>在英文中是流产和中止的意思，也就是说当我们的请求发出去之后。</p><p>但是我们突然改变想法不想发这个请求了，我们就可以调用<code>abort</code>方法来停止这个请求。</p><p>这是<code>onabort</code>注册的回调函数就会执行。</p><p>为了创造这个条件，我们需要客户端去掉<code>timeout</code>超时的设置。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// - xmlHttpRequest.timeout = 500;</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 删除</span></span></code></pre><p>然后我们在通过<code>setTimeout</code>延迟一秒来执行<code>abort</code>函数。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// 延迟1秒执行，放在send方法之后</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">setTimeout</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">abort</span><span style="--s-dark:#666666;--s-light:#999999;">(),</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 1000</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span></code></pre><p>刷新之后就可以看到出现了<code>onabort</code>的回调地执行。</p><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/0Csbad.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/0Csbad.png" alt=""></a></p><p>那么就剩下最后一个回调了。</p><h3 id="onprogress和upload" tabindex="-1"><code>onprogress</code>和<code>upload</code> <a class="header-anchor" href="#onprogress和upload">🔗</a></h3><p>这两个东西负责东西的下载和上传，其中<code>onprogress</code>负责下载，也不能说是下载，就是当我收到数据的时候，会周期性地执行这个回调。</p><p><code>MDN</code>上对<code>onprogress</code>的解释如下</p><blockquote><p><code>progress</code>事件会在请求接收到数据的时候被周期性触发。</p></blockquote><p>（PS：前面的代码没有写入<code>onprogress</code>函数）</p><p>这时我们写上<code>onprogress</code>回调，并且删除客户端<code>setTimeout</code>延迟和服务器的响应数据的延迟</p><p>客户端</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// 记得要写在send方法之前</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">onprogress</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ev</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">onprogress</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span></code></pre><p>服务器端</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">router</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">get</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">/hello</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> async</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ctx</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> next</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  ctx</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">body</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">hello world!</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  await</span><span style="--s-dark:#80A665;--s-light:#59873A;"> next</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span></code></pre><p>刷新之后可以发现调用了<code>onprogress</code></p><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/0C6U10.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/0C6U10.png" alt=""></a></p><p>为了验证他是周期性地执行的，那么需要发送大一点的数据。</p><p>我们选择一张图片，先放到我们服务器上，建立一个<code>images</code>文件夹。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-text"><span class="line"><span>|-- server</span></span>
<span class="line"><span>  |-- html            // 这里存放Html文件</span></span>
<span class="line"><span>    |-- index.html</span></span>
<span class="line"><span>  |-- images</span></span>
<span class="line"><span>    |-- 1.jpg</span></span>
<span class="line"><span>  |-- index.js        // server的入口文件</span></span></code></pre><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/0CgIfA.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/0CgIfA.png" alt=""></a></p><p>选个漂亮的小姐姐也是个技术活（误 😂）。</p><p>更改服务端代码。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">router</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">get</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">/hello</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> async</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ctx</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> next</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 同步读取一张图片得到一个buffer</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  ctx</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">response</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">body</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> fs</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">readFileSync</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">./images/1.jpg</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 要设置类型头部为图片，不然客户端是乱码</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  ctx</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">response</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">set</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">content-type</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">image/png</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  await</span><span style="--s-dark:#80A665;--s-light:#59873A;"> next</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span></code></pre><p>更改客户端代码</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">onreadystatechange</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ev</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">DONE</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ===</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">readyState</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">status</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ===</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> RequestStatus</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">OK</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">      // 如果直接输出的话是乱码，不方便查看</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">响应成功</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> else</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">        \`</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Sorry啊，出现了一点小错误，错误状态码为：</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">\${</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">status</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">}</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">，原因为：</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">\${</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">response</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">}</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">\`</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      );</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span></code></pre><p>刷新之后就可以看到调用了多次的<code>onprogress</code>。</p><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/0CRu5Q.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/0CRu5Q.png" alt=""></a></p><p>很多时候需要去查看当前的下载数据的进度，这时候就要通过回调的<code>ev</code>事件对象来获取。</p><p>我们可以打印出来看看是个什么东西。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">onprogress</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ev</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ev</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span></code></pre><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/0CRXGj.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/0CRXGj.png" alt=""></a></p><p>可以看到里面有两个属性<code>total</code>和<code>loaded</code>，分别对应了全部数据的大小和已加载数据的大小。</p><p>那么我们就可以实现一个简单的下载进度条。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">div</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> class</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">line line-grey</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">div</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> style</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">width: 0</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> class</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">line line-blue</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">div</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">div</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-css"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">line</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">  width</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 100</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">%</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">  height</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 5</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">px</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">line-grey</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">  background-color</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#666666;--s-light:#999999;"> #</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">c1c1c1</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">line-blue</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">  background-color</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#666666;--s-light:#999999;"> #</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">4b8cff</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">onprogress</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ev</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> loaded</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> ev</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">loaded</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> total</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> ev</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">total</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 设置样式 取五位小数，乘以100然后加上%</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  el</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">style</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">setProperty</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">width</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">loaded</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> /</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> total</span><span style="--s-dark:#666666;--s-light:#999999;">).</span><span style="--s-dark:#80A665;--s-light:#59873A;">toFixed</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">5</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> *</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 100</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> +</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">%</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span></code></pre><p>效果图：</p><p><a data-fancybox="doc-gallery" href="https://i.loli.net/2020/09/25/ztm1i9xdKQWTAZS.gif" target="_blank" rel="noopener noreferrer"><img src="https://i.loli.net/2020/09/25/ztm1i9xdKQWTAZS.gif" alt=""></a></p><p>可能有点看的不太清，可以自己搞搞，相信你也可以看到效果。</p><p>上传<code>upload</code>也是照葫芦画瓢，不过回调要绑定在<code>upload</code>对象的属性上。</p><p>进度条我们使用上面那个就行了。</p><p>要加一个<code>input</code>选择文件和一个<code>button</code>按钮，来控制上传流程。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">input</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> type</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">file</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;"> /&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">button</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">点我上传</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">button</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p>效果图：</p><p><a data-fancybox="doc-gallery" href="https://s1.ax1x.com/2020/09/25/0C4Rmt.png" target="_blank" rel="noopener noreferrer"><img src="https://s1.ax1x.com/2020/09/25/0C4Rmt.png" alt=""></a></p><p>然后编写<code>js</code>代码来控制控件（因为前面的代码写地有点杂了，就重新写）。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> RequestStatus</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">  OK</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 200</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> el</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> document</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">querySelector</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">.line.line-blue</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">let</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> file</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">document</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">getElementsByTagName</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">input</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">)[</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">0</span><span style="--s-dark:#666666;--s-light:#999999;">].</span><span style="--s-dark:#80A665;--s-light:#59873A;">onchange</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> selectFile</span><span style="--s-dark:#666666;--s-light:#999999;">()</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  file</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">files</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">0</span><span style="--s-dark:#666666;--s-light:#999999;">];</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">document</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">getElementsByTagName</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">button</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">)[</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">0</span><span style="--s-dark:#666666;--s-light:#999999;">].</span><span style="--s-dark:#80A665;--s-light:#59873A;">onclick</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> upload</span><span style="--s-dark:#666666;--s-light:#999999;">()</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">file</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    return</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">file</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 处理上传</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span></code></pre><p>然后尝试着选择一张图片和点击上传按钮，就可以看到已经得到了图片的对象了。</p><p><a data-fancybox="doc-gallery" href="https://i.loli.net/2020/09/26/ry4xGHQ8fiM75N6.png" target="_blank" rel="noopener noreferrer"><img src="https://i.loli.net/2020/09/26/ry4xGHQ8fiM75N6.png" alt=""></a></p><p>接下来就是完成处理上传的逻辑了。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">document</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">getElementsByTagName</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">button</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">)[</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">0</span><span style="--s-dark:#666666;--s-light:#999999;">].</span><span style="--s-dark:#80A665;--s-light:#59873A;">onclick</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> upload</span><span style="--s-dark:#666666;--s-light:#999999;">()</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">file</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    return</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">file</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 处理上传</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> XMLHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">onreadystatechange</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ev</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">readyState</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ===</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> XMLHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">DONE</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">      if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">status</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ===</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> RequestStatus</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">OK</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">上传成功</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> else</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">          \`</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Sorry啊，出现了一点小错误，错误状态码为：</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">\${</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">status</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">}</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">，原因为：</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">\${</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">response</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">}</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">\`</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        );</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  };</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 记得这里是绑定的upload对象上的onprogress</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">upload</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">onprogress</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ev</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> loaded</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> ev</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">loaded</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> total</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> ev</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">total</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    el</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">style</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">setProperty</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">width</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">loaded</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> /</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> total</span><span style="--s-dark:#666666;--s-light:#999999;">).</span><span style="--s-dark:#80A665;--s-light:#59873A;">toFixed</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">5</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> *</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 100</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> +</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">%</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  };</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> formData</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> FormData</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  formData</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">append</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">file</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> file</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">open</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">POST</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">http://locahost:3030/hello</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  xmlHttpRequest</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">send</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">formData</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span></code></pre><p>因为是要上传图片，所以使用<code>POST</code>方法，把图片封装在一个<code>FormData</code>对象里面然后发送。</p><p>然后服务器端使用<code>koa-body</code>来处理<code>form</code>表单的数据，这里就不贴出代码了。</p><p>可以看一下下面的效果图：</p><p><a data-fancybox="doc-gallery" href="https://i.loli.net/2020/09/26/awmjrb7DINPq5Mh.gif" target="_blank" rel="noopener noreferrer"><img src="https://i.loli.net/2020/09/26/awmjrb7DINPq5Mh.gif" alt=""></a></p><h1 id="后记" tabindex="-1">后记 <a class="header-anchor" href="#后记">🔗</a></h1><p>还有一些方法和属性可能没讲到，可以在<code>XMLHttpRequest</code>的<code>W3C</code>标准学习。</p><p><a href="https://www.w3.org/TR/XMLHttpRequest/" target="_blank" rel="noopener">XMLHttpRequest Level 1</a></p>`,207)])))}};export{E as categories,q as date,X as default,m as key,F as meta,R as tags,b as title,v as updated,H as wordCount};
