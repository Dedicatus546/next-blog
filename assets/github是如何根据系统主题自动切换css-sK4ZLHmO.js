import{k as t,a as p,o as n,l as e}from"./app-I7hi7fN_.js";const l={class:"kan-doc"},g="github是如何根据系统主题自动切换css",h=1636336661,k="2021-11-08T09:57:41.000Z",y="2023-02-13T18:28:44.000Z",m=["JavaScript","css"],x=["编程"],u=2054,D=[{property:"og:title",content:"github是如何根据系统主题自动切换css"},{name:"twitter:title",content:"github是如何根据系统主题自动切换css"}],b={__name:"github是如何根据系统主题自动切换css",setup(d,{expose:a}){return a({frontmatter:{title:"github是如何根据系统主题自动切换css",key:1636336661,date:"2021-11-08T09:57:41.000Z",updated:"2023-02-13T18:28:44.000Z",tags:["JavaScript","css"],categories:["编程"],wordCount:2054,meta:[{property:"og:title",content:"github是如何根据系统主题自动切换css"},{name:"twitter:title",content:"github是如何根据系统主题自动切换css"}]}}),t({title:"github是如何根据系统主题自动切换css",meta:[{property:"og:title",content:"github是如何根据系统主题自动切换css"},{name:"twitter:title",content:"github是如何根据系统主题自动切换css"}]}),(r,s)=>(n(),p("div",l,s[0]||(s[0]=[e(`<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言">🔗</a></h1><p>最近发现 <code>github</code> 能够根据系统的主题来自动调整整个站点的样式，很神奇</p><p>决定查查看到底是如何实现的</p><h1 id="正文" tabindex="-1">正文 <a class="header-anchor" href="#正文">🔗</a></h1><p>使用的电脑环境为 <code>windows11</code> 以及最新的 <code>chrome</code> ， 版本如下</p><p><img src="https://z3.ax1x.com/2021/11/08/I3xOMV.png" alt=""></p><p><img src="https://z3.ax1x.com/2021/11/08/I3zZZD.png" alt=""></p><p>首先我们先要看看 <code>github</code> 实现的效果是怎么样的</p><p>在windows11 中的个性化 - 颜色中，我们先切换到<strong>浅色</strong>模式，如下图</p><p><img src="https://z3.ax1x.com/2021/11/08/I3zHTe.png" alt=""></p><p>然后我们打开 <code>github</code>，发现和平常基本没区别</p><p><img src="https://z3.ax1x.com/2021/11/08/I8SJ6x.png" alt=""></p><p>然后我们切换到<strong>深色</strong>模式</p><p><img src="https://z3.ax1x.com/2021/11/08/I8imo8.png" alt=""></p><p>此时可以发现，背景已经变成深灰色了，任务栏，右键菜单也统统成为了深灰色</p><p>右键菜单如下</p><p><img src="https://z3.ax1x.com/2021/11/08/I8idW4.png" alt=""></p><p>任务栏如下</p><p><img src="https://z3.ax1x.com/2021/11/08/I8iJe0.png" alt=""></p><p>这时我们返回到刚才浏览器打开的那个 <code>github</code> 页面，发现已经变成深色模式了</p><p><img src="https://z3.ax1x.com/2021/11/08/I8FbuR.png" alt=""></p><p>一个字形容，神奇！</p><p>那究竟是怎么实现的呢</p><p>没错，使用到的就是 <code>css</code> 的媒体查询</p><p>在媒体查询中，有一个查询属性为 <code>prefers-color-scheme</code> ，它的值为 <code>light</code> 或者 <code>dark</code> ，表明用户倾向于选择亮色还是暗色的配色方案</p><p>通过编写相关的代码，我们可以在相关场景下使用不同的样式</p><p>这里我们写个小 demo （使用 Vue3）</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">div</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> class</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">text</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">我是一段文字</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">div</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">style</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> scoped</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">@</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">media</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">prefers-color-scheme</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> light</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  .</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">text</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">    color</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> black</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">    background-color</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> white</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">@</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">media</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">prefers-color-scheme</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> dark</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  .</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">text</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">    color</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> white</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">    background-color</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> black</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">style</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p><img src="https://z3.ax1x.com/2021/11/08/I8Z3y4.png" alt=""></p><p>可以发现，这个时候使用的是 <code>light</code> 的样式</p><p>然后我们把系统切换到<strong>深色</strong>模式</p><p><img src="https://z3.ax1x.com/2021/11/08/I8ZTmj.png" alt=""></p><p>这个时候就是应用 <code>dark</code> 的样式了</p><p>在 <code>github</code> 中，使用 <code>css</code> 变量定义了两套 <code>css</code> 规则，来适配 <code>light</code> 和 <code>dark</code> 模式</p><p><code>dark</code> 模式对应 <code>css</code> 样式（部分）</p><p><img src="https://z3.ax1x.com/2021/11/09/ItF7bd.png" alt=""></p><p><code>light</code> 模式对应 <code>css</code> 样式（部分）</p><p><img src="https://z3.ax1x.com/2021/11/09/ItkZxU.png" alt=""></p><p>由于我这里系统开的是深色模式，所以浅色模式的样式就被覆盖了</p><p>而且从上面可以看出， <code>github</code> 使用了浅色模式的样式作为其默认的样式，通过 <code>:root</code> 这个选择器就可以看出来</p><p>从上面两个还可以看出，这里使用了 <code>css</code> 的属性选择器</p><p><code>[data-color-mode=auto]</code> ， <code>[data-dark-theme*=dark]</code> ， <code>[data-dark-theme*=light]</code> 就设置在 <code>html</code> 标签上面</p><p><img src="https://z3.ax1x.com/2021/11/09/ItkWZj.png" alt=""></p><h1 id="后记" tabindex="-1">后记 <a class="header-anchor" href="#后记">🔗</a></h1><p>媒体属性说实话用的确实少，能用到的地方大多是适配响应式布局</p><p>对其他属性了解很少</p><p>在 MDN 中，很好地为我们列出来所有的媒体查询属性</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Media_Queries/Using_media_queries" target="_blank" rel="noopener">使用媒体查询 - MDN</a></p><p>不过看起来似乎都不是很常用…</p>`,49)])))}};export{x as categories,k as date,b as default,h as key,D as meta,m as tags,g as title,y as updated,u as wordCount};
