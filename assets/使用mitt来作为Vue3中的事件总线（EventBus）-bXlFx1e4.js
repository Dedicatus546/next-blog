import{createElementBlock as n,openBlock as l,createStaticVNode as p}from"vue";const t={class:"kan-doc"},h="使用mitt来作为Vue3中的事件总线（EventBus）",g=1644846252,k="2022-02-14T21:44:12.000Z",y="2023-02-13T18:28:44.000Z",A=["JavaScript","Vue","EventBus","mitt"],B=["编程"],D=5218,c={__name:"使用mitt来作为Vue3中的事件总线（EventBus）",setup(e,{expose:a}){return a({frontmatter:{title:"使用mitt来作为Vue3中的事件总线（EventBus）",key:1644846252,date:"2022-02-14T21:44:12.000Z",updated:"2023-02-13T18:28:44.000Z",tags:["JavaScript","Vue","EventBus","mitt"],categories:["编程"],wordCount:5218}}),(r,s)=>(l(),n("div",t,s[0]||(s[0]=[p(`<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言">🔗</a></h1><p>使用 <code>mitt</code> 来作为 <code>Vue3</code> 中的事件总线（<code>EventBus</code>）</p><h1 id="正文" tabindex="-1">正文 <a class="header-anchor" href="#正文">🔗</a></h1><p>在 <code>Vue2</code> 中，我们习惯使用 <code>new Vue()</code> 来创建一个 <code>Vue</code> 实例</p><p>只使用这个实例来调用 <code>$on</code> 或者 <code>$off</code> 来添加或者删除事件回调，使用 <code>$emit</code> 来调用改事件的所有回调</p><p>这样就可以在不同组件之间进行数据传递</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-js"><span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// emitter.js</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">import</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> Vue</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> from</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">vue</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">export</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> emitter</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> Vue</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span></code></pre><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-js"><span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// main.js</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">import</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> emitter</span><span style="--s-dark:#666666;--s-light:#999999;"> }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> from</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">./emitter.js</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">Vue</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#B8A965;--s-light:#998418;">prototype</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">$emitter</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> emitter</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span></code></pre><p>使用 <code>emitter</code></p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-js"><span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// component-1</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">export</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> default</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">  methods</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">    send</span><span style="--s-dark:#666666;--s-light:#999999;">()</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#C99076;--s-light:#A65E2B;">      this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">$emitter</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">$emit</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">eventName</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">data</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    },</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  },</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span></code></pre><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-js"><span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// component-2</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">export</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> default</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">  methods</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">    callback</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">data</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">      // 打印 &#39;data&#39;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">data</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    },</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  },</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">  mounted</span><span style="--s-dark:#666666;--s-light:#999999;">()</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#C99076;--s-light:#A65E2B;">    this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">$emitter</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">$on</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">eventName</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">callback</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  },</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">  beforeDestroy</span><span style="--s-dark:#666666;--s-light:#999999;">()</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#C99076;--s-light:#A65E2B;">    this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">$emitter</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">$off</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">eventName</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">callback</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  },</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span></code></pre><p>在 <code>Vue3</code> 中，官方已经不推荐使用 <code>new Vue()</code> 来构造事件总线了</p><p>而推荐使用 <code>mitt</code> 或者 <code>tiny-emitter</code> 库来进行替代</p><blockquote><p><a href="https://v3.cn.vuejs.org/guide/migration/events-api.html#%E4%BA%8B%E4%BB%B6%E6%80%BB%E7%BA%BF" target="_blank" rel="noopener">事件总线 - 事件 API | Vue.js</a></p></blockquote><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/02/14/202202142228285.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/02/14/202202142228285.avif" alt=""></a></p><p>这两个类库的实现都是差不多的</p><h2 id="mitt" tabindex="-1">mitt <a class="header-anchor" href="#mitt">🔗</a></h2><blockquote><p><a href="https://github.com/developit/mitt" target="_blank" rel="noopener">mitt - Github</a></p></blockquote><p>使用 <code>TS</code> 编写，有完整的类型推断</p><p>支持 <code>*</code> 作为事件名</p><p><code>*</code> 作为事件名即任何 <code>emit</code> 都会触发这些事件回调</p><p>源码如下（删除部分 <code>TS</code> 类型代码）</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-typescript"><span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">export</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> default</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> mitt</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Events</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> extends</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> Record</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">EventType</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> unknown</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;&gt;(</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  all</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">?</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">EventHandlerMap</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Events</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">):</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> Emitter</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Events</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  all</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> all</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ||</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> Map</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  return</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // 存放 eventName -&gt; handler[]</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    all</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">    on</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Key</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> extends</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> keyof</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> Events</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">type</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Key</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handler</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">GenericEventHandler</span><span style="--s-dark:#666666;--s-light:#999999;">) {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">      // 从 all 这个 map 中拿到对应名字的回调列表</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">      const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handlers</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Array</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">GenericEventHandler</span><span style="--s-dark:#666666;--s-light:#999999;">&gt; | </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">undefined</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> all</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">get</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">type</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">      // 加入，特殊处理第一次加入的情况</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">      if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handlers</span><span style="--s-dark:#666666;--s-light:#999999;">) {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        handlers</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">push</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handler</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      } </span><span style="--s-dark:#4D9375;--s-light:#1E754F;">else</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        all</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">set</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">type</span><span style="--s-dark:#666666;--s-light:#999999;">, [</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handler</span><span style="--s-dark:#666666;--s-light:#999999;">] </span><span style="--s-dark:#4D9375;--s-light:#1E754F;">as</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> EventHandlerList</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Events</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">keyof</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> Events</span><span style="--s-dark:#666666;--s-light:#999999;">]&gt;);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">    off</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Key</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> extends</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> keyof</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> Events</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">type</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Key</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handler</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">?</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">GenericEventHandler</span><span style="--s-dark:#666666;--s-light:#999999;">) {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">      const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handlers</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Array</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">GenericEventHandler</span><span style="--s-dark:#666666;--s-light:#999999;">&gt; | </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">undefined</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> all</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">get</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">type</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">      if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handlers</span><span style="--s-dark:#666666;--s-light:#999999;">) {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 找到 handler 然后从数组中删除</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handler</span><span style="--s-dark:#666666;--s-light:#999999;">) {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">          handlers</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">splice</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handlers</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">indexOf</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handler</span><span style="--s-dark:#666666;--s-light:#999999;">) </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&gt;&gt;&gt;</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">1</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        } </span><span style="--s-dark:#4D9375;--s-light:#1E754F;">else</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">          // 不传 handler 则删除该事件名的全部回调</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">          all</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">set</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">type</span><span style="--s-dark:#666666;--s-light:#999999;">, []);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">    emit</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Key</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> extends</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> keyof</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> Events</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">type</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Key</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">evt</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">?</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Events</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Key</span><span style="--s-dark:#666666;--s-light:#999999;">]) {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">      let </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handlers</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> all</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">get</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">type</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">      if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handlers</span><span style="--s-dark:#666666;--s-light:#999999;">) {</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handlers</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> as</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> EventHandlerList</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Events</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">keyof</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> Events</span><span style="--s-dark:#666666;--s-light:#999999;">]&gt;)</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">          .</span><span style="--s-dark:#80A665;--s-light:#59873A;">slice</span><span style="--s-dark:#666666;--s-light:#999999;">()</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">          .</span><span style="--s-dark:#80A665;--s-light:#59873A;">map</span><span style="--s-dark:#666666;--s-light:#999999;">((</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handler</span><span style="--s-dark:#666666;--s-light:#999999;">) =&gt; {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">            // 执行</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">            handler</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">evt</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">          });</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">      // 处理 * 事件名的情况</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      handlers</span><span style="--s-dark:#666666;--s-light:#999999;"> = </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">all</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">get</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">*</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">      if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handlers</span><span style="--s-dark:#666666;--s-light:#999999;">) {</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handlers</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> as</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> WildCardEventHandlerList</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Events</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;)</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">          .</span><span style="--s-dark:#80A665;--s-light:#59873A;">slice</span><span style="--s-dark:#666666;--s-light:#999999;">()</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">          .</span><span style="--s-dark:#80A665;--s-light:#59873A;">map</span><span style="--s-dark:#666666;--s-light:#999999;">((</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">handler</span><span style="--s-dark:#666666;--s-light:#999999;">) =&gt; {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">            // 作为 * 的回调，会在第一个参数传入触发它的事件名，和具名事件的回调存在一定区别</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">            handler</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">type</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">evt</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">          });</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    },</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  };</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><h2 id="tiny-emitter" tabindex="-1">tiny-emitter <a class="header-anchor" href="#tiny-emitter">🔗</a></h2><blockquote><p><a href="https://github.com/scottcorgan/tiny-emitter" target="_blank" rel="noopener">tiny-emitter - Github</a></p></blockquote><p>有 <code>index.d.ts</code> 文件，不过源码使用 <code>js</code> 编写</p><p>不支持 <code>*</code> 作为事件名，不过封装了 <code>once</code> 方法</p><p>源码如下：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-js"><span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// 构造函数</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> E</span><span style="--s-dark:#666666;--s-light:#999999;">()</span><span style="--s-dark:#666666;--s-light:#999999;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// 覆盖原型对象，挂载公共方法</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">E</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#B8A965;--s-light:#998418;">prototype</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">  on</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> callback</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> ctx</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // 使用实例上的 \`e\` 属性来保存 eventName -&gt; handler[]</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> e</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">e</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ||</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">e</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> {});</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">e</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ||</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">e</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> [])).</span><span style="--s-dark:#80A665;--s-light:#59873A;">push</span><span style="--s-dark:#666666;--s-light:#999999;">({</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">      fn</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> callback</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">      ctx</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> ctx</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // 返回 this ， 这样可以链式调用</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    return</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> this</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">  once</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> callback</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> ctx</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> self</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> this</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // 二次封装 callback</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // 使得被 emit 之后顺便 off 掉这个回调，这样就只执行一次</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> listener</span><span style="--s-dark:#666666;--s-light:#999999;">()</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      self</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">off</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> listener</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      callback</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">apply</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ctx</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> arguments</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // 把原 callback 挂载到 _  属性上，在 off 的时候可以正确地判断</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    listener</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">_</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> callback</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    return</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">on</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> listener</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> ctx</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">  emit</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // 提取需要传递的数据</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> data</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> [].</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">slice</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">call</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">arguments</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 1</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // 获取该事件名的回调的列表</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> evtArr</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> ((</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">e</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ||</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">e</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> {}))[</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ||</span><span style="--s-dark:#666666;--s-light:#999999;"> []).</span><span style="--s-dark:#80A665;--s-light:#59873A;">slice</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> i</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> len</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> evtArr</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#B8A965;--s-light:#998418;">length</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    for</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">i</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> i</span><span style="--s-dark:#666666;--s-light:#999999;"> &lt;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> len</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> i</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">++</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">      // 调用</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      evtArr</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">i</span><span style="--s-dark:#666666;--s-light:#999999;">].</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">fn</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">apply</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">evtArr</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">i</span><span style="--s-dark:#666666;--s-light:#999999;">].</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ctx</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> data</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    return</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> this</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">  off</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> callback</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> e</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">e</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ||</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">this</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">e</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> {});</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> evts</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> e</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#666666;--s-light:#999999;">];</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> liveEvents</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> [];</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">evts</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> &amp;&amp;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> callback</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">      for</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> i</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> len</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> evts</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#B8A965;--s-light:#998418;">length</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> i</span><span style="--s-dark:#666666;--s-light:#999999;"> &lt;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> len</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> i</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">++</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 由于 once 二次封装了 callback</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 这样如果在事件未被 emit 之前调用 off 的话，虽然传给 off 的 callback 和 传给 once 的 callback 一样</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 但是无法 off 掉， 所以要加另一个判断 evts[i].fn._ !== callback 来判断是否相同</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 因为 once 把原 callback 挂载在了二次封装 callback 的 \`_\` 属性上</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">evts</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">i</span><span style="--s-dark:#666666;--s-light:#999999;">].</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">fn</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> !==</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> callback</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> &amp;&amp;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> evts</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">i</span><span style="--s-dark:#666666;--s-light:#999999;">].</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">fn</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">_</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> !==</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> callback</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">          liveEvents</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">push</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">evts</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">i</span><span style="--s-dark:#666666;--s-light:#999999;">]);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // 如果 off 掉某个 callback 之后剩下的 callback 列表为空， 那么删除该 eventName 对应的 callback 列表</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // 否则则直接替换 callback 列表</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    liveEvents</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#B8A965;--s-light:#998418;">length</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ?</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">e</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> liveEvents</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> :</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> delete</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> e</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#666666;--s-light:#999999;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    return</span><span style="--s-dark:#C99076;--s-light:#A65E2B;"> this</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  },</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">module</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#B8A965;--s-light:#998418;">exports</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> E</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">module</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#B8A965;--s-light:#998418;">exports</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">TinyEmitter</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> E</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span></code></pre><h1 id="后记" tabindex="-1">后记 <a class="header-anchor" href="#后记">🔗</a></h1><p>虽然事件总线简单易用，但是当代码复杂度上升到一定程度之后，过多的事件监听会让数据流变得晦涩难懂</p><p>官方并不鼓励使用全局的事件总线来进行组件间的通信</p><p>我们可以通过其他的方法来实现相同的效果</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/02/14/202202142231767.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/02/14/202202142231767.avif" alt=""></a></p><p>比如提到的</p><ul><li><code>prop</code> 和 <code>emit</code> （父子组件通信）</li><li><code>provide</code> 和 <code>inject</code> （父传后代）</li><li><code>expose</code> 和 <code>ref</code> （子传父）</li><li>全局状态管理 <code>Vuex</code> 或者 <code>Pinia</code> （提取全局状态）</li><li><code>v-slot</code> 暴露变量（子传父）</li></ul>`,36)])))}};export{B as categories,k as date,c as default,g as key,A as tags,h as title,y as updated,D as wordCount};
