import{createElementBlock as t,openBlock as n,createStaticVNode as l}from"vue";const p={class:"kan-doc"},g="在 vue3 中动态引入 assets 内的图片",h=["Vue","JavaScript"],k=["编程"],y="2025-02-13T11:13:54.000Z",c="2025-02-13T11:13:54.000Z",o=1739416435,D=3385,B={__name:"在-vue3-中动态引入-assets-内的图片",setup(e,{expose:a}){return a({frontmatter:{title:"在 vue3 中动态引入 assets 内的图片",tags:["Vue","JavaScript"],categories:["编程"],date:"2025-02-13T11:13:54.000Z",updated:"2025-02-13T11:13:54.000Z",key:1739416435,wordCount:3385}}),(r,s)=>(n(),t("div",p,s[0]||(s[0]=[l(`<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言">🔗</a></h1><p>在 vue3 中动态引入 <code>assets</code> 内的图片。</p><p>最近公司要把一个旧系统的几个页面迁移到新的系统上，从 vue2 迁移到 vue3 ，原来的项目是基于 webpack 的，在引入图片的时候似乎可以通过动态的 <code>require</code> 来引入，而在新项目中，esm 环境下没有 <code>require</code> ，并且 vite 对 <code>img</code> 的 <code>src</code> 的解析也是基于静态的，如果动态构造 <code>src</code> 则会出现路径不正确问题。</p><h1 id="正文" tabindex="-1">正文 <a class="header-anchor" href="#正文">🔗</a></h1><h2 id="vue2-中的引入" tabindex="-1">vue2 中的引入 <a class="header-anchor" href="#vue2-中的引入">🔗</a></h2><p>vue2 中，引入图片一般使用 <code>require</code> ，如下：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">img</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> :src</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">require(&#39;./image.jpg&#39;)</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;"> /&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p>启动之后， webpack 会生成一份路径对真实地址的映射代码，即类似如下：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> map</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">  &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">image.jpg</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">image.b43b3ab.jpg</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span></code></pre><p>这样实际的 html 结构中，就会看到：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">img</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> src</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">./image.b43b3ab.jpg</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;"> /&gt;</span></span></code></pre><h2 id="在-vue3-中的引入" tabindex="-1">在 vue3 中的引入 <a class="header-anchor" href="#在-vue3-中的引入">🔗</a></h2><p>由于 esm 环境中没有 <code>require</code> ，vue2 的引入方式不再适用，如果只是静态的图片路径，那么 vite 可以很好地处理：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">img</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> src</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">./image.jpg</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;"> /&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p>在开发环境下， <code>src</code> 的值被处理为 <code>./src/image.jpg</code> ，而在生产环境下， <code>src</code> 的值被处理为 <code>/assets/image-Di8ve3U_.jpg</code> 。</p><p>但是如果 <code>src</code> 为一个动态的变量，那么这些处理就会失效：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">img</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> :src</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">&#39;./image.jpg&#39;</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;"> /&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p>在开发环境和生产环境， <code>src</code> 的值都被处理为 <code>./image.jpg</code> ，这不符合实际的路径，并且此时如果观察构建产物的话， <code>src/image.jpg</code> 这个文件是不会被打包进来的。</p><p>在 vite 文档中 <a href="https://cn.vite.dev/guide/features.html#html" target="_blank" rel="noopener">features - html</a> 提到了这一点。</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2025/02/13/20250213094729746.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2025/02/13/20250213094729746.avif" alt=""></a></p><p>从上图可以知道，这个特性只是对某些元素生效的，如果你是自定义一个组件的话，那么路径处理是不会生效的。</p><p>那么我们得如何引入图片呢，在 vue3 中，我们可以直接使用 <code>import</code> 来导入一张图片的路径</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">img</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> :src</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">IMAGE</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;"> /&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> setup</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">import</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> IMAGE</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> from</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">./image.jpg</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p>当然，这并不符合我们这篇帖子的主题，我们希望的是能够动态构建一个图片的地址，并保证这个地址在任何地方可用。</p><p>在 esm 中，我们可以使用 <code>URL</code> 对象以及 <code>import.meta.url</code> 来动态构建资源路径。比如上面例子的代码可以重写为：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">img</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> :src</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">image</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;"> /&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> setup</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> image</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> URL</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">./image.jpg</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> import</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#B8A965;--s-light:#998418;">meta</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">url</span><span style="--s-dark:#666666;--s-light:#999999;">).</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">href</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p>这样子图片就能正确被引入，并且在开发环境和生产环境下都能正确处理。</p><p>在上面的例子中，<code>&quot;./image.jpg&quot;</code> 是一个静态的常量，我们也可以将其设置为含有动态变量的字符串。</p><p>想象一下在 <code>src/assets/images/</code> 下有 <code>0.jpg</code> 、 <code>1.jpg</code> 和 <code>2.jpg</code> ，然后还有个按钮，每次点击就从当前图片跳到下一张图片：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">img</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> :src</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">image</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;"> /&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">button</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> @click</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">index = (index + 1) % 3</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">+1</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">button</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> setup</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">import</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> ref</span><span style="--s-dark:#666666;--s-light:#999999;"> }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> from</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">vue</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> index</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> ref</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">0</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> image</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> URL</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">\`</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">./assets/images/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">\${</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">index</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">value</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">}</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">.jpg</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">\`</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> import</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#B8A965;--s-light:#998418;">meta</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">url</span><span style="--s-dark:#666666;--s-light:#999999;">).</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">href</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p>这样的代码在 vue3 中可以很好的工作，打包后也能正确地将相关的文件引用进来，在开发环境中，我们可以看到它是将 <code>./assets/images/</code> 下的所有 jpg 图片都导入了：</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2025/02/13/20250213103036157.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2025/02/13/20250213103036157.avif" alt=""></a></p><p>当然这个动态也是有一些限定的东西，比如这个路径必须是“静态”的，如果直接传入一个动态的变量，那么开发环境可能不会出现问题，但打包后不会引入相关的图片。</p><p>纯动态变量不会生效：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> setup</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">import</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> ref</span><span style="--s-dark:#666666;--s-light:#999999;"> }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> from</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">vue</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> url</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> ref</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> image</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> URL</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">url</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> import</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#B8A965;--s-light:#998418;">meta</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">url</span><span style="--s-dark:#666666;--s-light:#999999;">).</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">href</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p>转换后代码如下：</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2025/02/13/20250213104909530.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2025/02/13/20250213104909530.avif" alt=""></a></p><p>多字符串拼接，也不会生效：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> setup</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">import</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> ref</span><span style="--s-dark:#666666;--s-light:#999999;"> }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> from</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">vue</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> url</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> ref</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> image</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> URL</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">./assets/</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> +</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> url</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> import</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#B8A965;--s-light:#998418;">meta</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">url</span><span style="--s-dark:#666666;--s-light:#999999;">).</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">href</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p>转换后代码如下：</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2025/02/13/20250213105621831.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2025/02/13/20250213105621831.avif" alt=""></a></p><p>这一点在 vite 的<a href="https://cn.vite.dev/guide/assets.html#new-url-url-import-meta-url" target="_blank" rel="noopener">静态资源处理 | Vite 官方中文文档</a>文档中有提及。</p><h1 id="后记" tabindex="-1">后记 <a class="header-anchor" href="#后记">🔗</a></h1><p>使用 <code>URL</code> 配合 <code>import.meta.url</code> 的好处是可以动态的处理一些图片导入，坏处就是对应路径下的图片都会被导入，所以做好一些路径分割很重要，将动态路径的图片分配到单独的文件夹，再通过 <code>URL</code> 引入，这样产物就不会包含太多无关的文件了。</p>`,44)])))}};export{k as categories,y as date,B as default,o as key,h as tags,g as title,c as updated,D as wordCount};
