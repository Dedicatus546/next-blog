import{createElementBlock as n,openBlock as t,createStaticVNode as l}from"vue";const p={class:"kan-doc"},g="美团2021校招前端笔试题",y=1603598618,h="2020-10-25T12:03:38.000Z",k="2023-02-13T18:28:43.000Z",A=["JavaScript","前端笔试题"],D=["笔试"],B=10872,c={__name:"2021美团校招前端笔试题",setup(e,{expose:a}){return a({frontmatter:{title:"美团2021校招前端笔试题",key:1603598618,date:"2020-10-25T12:03:38.000Z",updated:"2023-02-13T18:28:43.000Z",tags:["JavaScript","前端笔试题"],categories:["笔试"],wordCount:10872}}),(d,s)=>(t(),n("div",p,s[0]||(s[0]=[l(`<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言">🔗</a></h1><p>在美团的校招尾声试着投了下，百度应该是没了，就一直挂着，挺揪心的，不过也无所谓了，当作尝试吧。</p><p>早上<code>10</code>点到<code>12</code>点，做的还行把，总共<code>5</code>道，<code>ac</code>了<code>4</code>道，<code>1</code>道确实不会😂</p><h1 id="题目" tabindex="-1">题目 <a class="header-anchor" href="#题目">🔗</a></h1><h2 id="争夺地盘" tabindex="-1">争夺地盘 <a class="header-anchor" href="#争夺地盘">🔗</a></h2><p><a data-fancybox="doc-gallery" href="https://i.loli.net/2020/10/25/xGKEzRghfrw3I9A.png" target="_blank" rel="noopener noreferrer"><img src="https://i.loli.net/2020/10/25/xGKEzRghfrw3I9A.png" alt=""></a></p><p>第一题，感觉是白给的，做做循环累加数量即可</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-java"><span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">import</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> java</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">util</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">HashSet</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">import</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> java</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">util</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">Scanner</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">import</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> java</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">util</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">Set</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">public</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> class</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> Main</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    public</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> static</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> void</span><span style="--s-dark:#80A665;--s-light:#59873A;"> main</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">String</span><span style="--s-dark:#666666;--s-light:#999999;">[]</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> args</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 输入</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">        Scanner</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> in</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> Scanner</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">System</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">in</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> n</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> in</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">nextInt</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> p</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> in</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">nextInt</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> q</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> in</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">nextInt</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 把A想要的p块土地的序号丢到set里面</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">        Set</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">Integer</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> setA</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> new</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> HashSet</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;&gt;(</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">p</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        for</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> i</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&lt;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> p</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">++</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">            setA</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">add</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">in</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">nextInt</span><span style="--s-dark:#666666;--s-light:#999999;">());</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // B想要的q块存数组即可</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#666666;--s-light:#999999;">[]</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> B</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> new</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> int</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">q</span><span style="--s-dark:#666666;--s-light:#999999;">];</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        for</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> i</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&lt;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> q</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">++</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">            B</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">i</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> in</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">nextInt</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">        </span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 两个国家共同想要的土地序号存在set里面</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">        Set</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">Integer</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> r</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> new</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> HashSet</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;&gt;();</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 遍历B，如果setA里面也有，加入r里面</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        for</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> i</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&lt;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> q</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">++</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">            if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">setA</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">contains</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">B</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">i</span><span style="--s-dark:#666666;--s-light:#999999;">]))</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">                r</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">add</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">B</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">i</span><span style="--s-dark:#666666;--s-light:#999999;">]);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">            }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 现在有两个国家共同想要的土地序号了，直接遍历计数即可</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> cA</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> cB</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 遍历setA找A单独想要的土地序号</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        for</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> i</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> :</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> setA</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">            if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">r</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">contains</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">i</span><span style="--s-dark:#666666;--s-light:#999999;">))</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">                cA</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">++</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">            }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 遍历B找到B到哪都想要的土地序号</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        for</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> i</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> :</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> B</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">            if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">r</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">contains</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">i</span><span style="--s-dark:#666666;--s-light:#999999;">))</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">                cB</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">++</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">            }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 输出</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        System</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">out</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">println</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">cA </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">+</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> +</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> cB </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">+</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> +</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> r</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">size</span><span style="--s-dark:#666666;--s-light:#999999;">());</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p>不看输入操作，时间复杂度<code>O(p + 2q)=O(p + q)</code>（应该是这么计算的把😂）</p><p>空间复杂度（这里不算数组<code>B</code>）最好情况下<code>O(Math.min(p,q))</code>，也就是<code>setA</code>此时为长度较小的一方，且没有公共的土地序号（<code>r</code>长度为<code>0</code>）</p><p>最坏情况下<code>O(p + q)</code></p><h2 id="修改大小写" tabindex="-1">修改大小写 <a class="header-anchor" href="#修改大小写">🔗</a></h2><p><a data-fancybox="doc-gallery" href="https://i.loli.net/2020/10/25/gBJDt1pVGiLKqjC.png" target="_blank" rel="noopener noreferrer"><img src="https://i.loli.net/2020/10/25/gBJDt1pVGiLKqjC.png" alt=""></a></p><p>第二题，感觉还是白给，对大小写计数，然后与长度的<code>1/2</code>相减即可</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-java"><span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">import</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> java</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">util</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">Scanner</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">public</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> class</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> Main</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    public</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> static</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> void</span><span style="--s-dark:#80A665;--s-light:#59873A;"> main</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">String</span><span style="--s-dark:#666666;--s-light:#999999;">[]</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> args</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">        Scanner</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> in</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> Scanner</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">System</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">in</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">        String</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> p</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> in</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">next</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> len</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> p</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">length</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 大写字符个数</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> upperCount</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 计数</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        for</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> i</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&lt;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> len</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">++</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">            if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">p</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">charAt</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">i</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> &gt;=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">A</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> &amp;&amp;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> p</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">charAt</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">i</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> &lt;=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Z</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">                upperCount</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">++</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">            }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 通过大写字符推出小写字符</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> lowerCount</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> len </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">-</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> upperCount</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 为了使数量相同，大写小写应该都是len/2的个数，然后就是和大写或者小写个数相减即可</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        System</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">out</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">println</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">len </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">/</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 2</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> -</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> Math</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">min</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">lowerCount</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> upperCount</span><span style="--s-dark:#666666;--s-light:#999999;">));</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 下面这样写也可以</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // System.out.println(Math.max(lowerCount, upperCount) - len / 2);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><h2 id="式子求值" tabindex="-1">式子求值 <a class="header-anchor" href="#式子求值">🔗</a></h2><p><a data-fancybox="doc-gallery" href="https://i.loli.net/2020/10/25/bQS9AisXF5aWKd7.png" target="_blank" rel="noopener noreferrer"><img src="https://i.loli.net/2020/10/25/bQS9AisXF5aWKd7.png" alt=""></a></p><p>这道花了最多的时间，思路没错</p><p>就是刚开始没想到其实可以先开个数组把累计异或的数组求出来，后面直接使用</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-java"><span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">import</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> java</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">util</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">Scanner</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">public</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> class</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> Main</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    public</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> static</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> void</span><span style="--s-dark:#80A665;--s-light:#59873A;"> main</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">String</span><span style="--s-dark:#666666;--s-light:#999999;">[]</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> args</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 输入</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">        Scanner</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> in</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> Scanner</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">System</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">in</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> len</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> in</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">nextInt</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#666666;--s-light:#999999;">[]</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> array</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> new</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> int</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">len</span><span style="--s-dark:#666666;--s-light:#999999;">];</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        for</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> i</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&lt;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> len</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">++</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">            array</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">i</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> in</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">nextInt</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">        </span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 这个dp的意思就是dp[k]，代表1^2^3^4^...^k的值</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#666666;--s-light:#999999;">[]</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> dp</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> new</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> int</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">len </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">+</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 1</span><span style="--s-dark:#666666;--s-light:#999999;">];</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        for</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> i</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 1</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&lt;=</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> len</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">++</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">            dp</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">i</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">^</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> dp</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">i </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">-</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 1</span><span style="--s-dark:#666666;--s-light:#999999;">];</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">        </span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 根据题意，完全可以先把每个元素异或，用result保存</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> result</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        for</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> i</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&lt;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> len</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">++</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">            result </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">^</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> array</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">i</span><span style="--s-dark:#666666;--s-light:#999999;">];</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">        </span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 本题的核心过程</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        for</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> i</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 1</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&lt;=</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> len</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">++</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">            int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> r</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> len </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">%</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">            int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> c</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> len </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">/</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">            if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">c </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">%</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 2</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> !=</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">                result </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">^</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> dp</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">i </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">-</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 1</span><span style="--s-dark:#666666;--s-light:#999999;">];</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">            }</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">            if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">r </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&gt;</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">                result </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">^</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> dp</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">r</span><span style="--s-dark:#666666;--s-light:#999999;">];</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">            }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">        </span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 输出</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        System</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">out</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">println</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">result</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p>这题难点就是上面我标的核心过程这段，我们可假设现在有<code>6</code>个数，也就是说现在要<code>mod1</code>一直到<code>mod6</code></p><p>比如现在位于第一个数<code>n1</code>，那么异或的过程就是</p><p><code>n1 ^ (1 % 6) ^ (2 % 6) ^ (3 % 6) ^ (4 % 6) ^ (5 % 6) ^ (6 % 6)</code></p><p>我们可以列出来一个表，如下</p><table><thead><tr><th style="text-align:center;"></th><th style="text-align:center;">mod1</th><th style="text-align:center;">mod2</th><th style="text-align:center;">mod3</th><th style="text-align:center;">mod4</th><th style="text-align:center;">mod5</th><th style="text-align:center;">mod6</th></tr></thead><tbody><tr><td style="text-align:center;">n1</td><td style="text-align:center;">0</td><td style="text-align:center;">1</td><td style="text-align:center;">1</td><td style="text-align:center;">1</td><td style="text-align:center;">1</td><td style="text-align:center;">1</td></tr><tr><td style="text-align:center;">n2</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">2</td><td style="text-align:center;">2</td><td style="text-align:center;">2</td><td style="text-align:center;">2</td></tr><tr><td style="text-align:center;">n3</td><td style="text-align:center;">0</td><td style="text-align:center;">1</td><td style="text-align:center;">0</td><td style="text-align:center;">3</td><td style="text-align:center;">3</td><td style="text-align:center;">3</td></tr><tr><td style="text-align:center;">n4</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">1</td><td style="text-align:center;">0</td><td style="text-align:center;">4</td><td style="text-align:center;">4</td></tr><tr><td style="text-align:center;">n5</td><td style="text-align:center;">0</td><td style="text-align:center;">1</td><td style="text-align:center;">2</td><td style="text-align:center;">1</td><td style="text-align:center;">0</td><td style="text-align:center;">5</td></tr><tr><td style="text-align:center;">n6</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">2</td><td style="text-align:center;">1</td><td style="text-align:center;">0</td></tr></tbody></table><p>刚开始的时候我列了这个表，试图从横向来找规律，使得能够在<code>O(1)</code>时间内得到异或的结果，不过没想出来</p><p>卡了一会之后，尝试在纵向上做文章，发现了纵向上数字的规律</p><p>首先我们要知道异或，也就是<code>^</code>这个符号的意思，也就是二进制的两个位相同为<code>0</code>，不同为<code>1</code>，也就是</p><p><code>1 ^ 1 == 0, 0 ^ 1 == 1</code></p><p>对于两个相同的数字，他们的二进制表示是一样的，那么异或之后就会为<code>0</code></p><p>OK，回到上边那个表，我们可以每一列进行分析</p><ul><li>对于<code>mod1</code>这一列，结果都是<code>0</code>，不太好看出规律</li><li>对于<code>mod2</code>这一列，<code>1，3，5</code>对<code>mod2</code>的结果是一样的，<code>2，4，6</code>也是，也就是数据可以分成<code>3</code>组</li><li>对于<code>mod3</code>这一列，<code>1，4</code>|<code>2，5</code>|<code>3，6</code>对<code>mod3</code>结果是相同的，也就是数据分成了两组</li><li>对于<code>mod4</code>这一列，<code>1，5</code>|<code>2，6</code>|<code>3</code>|<code>4</code>对<code>mod4</code>结果相同，这里<code>3</code>，<code>4</code><strong>没有下一个数字与之对应</strong></li><li>对于<code>mod5</code>这一列，<code>1，6</code>|<code>2</code>|<code>3</code>|<code>4</code>|<code>5</code>对<code>mod5</code>结果相同，这里<code>2</code>，<code>3</code>，<code>4</code>，<code>5</code><strong>没有下一个数字与之对应</strong></li><li>对于<code>mod6</code>这一列，<code>1</code>|<code>2</code>|<code>3</code>|<code>4</code>|<code>5</code>|<code>6</code>对<code>mod6</code>结果相同，这里每个数都没有<strong>没有下一个数字与之对应</strong></li></ul><p>那么根据上面的分析，表可以变为</p><div class="table-container"><table><thead><tr><th align="center"></th><th align="center">mod1</th><th align="center">mod2</th><th align="center">mod3</th><th align="center">mod4</th><th align="center">mod5</th><th align="center">mod6</th></tr></thead><tbody><tr><td align="center">n1</td><td align="center" style="background-color:rgb(253,255,141);">0</td><td align="center" style="background-color:rgb(253,255,141);">1</td><td align="center" style="background-color:rgb(253,255,141);">1</td><td align="center" style="background-color:rgb(253,255,141);">1</td><td align="center" style="background-color:rgb(253,255,141);">1</td><td align="center" style="background-color:rgb(253,255,141);">1</td></tr><tr><td align="center">n2</td><td align="center" style="background-color:rgb(141,238,255);">0</td><td align="center" style="background-color:rgb(253,255,141);">0</td><td align="center" style="background-color:rgb(253,255,141);">2</td><td align="center" style="background-color:rgb(253,255,141);">2</td><td align="center" style="background-color:rgb(253,255,141);">2</td><td align="center" style="background-color:rgb(253,255,141);">2</td></tr><tr><td align="center">n3</td><td align="center" style="background-color:rgb(253,255,141);">0</td><td align="center" style="background-color:rgb(141,238,255);">1</td><td align="center" style="background-color:rgb(253,255,141);">0</td><td align="center" style="background-color:rgb(253,255,141);">3</td><td align="center" style="background-color:rgb(253,255,141);">3</td><td align="center" style="background-color:rgb(253,255,141);">3</td></tr><tr><td align="center">n4</td><td align="center" style="background-color:rgb(141,238,255);">0</td><td align="center" style="background-color:rgb(141,238,255);">0</td><td align="center" style="background-color:rgb(141,238,255);">1</td><td align="center" style="background-color:rgb(253,255,141);">0</td><td align="center" style="background-color:rgb(253,255,141);">4</td><td align="center" style="background-color:rgb(253,255,141);">4</td></tr><tr><td align="center">n5</td><td align="center" style="background-color:rgb(253,255,141);">0</td><td align="center" style="background-color:rgb(253,255,141);">1</td><td align="center" style="background-color:rgb(141,238,255);">2</td><td align="center" style="background-color:rgb(141,238,255);">1</td><td align="center" style="background-color:rgb(253,255,141);">0</td><td align="center" style="background-color:rgb(253,255,141);">5</td></tr><tr><td align="center">n6</td><td align="center" style="background-color:rgb(141,238,255);">0</td><td align="center" style="background-color:rgb(253,255,141);">0</td><td align="center" style="background-color:rgb(141,238,255);">0</td><td align="center" style="background-color:rgb(141,238,255);">2</td><td align="center" style="background-color:rgb(141,238,255);">1</td><td align="center" style="background-color:rgb(253,255,141);">0</td></tr></tbody></table></div><p>没错，每列都一直在重复，比如</p><p>第二列<code>1-&gt;0</code>为重复序列</p><p>第三列<code>1-&gt;2-&gt;0</code>为重复序列</p><p>第四列<code>1-&gt;2-&gt;3-&gt;0</code>为重复序列</p><p>第四列<code>1-&gt;2-&gt;3-&gt;4-&gt;0</code>为重复序列</p><p>那么结合之前说的异或的性质，如果是偶数次重复且没有剩余元素的话的话，那么本列结果一定为<code>0</code>，</p><p>如果奇数次重复且没有剩余元素，那么只要计算一次重复的序列</p><p>如果存在剩余元素，那么再单独异或然后加入结果集即可</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-java"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">public</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> class</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> Main</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    public</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> static</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> void</span><span style="--s-dark:#80A665;--s-light:#59873A;"> main</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">String</span><span style="--s-dark:#666666;--s-light:#999999;">[]</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> args</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // ...</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">        </span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 本题的核心过程</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 每次循环计算1列的值</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        for</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> i</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 1</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&lt;=</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> len</span><span style="--s-dark:#666666;--s-light:#999999;">;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">++</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">            // 计算重复序列的次数</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">            int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> r</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> len </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">%</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">            // 计算不足一次重复序列的数字数量</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">            int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> c</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> len </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">/</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> i</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">            // 奇数次</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">            if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">c </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">%</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 2</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> !=</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">                // i-1是因为重复序列最后一个数必是0</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">                result </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">^</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> dp</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">i </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">-</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 1</span><span style="--s-dark:#666666;--s-light:#999999;">];</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">            }</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">            // 剩余元素加入，不足一次重复序列</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">            if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">r </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&gt;</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">                result </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">^</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> dp</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">r</span><span style="--s-dark:#666666;--s-light:#999999;">];</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">            }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">        </span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // ...</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p>刚开始没使用<code>dp</code>来提前计算累计的异或的话，还是超时，使用之后，就可以通过了。</p><h2 id="公司管理" tabindex="-1">公司管理 <a class="header-anchor" href="#公司管理">🔗</a></h2><p><a data-fancybox="doc-gallery" href="https://i.loli.net/2020/10/25/X1GTuWFSdlHf5wO.png" target="_blank" rel="noopener noreferrer"><img src="https://i.loli.net/2020/10/25/X1GTuWFSdlHf5wO.png" alt="1.png"></a></p><p>这题完全看不懂啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊，最后没时间做了…🤣</p><h2 id="矩阵游戏" tabindex="-1">矩阵游戏 <a class="header-anchor" href="#矩阵游戏">🔗</a></h2><p><a data-fancybox="doc-gallery" href="https://i.loli.net/2020/10/25/6HyMKmel1I8nObu.png" target="_blank" rel="noopener noreferrer"><img src="https://i.loli.net/2020/10/25/6HyMKmel1I8nObu.png" alt=""></a></p><p>这题放在第二部分的卷子，刚开始看感觉很难，但是试了试其实不难，递归回到<code>2x2</code>的情况即可</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-java"><span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">import</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> java</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">util</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">Scanner</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">public</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> class</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> Main</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    public</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> static</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> void</span><span style="--s-dark:#80A665;--s-light:#59873A;"> main</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">String</span><span style="--s-dark:#666666;--s-light:#999999;">[]</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> args</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 输入</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">        Scanner</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> in</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> Scanner</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">System</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">in</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> a</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> in</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">nextInt</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> b</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> in</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">nextInt</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> c</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> in</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">nextInt</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> n</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> in</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">nextInt</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 输出次数循环</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        while</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">n </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&gt;</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">            int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> x</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> in</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">nextInt</span><span style="--s-dark:#666666;--s-light:#999999;">()</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> -</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 1</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">            int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> y</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> in</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">nextInt</span><span style="--s-dark:#666666;--s-light:#999999;">()</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> -</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 1</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">            // 构造一个2x2数组</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">            int</span><span style="--s-dark:#666666;--s-light:#999999;">[][]</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> twoXTwo</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">                    {</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">0</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> a</span><span style="--s-dark:#666666;--s-light:#999999;">},</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">                    {</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">b</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> c</span><span style="--s-dark:#666666;--s-light:#999999;">}</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">            };</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">            // 对输入的点(x,y)进行递归</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">            int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> r</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> dfs</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">x</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> y</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> twoXTwo</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">            // 输出</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">            System</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">out</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">println</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">r</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">            n</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">--</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    static</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> int</span><span style="--s-dark:#80A665;--s-light:#59873A;"> dfs</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> x</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> y</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> int</span><span style="--s-dark:#666666;--s-light:#999999;">[][]</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> twoXTwo</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 已经在2x2范围内了，直接返回对应位置的值</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">x </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&lt;</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 2</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> &amp;&amp;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> y </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&lt;</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 2</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">            return</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> twoXTwo</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">x</span><span style="--s-dark:#666666;--s-light:#999999;">][</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">y</span><span style="--s-dark:#666666;--s-light:#999999;">];</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 找到这个坐标最少应该是几x几的格子</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> len</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 2</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> max</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> Math</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">max</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">x</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> y</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        while</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">len </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&lt;=</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> max</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">            len </span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> len </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">*</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 2</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">        </span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 计算这个坐标位于哪个位置，左上，左下，右上，右下</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> div</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> len </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">/</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 2</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">        int</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> result</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">x </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&gt;=</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> div </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&amp;&amp;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> y </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&gt;=</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> div</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">            // 右下角元素</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">            result </span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> twoXTwo</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">1</span><span style="--s-dark:#666666;--s-light:#999999;">][</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">1</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> +</span><span style="--s-dark:#80A665;--s-light:#59873A;"> dfs</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">x </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">-</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> div</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> y </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">-</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> div</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> twoXTwo</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> else</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">x </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&lt;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> div </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&amp;&amp;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> y </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">&gt;=</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> div</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">            // 左上角元素</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">            result </span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> twoXTwo</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">0</span><span style="--s-dark:#666666;--s-light:#999999;">][</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">1</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> +</span><span style="--s-dark:#80A665;--s-light:#59873A;"> dfs</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">x</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> y </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">-</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> div</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> twoXTwo</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> else</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">            // 左下角元素</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">            result </span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> twoXTwo</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">1</span><span style="--s-dark:#666666;--s-light:#999999;">][</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">0</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> +</span><span style="--s-dark:#80A665;--s-light:#59873A;"> dfs</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">x </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">-</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> div</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> y</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> twoXTwo</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">        // 根据题意取mod</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        return</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> result </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">%</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 1000000000</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><h1 id="后记" tabindex="-1">后记 <a class="header-anchor" href="#后记">🔗</a></h1><p>总体上感觉很好，难度适中，下次一定还来😂</p>`,53)])))}};export{D as categories,h as date,c as default,y as key,A as tags,g as title,k as updated,B as wordCount};
