import{createElementBlock as n,openBlock as t,createStaticVNode as l}from"vue";import{c as p}from"./app-CGnJzz9B.js";import"nprogress";import"pinia-plugin-persistedstate";import"vue-router";import"vue-router-better-scroller";import"@vueuse/core";import"@vueuse/components";import"@vueuse/router";import"octokit";import"pinia";import"date-fns";const e={class:"kan-doc"},u="ECMAScript2024（es15）新特性",b=["JavaScript"],E=["笔记"],v="2024-11-25T15:04:25.000Z",x="2024-11-28T15:07:45.000Z",j=1732777665,w=5286,S=[{property:"og:title",content:"ECMAScript2024（es15）新特性"},{name:"twitter:title",content:"ECMAScript2024（es15）新特性"}],_={__name:"ECMAScript2024（es15）新特性",setup(i,{expose:a}){return a({frontmatter:{title:"ECMAScript2024（es15）新特性",tags:["JavaScript"],categories:["笔记"],date:"2024-11-25T15:04:25.000Z",updated:"2024-11-28T15:07:45.000Z",key:1732777665,wordCount:5286,meta:[{property:"og:title",content:"ECMAScript2024（es15）新特性"},{name:"twitter:title",content:"ECMAScript2024（es15）新特性"}]}}),p({title:"ECMAScript2024（es15）新特性",meta:[{property:"og:title",content:"ECMAScript2024（es15）新特性"},{name:"twitter:title",content:"ECMAScript2024（es15）新特性"}]}),(h,s)=>(t(),n("div",e,s[0]||(s[0]=[l(`<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言">🔗</a></h1><p>ECMAScript2024（es15）新特性</p><p>参考文章：</p><ul><li><a href="https://2ality.com/2024/06/ecmascript-2024.html" target="_blank" rel="noopener">ECMAScript 2024: What’s new?</a></li><li><a href="https://exploringjs.com/js/book/ch_regexps.html#regexp-flag-unicode-sets" target="_blank" rel="noopener">Regular expressions (RegExp)</a></li></ul><h1 id="正文" tabindex="-1">正文 <a class="header-anchor" href="#正文">🔗</a></h1><h2 id="map-groupby-和-object-groupby" tabindex="-1">Map.groupBy() 和 Object.groupBy() <a class="header-anchor" href="#map-groupby-和-object-groupby">🔗</a></h2><p>官方支持的分组函数，再也不用引入 <a href="https://www.lodashjs.com/docs/lodash.groupBy" target="_blank" rel="noopener">lodash.groupBy</a> 了。</p><p>为什么要定义两个方法呢，其实是两者都是将可迭代对象转为 <code>Map</code> 或者 <code>Object</code> ，<code>Map.groupBy()</code> 返回一个 <code>Map</code> ，而 <code>Object.groupBy()</code> 返回一个 <code>Object</code> 。</p><p><code>Map.groupBy()</code> 和 <code>Object.groupBy() </code>的参数都为一个可迭代对象以及一个分组函数。</p><p><code>Map.groupBy()</code> 例子：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> map</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> Map</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">groupBy</span><span style="--s-dark:#666666;--s-light:#999999;">([</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">-</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">3</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> -</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">2</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> -</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">1</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 1</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 2</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 3</span><span style="--s-dark:#666666;--s-light:#999999;">],</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">item</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> index</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  return</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> item</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ===</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ?</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">=0</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    :</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> item</span><span style="--s-dark:#666666;--s-light:#999999;"> &gt;</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> </span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">      ?</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">&gt;0</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">      :</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">&lt;0</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> </span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">map</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span></code></pre><p>结果如下：</p><p><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2024/11/25/20241125155005264.avif" alt=""></p><p>注意这里返回的分组函数为键的值，这些值会作为 <code>Map</code> 的 <code>key</code> 或者 <code>Object</code> 的属性名。</p><p><code>Object.groupBy()</code> 例子：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> obj</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> Object</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">groupBy</span><span style="--s-dark:#666666;--s-light:#999999;">([</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">-</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">3</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> -</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">2</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> -</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">1</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 1</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 2</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 3</span><span style="--s-dark:#666666;--s-light:#999999;">],</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">item</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> index</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  return</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> item</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ===</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ?</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">=0</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    :</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> item</span><span style="--s-dark:#666666;--s-light:#999999;"> &gt;</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">      ?</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">&gt;0</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">      :</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">&lt;0</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">obj</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span></code></pre><p>结果如下：</p><p><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2024/11/25/20241125155157094.avif" alt=""></p><h2 id="promise-withresolvers" tabindex="-1">Promise.withResolvers() <a class="header-anchor" href="#promise-withresolvers">🔗</a></h2><p>某些时候，我们需要把 Promise 的 <code>resolve</code> 和 <code>reject</code> 提取到参数外，一般我们会封装如下的方法：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#80A665;--s-light:#59873A;"> createPromise</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> ()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  let</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> resolve</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> reject</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> promise</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#B8A965;--s-light:#998418;"> Promise</span><span style="--s-dark:#666666;--s-light:#999999;">((</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">_resolve</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> _reject</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    resolve</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> _resolve</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    reject</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> _reject</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  });</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  return</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    promise</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    resolve</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    reject</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  };</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p>这样我们可以把 <code>resolve</code> 和 <code>reject</code> 当作普通函数一样用于其他的文件的任何位置。</p><p>现在官方也是直接支持了这个方法，又可以少写几行代码了：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> promise</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> resolve</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> reject</span><span style="--s-dark:#666666;--s-light:#999999;"> }</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#B8A965;--s-light:#998418;"> Promise</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">withResolvers</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">promise</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">then</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">resolve</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// 一个脱离 Promise 包装器的函数，可以解决 promise</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// 输出 &#39;resolve&#39;</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">resolve</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span></code></pre><h2 id="正则的-v-标志" tabindex="-1">正则的 /v 标志 <a class="header-anchor" href="#正则的-v-标志">🔗</a></h2><p>正则相关的升级， <code>/v</code> 为 <code>/u</code> 模式的升级，对 unicode 的支持更加完善。</p><p>在 <code>/u</code> 模式下，对应的是否开启字段为 <code>RegExp.prototype.unicode</code> ， 而 /v 为 <code>RegExp.prototype.unicodeSets</code> 。</p><p>如果你用正则比较多，那么只要知道如果需要处理 unicode 的话，使用 <code>/v</code> 而不用 <code>/u</code> 了（如果环境支持，这两者互斥，不要一起使用）。 <code>/v</code> 支持 <code>/u</code> 的所有特性。</p><h3 id="多码点-unicode-支持" tabindex="-1">多码点 unicode 支持 <a class="header-anchor" href="#多码点-unicode-支持">🔗</a></h3><p><code>/u</code> 模式对多码点的 unicode 支持不完善，比如：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">^</span><span style="--s-dark:#E6CC77;--s-light:#BDA437;">\\p</span><span style="--s-dark:#C4704F;--s-light:#AB5E3F;">{Emoji}</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">$</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">u</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">test</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">😵‍💫</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // false，这个 emoji 为三码点</span></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">^</span><span style="--s-dark:#E6CC77;--s-light:#BDA437;">\\p</span><span style="--s-dark:#C4704F;--s-light:#AB5E3F;">{Emoji}</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">$</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">u</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">test</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">😡</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // true</span></span></code></pre><p>改为 <code>/v</code> 之后，切换为 <code>RGI_Emoji</code> （Recommended for General Interchange (RGI) Emoji ，在 unicode 标准中定义）即可正常：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">^</span><span style="--s-dark:#E6CC77;--s-light:#BDA437;">\\p</span><span style="--s-dark:#C4704F;--s-light:#AB5E3F;">{RGI_Emoji}</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">$</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">v</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">test</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">😵‍💫</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // true</span></span></code></pre><h3 id="q-字符串匹配" tabindex="-1">\\q 字符串匹配 <a class="header-anchor" href="#q-字符串匹配">🔗</a></h3><p><code>/v</code> 提供了新的 <code>\\q</code> 来匹配字符串，如下：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">^</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#E6CC77;--s-light:#BDA437;">\\q</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">{😵‍💫}</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">$</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">v</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">test</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">😵‍💫</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // true</span></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">^</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#E6CC77;--s-light:#BDA437;">\\q</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">{abc|def}</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">$</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">v</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">test</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">abc</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // true</span></span></code></pre><h3 id="字符集的集合操作" tabindex="-1">字符集的集合操作 <a class="header-anchor" href="#字符集的集合操作">🔗</a></h3><p><code>/v</code> 提供了新的字符集的集合操作</p><p>首先是支持嵌套的 <code>[]</code> ：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">^</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#6872AB;--s-light:#5A6AA6;">\\d\\w</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">$</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">v</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// 等同于</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">^</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">[0-9</span><span style="--s-dark:#666666;--s-light:#999999;">][</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">A-Za-z0-9_</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#C4704F;--s-light:#AB5E3F;">]</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">$</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">v</span></span></code></pre><p>默认并排写为并集操作：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">^</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">[0-9</span><span style="--s-dark:#666666;--s-light:#999999;">][</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">A-Z</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#C4704F;--s-light:#AB5E3F;">]</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">$</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">v</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">test</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">0</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> //true</span></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">^</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">[0-9</span><span style="--s-dark:#666666;--s-light:#999999;">][</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">A-Z</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#C4704F;--s-light:#AB5E3F;">]</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">$</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">v</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">test</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">A</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> //true</span></span></code></pre><p>使用 <code>--</code> 来排除某些字符：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">^</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#E6CC77;--s-light:#BDA437;">\\w</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">--[a-g</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#C4704F;--s-light:#AB5E3F;">]</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">$</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">v</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">test</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">a</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// 等同于</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">^</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">[A-Za-z0-9_</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#C4704F;--s-light:#AB5E3F;">--</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">a-g</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#C4704F;--s-light:#AB5E3F;">]</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">$</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">v</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">^</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">[A-Za-z0-9_</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#C4704F;--s-light:#AB5E3F;">--</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">a-g</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#C4704F;--s-light:#AB5E3F;">]</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">$</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">v</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">test</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">a</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // false</span></span></code></pre><p>使用 <code>&amp;&amp;</code> 来匹配交叉的字符：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// 5-6 为交叉部分</span></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">^</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">[0-6</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#C4704F;--s-light:#AB5E3F;">&amp;&amp;</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">5-9</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#C4704F;--s-light:#AB5E3F;">]</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">$</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">v</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">test</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">5</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // true</span></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">^</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">[0-6</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#C4704F;--s-light:#AB5E3F;">&amp;&amp;</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">5-9</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#C4704F;--s-light:#AB5E3F;">]</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">$</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">v</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">test</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">6</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // true</span></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">^</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">[0-6</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#C4704F;--s-light:#AB5E3F;">&amp;&amp;</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">5-9</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#C4704F;--s-light:#AB5E3F;">]</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">$</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">v</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">test</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">7</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // false</span></span></code></pre><h2 id="arraybuffer-和-sharedarraybuffer" tabindex="-1">ArrayBuffer 和 SharedArrayBuffer <a class="header-anchor" href="#arraybuffer-和-sharedarraybuffer">🔗</a></h2><p><code>ArrayBuffer</code> 和 <code>SharedArrayBuffer</code> 现在是可变长度（需要额外指定 <code>maxByteLength</code> 参数）的</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> buffer</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> ArrayBuffer</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">2</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span><span style="--s-dark:#B8A965;--s-light:#998418;"> maxByteLength</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 4</span><span style="--s-dark:#666666;--s-light:#999999;"> })</span></span></code></pre><h3 id="resize" tabindex="-1">resize() <a class="header-anchor" href="#resize">🔗</a></h3><p>可以通过新的 <code>resize</code> 方法原地改变大小，但注意不能超过设置的 <code>maxByteLength</code> ：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> buf</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> ArrayBuffer</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">2</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span><span style="--s-dark:#B8A965;--s-light:#998418;"> maxByteLength</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 4</span><span style="--s-dark:#666666;--s-light:#999999;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">buf</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">byteLength</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // 2</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">buf</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">resize</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">4</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">buf</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">byteLength</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // 4</span></span></code></pre><p><code>ArrayBuffer</code> 的 <code>resize</code> 只要不超过 <code>maxByteLength</code> ，无论是变大还是变小都可以，而 <code>SharedArrayBuffer</code> 只能在不超过 <code>maxByteLength</code> 的情况下不断变大。</p><h3 id="transfer" tabindex="-1">transfer() <a class="header-anchor" href="#transfer">🔗</a></h3><p>该方法可以理解为创建了另一个 <code>ArrayBuffer</code> ，但是是基于零拷贝移动或 realloc 方式的，简单点讲就是将内存的管理权转给了新的 <code>ArrayBuffer</code> 对象，即调用这个方法后，原 <code>ArrayBuffer</code> 对象就无法访问了，这和与 <code>Web Worker</code> 或 <code>Service Worker</code> 传输 <code>ArrayBuffer</code> 的过程是类似的。</p><p>一个 <code>ArrayBuffer</code> 在被转移后， <code>byteLength</code> 会变为 <code>0</code> ，并且所有实例方法都会报错，如果需要检测一个 <code>ArrayBuffer</code> 是否已被转移，可以通过 <code>detached</code> 属性。</p><h2 id="iswellformed-和-towellformed" tabindex="-1">isWellFormed() 和 toWellFormed() <a class="header-anchor" href="#iswellformed-和-towellformed">🔗</a></h2><h3 id="iswellformed" tabindex="-1">isWellFormed() <a class="header-anchor" href="#iswellformed">🔗</a></h3><p><code>isWellFormed</code> 用来检测字符串是否被正确地编码，在 JavaScript 中，字符串是 UTF-16 编码的，而 UTF-16 的辅助平面会占用四个字节，分为前导代理和后导代理，这个函数就是来检测是否存在单独的代理的。比如：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">ab</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">\\uD800</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">isWellFormed</span><span style="--s-dark:#666666;--s-light:#999999;">();</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // false</span></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">\\uDFFF</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">ab</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">isWellFormed</span><span style="--s-dark:#666666;--s-light:#999999;">();</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // false</span></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">ab</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">\\uD83D\\uDE04</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">c</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">isWellFormed</span><span style="--s-dark:#666666;--s-light:#999999;">();</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // true</span></span></code></pre><h3 id="towellformed" tabindex="-1">toWellFormed() <a class="header-anchor" href="#towellformed">🔗</a></h3><p><code>toWellFormed</code> 会将单独的代理对全部转化为 <code>U+FFFD</code> ，即替换字符（Replacement Character），该字符表现为一个问号（<code>�</code>）。这样可以确保字符串的编码正确。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">ab</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">\\uD800</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">toWellFormed</span><span style="--s-dark:#666666;--s-light:#999999;">();</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // &#39;ab�&#39;</span></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C99076;--s-light:#A65E2B;">\\uDFFF</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">ab</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">toWellFormed</span><span style="--s-dark:#666666;--s-light:#999999;">();</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // &#39;�ab&#39;</span></span></code></pre><h2 id="atomics-waitasync" tabindex="-1">Atomics.waitAsync() <a class="header-anchor" href="#atomics-waitasync">🔗</a></h2><p>该函数支持异步等待对内存的操作，即 <code>Atomics.wait</code> 的异步版本，它解决了 <code>Atomics.wait</code> 同步阻塞当前线程的问题，如下：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> sharedBuffer</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> SharedArrayBuffer</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">1024</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> int32Array</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> Int32Array</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">sharedBuffer</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// 等待值从 0 改变</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// 异步，不会阻塞接下来的代码</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> res</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> Atomics</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">waitAsync</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">int32Array</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 2000</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">res</span><span style="--s-dark:#666666;--s-light:#999999;">);</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // true</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">res</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">then</span><span style="--s-dark:#666666;--s-light:#999999;">((</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">result</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">result</span><span style="--s-dark:#666666;--s-light:#999999;">);</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> // &#39;ok&#39; ，表示值没有变化，其他值为 &#39;not-equal&#39; 和 &#39;timed-out&#39;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}).</span><span style="--s-dark:#80A665;--s-light:#59873A;">catch</span><span style="--s-dark:#666666;--s-light:#999999;">((</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">error</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">error</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">error</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">setTimeout</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 原子修改操作，但是值不变</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  Atomics</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">store</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">int32Array</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 唤醒所有等待的 promise</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  Atomics</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">notify</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">int32Array</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">},</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 500</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span></code></pre>`,66)])))}};export{E as categories,v as date,_ as default,j as key,S as meta,b as tags,u as title,x as updated,w as wordCount};
//# sourceMappingURL=ECMAScript2024（es15）新特性-Bka-iKzA.js.map
