import{createElementBlock as t,openBlock as o,createStaticVNode as d}from"vue";import{c as s}from"./app-u6mH9xpQ.js";import"nprogress";import"pinia-plugin-persistedstate";import"vue-router";import"vue-router-better-scroller";import"@vueuse/core";import"@vueuse/components";import"@vueuse/router";import"octokit";import"pinia";import"date-fns";const c={class:"kan-doc"},j="记一次 VSCode Java类型无法被识别问题",b=["Java","VSCode"],D=["编程"],V=1671028890,_="2022-12-14T22:41:30.000Z",x="2023-02-13T18:28:45.000Z",B=1146,A=[{property:"og:title",content:"记一次 VSCode Java类型无法被识别问题"},{name:"twitter:title",content:"记一次 VSCode Java类型无法被识别问题"}],w={__name:"记一次-VSCode-Java类型无法被识别问题",setup(r,{expose:a}){return a({frontmatter:{title:"记一次 VSCode Java类型无法被识别问题",tags:["Java","VSCode"],categories:["编程"],key:1671028890,date:"2022-12-14T22:41:30.000Z",updated:"2023-02-13T18:28:45.000Z",wordCount:1146,meta:[{property:"og:title",content:"记一次 VSCode Java类型无法被识别问题"},{name:"twitter:title",content:"记一次 VSCode Java类型无法被识别问题"}]}}),s({title:"记一次 VSCode Java类型无法被识别问题",meta:[{property:"og:title",content:"记一次 VSCode Java类型无法被识别问题"},{name:"twitter:title",content:"记一次 VSCode Java类型无法被识别问题"}]}),(p,e)=>(o(),t("div",c,e[0]||(e[0]=[d(`<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言">🔗</a></h1><p>记一次 <code>VSCode</code> <code>Java</code> 类型无法被识别问题</p><p>这个问题其实已经出来挺长时间了，不过由于在公司里面我并不长期写 <code>Java</code> 代码，所以一直没有管它</p><p>不过最近由于有新的需求，后端有些部分需要我来负责，这个问题的情况就比较难受了。</p><h1 id="正文" tabindex="-1">正文 <a class="header-anchor" href="#正文">🔗</a></h1><p>我这里的环境是本地 <code>Docker</code> ，然后用 <code>VSCode</code> 连接到 <code>Docker</code> 内，运行公司给的开发镜像进行开发</p><p>在 <code>VSCode</code> 中，如果我们想支持 <code>Java</code> 语法，需要安装插件</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/12/14/202212142347093.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/12/14/202212142347093.avif" alt=""></a></p><p>对于在 <code>VSCode</code> 上使用 <code>Docker</code> ，需要安装以下插件</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/12/18/202212181050834.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/12/18/202212181050834.avif" alt=""></a></p><p>对于 <code>Java</code> 的插件包，里面有一个</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/12/18/202212181056527.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/12/18/202212181056527.avif" alt=""></a></p><p>当我们连接到 <code>Docker</code> 的时候，上面这个插件也会在 <code>Docker</code> 内安装，在配置一栏我们可以看到</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/12/18/202212181117430.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/12/18/202212181117430.avif" alt=""></a></p><p>这个插件要在 <code>Java 17</code> 的环境才能跑成功，刚好我们公司那 <code>Docker</code> 镜像 <code>Java</code> 是 <code>1.8</code> 的</p><p>所以我们可以在某个目录下载 <code>Java 17</code> ，然后在项目的 <code>setting.json</code> 里面设置这个配置，如下</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-json"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">{</span></span>
<span class="line"><span style="--s-dark:#B8A96577;--s-light:#99841877;">  &quot;</span><span style="--s-dark:#B8A965;--s-light:#998418;">java.jdt.ls.java.home</span><span style="--s-dark:#B8A96577;--s-light:#99841877;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">jdk_home_path</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p><code>jdk_home_path</code> 就是 <code>jdk 17</code> 版本以上的路径</p><p>如果容器里面的 <code>jdk</code> 是 <code>1.8</code> 的话，那么会出现引用 <code>jdk</code> 内部的包没法引入问题，比如 <code>String</code> 、<code>List</code> 等</p><h1 id="后记" tabindex="-1">后记 <a class="header-anchor" href="#后记">🔗</a></h1><p>这破问题高了我好久，一打开代码一堆红，但是引用 <code>Springboot</code> 的类又没事，真的操蛋</p><p>之前写 <code>Java</code> 不多，主要是修修逻辑上的 <code>bug</code> ，还能凑合一下，这次写需求是真的绷不住了哈哈哈哈</p>`,22)])))}};export{D as categories,_ as date,w as default,V as key,A as meta,b as tags,j as title,x as updated,B as wordCount};
