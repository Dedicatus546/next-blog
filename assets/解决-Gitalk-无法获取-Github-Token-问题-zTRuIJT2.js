import{createElementBlock as n,openBlock as t,createStaticVNode as p}from"vue";const e={class:"kan-doc"},h="解决 Gitalk 无法获取 Github Token 问题",g=1658799213,y="2022-07-26T09:33:33.000Z",k="2023-10-10T14:09:13.000Z",o=["Gitalk","Github API","Hexo","Vercel","JavaScript","Nodejs"],c=["编程"],A=1,B=9748,D={__name:"解决-Gitalk-无法获取-Github-Token-问题",setup(l,{expose:a}){return a({frontmatter:{title:"解决 Gitalk 无法获取 Github Token 问题",key:1658799213,date:"2022-07-26T09:33:33.000Z",updated:"2023-10-10T14:09:13.000Z",tags:["Gitalk","Github API","Hexo","Vercel","JavaScript","Nodejs"],categories:["编程"],top:1,wordCount:9748}}),(r,s)=>(t(),n("div",e,s[0]||(s[0]=[p(`<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言">🔗</a></h1><p>记一次 <code>Hexo Next</code> 主题下 <code>Gitalk</code> 无法获取 <code>Github Token</code> 问题</p><p>目前博客采用的 <code>Gitalk</code> 来作为帖子的评论系统</p><p>其原理是通过帖子名来生成一个唯一 <code>id</code> ，用这个在 <code>Github</code> 仓库下开一个 <code>issue</code> ，这个 <code>issue</code> 就成为帖子的评论仓库了</p><p>由于要操作到 <code>Github</code> 仓库，所以是需要借助 <code>Github</code> 的开放 <code>API</code> 来完成的</p><p>其中有一步需要获取一个 <code>access_token</code> ，操蛋的是，这个 <code>API</code> 是不支持跨域访问的</p><p><code>https://github.com/login/oauth/access_token</code></p><p>所幸 <code>Gitalk</code> 使用了亚马逊的云服务代理里这个接口</p><p><code>https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token</code></p><p>看起来没问题了，更操蛋的又来了，这个地址被墙了，意味着现在没法代理接口了，要么自己买服务器代理接口，要么科学上网</p><p>科学上网不现实，你不能指望大家开着飞机来看你的帖子</p><p>所以只能在自己写代理服务器上做文章了</p><p>作为一个抠门抠到家的码农，要我花钱，你这是要我的命🤯</p><p>果断百度 “免费 <code>VPS</code>”</p><p>一看搜索结果…</p><p>额，还是算了，免费的就是最贵的…</p><p>正在我思来想去如何解决的时候，我想起了之前 <code>fork</code> 的一个网易云 <code>API</code> 项目，这个项目部署在了一个公共的服务上，好像还是免费的</p><p>我就直接冲进我的仓库列表中进行一个地毯式地查找</p><p>没错，就是它，<code>Vercel</code></p><h1 id="正文" tabindex="-1">正文 <a class="header-anchor" href="#正文">🔗</a></h1><p>本文会通过两个方面来讲述整个过程</p><ul><li>代理 <code>https://github.com/login/oauth/access_token</code> 这个接口</li><li>部署到 <code>Vercel</code> 上</li></ul><h2 id="代理-github-接口" tabindex="-1">代理 <code>Github</code> 接口 <a class="header-anchor" href="#代理-github-接口">🔗</a></h2><p>作为一个切图仔，不对，前端工程师，首选 <code>JS</code> 来作为编写语言，毫无疑问，使用 <code>Node</code> 来作为代理服务器</p><p>这里使用的技术栈为 <code>Koa</code> ，以及它的一些中间件，比如 <code>Koa-Router</code>， <code>Koa-BodyParser</code>，<code>Koa-Cors</code>，以及一个请求库，当然是我们的老朋友 <code>axios</code></p><p>然后，我们就可以写出一个整体的框架</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> Koa</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> require</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">koa</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> KoaCors</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> require</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">@koa/cors</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> KoaRouter</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> require</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">@koa/router</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> KoaBodyParser</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> require</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">koa-bodyparser</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> axios</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> require</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">axios</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> app</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> Koa</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> router</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> KoaRouter</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">router</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">post</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">/github_access_token</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> async</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ctx</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> next</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // TODO</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  await</span><span style="--s-dark:#80A665;--s-light:#59873A;"> next</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">router</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">get</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">/</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> async</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ctx</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> next</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  ctx</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">body</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">a cors proxy server!</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  await</span><span style="--s-dark:#80A665;--s-light:#59873A;"> next</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">app</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">use</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#80A665;--s-light:#59873A;">KoaCors</span><span style="--s-dark:#666666;--s-light:#999999;">());</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">app</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">use</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#80A665;--s-light:#59873A;">KoaBodyParser</span><span style="--s-dark:#666666;--s-light:#999999;">());</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">app</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">use</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">router</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">routes</span><span style="--s-dark:#666666;--s-light:#999999;">()).</span><span style="--s-dark:#80A665;--s-light:#59873A;">use</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">router</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">allowedMethods</span><span style="--s-dark:#666666;--s-light:#999999;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">app</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">listen</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">9999</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#666666;--s-light:#999999;"> ()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">cors-server success!</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span></code></pre><p>这里面最重要的就是 <code>post</code> 那个请求了</p><p>我们可以查看亚马逊代理的请求头</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/07/26/202207261426831.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/07/26/202207261426831.avif" alt=""></a></p><p>发现它是 <code>content-type</code> 是 <code>json</code> 的，那么就简单了，直接 <code>axios</code> 发送然后把请求体带上即可</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">router</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">post</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">/github_access_token</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> async</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ctx</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> next</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> reqBody</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> ctx</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">request</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">body</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> res</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> await</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> axios</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">post</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">https://github.com/login/oauth/access_token</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> reqBody</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  ctx</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">body</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> res</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">data</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  await</span><span style="--s-dark:#80A665;--s-light:#59873A;"> next</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span></code></pre><p>当然，上面的代码是有问题的，官方的接口返回的是一串类似 <code>URL</code> 参数的东西，如下</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-text"><span class="line"><span>access_token=****************&amp;scope=public_repo&amp;token_type=bearer</span></span></code></pre><p>而亚马逊的代理会把它转成 <code>json</code> 格式返回，所以这里我们也需要转成 <code>json</code> 格式</p><p>这个转化我们使用 <code>URLSearchParams</code> 来完成，非常简单</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">router</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">post</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">/github_access_token</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> async</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">ctx</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> next</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> reqBody</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> ctx</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">request</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">body</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> res</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> await</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> axios</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">post</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">https://github.com/login/oauth/access_token</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> reqBody</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> params</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> URLSearchParams</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">res</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">data</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  ctx</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">body</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> Array</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">from</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">params</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">entries</span><span style="--s-dark:#666666;--s-light:#999999;">()).</span><span style="--s-dark:#80A665;--s-light:#59873A;">reduce</span><span style="--s-dark:#666666;--s-light:#999999;">((</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">obj</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#666666;--s-light:#999999;"> [</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">key</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> value</span><span style="--s-dark:#666666;--s-light:#999999;">])</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    obj</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">key</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> value</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    return</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> obj</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  },</span><span style="--s-dark:#666666;--s-light:#999999;"> {});</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  await</span><span style="--s-dark:#80A665;--s-light:#59873A;"> next</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span></code></pre><p>这样子我们就完成了全部代码的编写，是不是很简单？</p><h2 id="部署到-vercel-上" tabindex="-1">部署到 <code>Vercel</code> 上 <a class="header-anchor" href="#部署到-vercel-上">🔗</a></h2><p>这里我们需要在项目根目录下新建一个 <code>vercel.json</code> 配置文件，如下</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-json"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">{</span></span>
<span class="line"><span style="--s-dark:#B8A96577;--s-light:#99841877;">  &quot;</span><span style="--s-dark:#B8A965;--s-light:#998418;">version</span><span style="--s-dark:#B8A96577;--s-light:#99841877;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 2</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#B8A96577;--s-light:#99841877;">  &quot;</span><span style="--s-dark:#B8A965;--s-light:#998418;">builds</span><span style="--s-dark:#B8A96577;--s-light:#99841877;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#666666;--s-light:#999999;"> [</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    {</span></span>
<span class="line"><span style="--s-dark:#B8A96577;--s-light:#99841877;">      &quot;</span><span style="--s-dark:#B8A965;--s-light:#998418;">src</span><span style="--s-dark:#B8A96577;--s-light:#99841877;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">./index.js</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#B8A96577;--s-light:#99841877;">      &quot;</span><span style="--s-dark:#B8A965;--s-light:#998418;">use</span><span style="--s-dark:#B8A96577;--s-light:#99841877;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">@vercel/node</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  ],</span></span>
<span class="line"><span style="--s-dark:#B8A96577;--s-light:#99841877;">  &quot;</span><span style="--s-dark:#B8A965;--s-light:#998418;">routes</span><span style="--s-dark:#B8A96577;--s-light:#99841877;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#666666;--s-light:#999999;"> [</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    {</span></span>
<span class="line"><span style="--s-dark:#B8A96577;--s-light:#99841877;">      &quot;</span><span style="--s-dark:#B8A965;--s-light:#998418;">src</span><span style="--s-dark:#B8A96577;--s-light:#99841877;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">/(.*)</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#B8A96577;--s-light:#99841877;">      &quot;</span><span style="--s-dark:#B8A965;--s-light:#998418;">dest</span><span style="--s-dark:#B8A96577;--s-light:#99841877;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">/</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  ]</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p>当然，其实我没看过文档啥的，我是从那个网易云 <code>API</code> 项目上复制过来的</p><p>不过粗略猜测一下，<code>build</code> 的 <code>src</code> 应该是指定了入口函数，而 <code>routes</code> 制定了路由映射的规则</p><p>虽然我们项目启动的是 <code>9999</code> 端口，但是 <code>vercel</code> 部署统一都是 <code>443</code> 端口的（应该） ，内部再做转发</p><p>然后我们登录到 <code>vercel</code> ，<a href="https://vercel.com/dashboard" target="_blank" rel="noopener">Dashboard - Vercel</a> ，使用 <code>github</code> 账号登录即可</p><p>然后我们选择 <code>new Project</code></p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/07/26/202207261440800.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/07/26/202207261440800.avif" alt=""></a></p><p><code>import</code> 这个 <code>cors-server</code> 项目</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/07/26/202207261442420.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/07/26/202207261442420.avif" alt=""></a></p><p>不用任何设置，直接点 <code>deploy</code> 部署即可</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/07/26/202207261443714.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/07/26/202207261443714.avif" alt=""></a></p><p>稍等一会之后，我们就可以看到项目部署成功了</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/07/26/202207261445218.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/07/26/202207261445218.avif" alt=""></a></p><p>我们访问 <a href="https://cors-server-ecru.vercel.app/" target="_blank" rel="noopener"><code>https://cors-server-ecru.vercel.app</code></a> 就可以看到服务了</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/07/26/202207261447909.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/07/26/202207261447909.avif" alt=""></a></p><p>然后我们修改 <code>Next</code> 主题下的配置文件，把 <code>_config.yml</code> 里的配置改成这个接口即可</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/07/26/202207261450438.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/07/26/202207261450438.avif" alt=""></a></p><p>提交到 <code>github</code> 上，然后即可成功使用 <code>github</code> 登录 <code>gitalk</code></p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/07/26/202207261452907.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/07/26/202207261452907.avif" alt=""></a></p><p>可以看到 <code>Options</code> 预检请求成功，证明跨域没问题，<code>Post</code> 请求也成功返回</p><p>如果不想折腾，直接使用我这个下面这个地址替换亚马逊的地址即可</p><p><code>https://cors-server-ecru.vercel.app/github_access_token</code></p><p>当然，如果觉得不放心，完全可以 <code>fork</code> 我的项目，检查源代码啥的，然后自己部署到 <code>vercel</code>，几分钟的事</p><p>项目地址：<a href="https://github.com/Dedicatus546/cors-server" target="_blank" rel="noopener">cors-server</a></p><p>喜欢可以点个 <code>star</code> 哦~</p><h2 id="_2022-8-26-vercel-使用自定义域名" tabindex="-1">2022-8-26 vercel 使用自定义域名 <a class="header-anchor" href="#_2022-8-26-vercel-使用自定义域名">🔗</a></h2><p>经评论区提醒，<code>vercel</code> 的服务无法访问。</p><p>我去百度了一下，发现之前也有过这种情况，应该不是墙，只是 <code>DNS</code> 污染的间歇性抽风，目前已经找到解决办法。</p><p>只需把地址换成 <code>https://vercel.prohibitorum.top/github_access_token</code> 即可，服务还是 <code>vercel</code> 的。</p><p>如果你有自己的域名，那么可以按照如下来配置，首先打开的域名控制台，这里我是阿里云的域名，添加一条如下的规则。</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/08/28/202208281106221.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/08/28/202208281106221.avif" alt=""></a></p><p>然后我们进入 <code>vercel</code> 的控制台，按照如下图，添加对应的域名，这里要和我们在域名控制台设置的一样。</p><p>我们在域名控制台添加了 <code>vercel.prohibitorum.top</code> 指向了 <code>76.223.126.88</code> ，这里我们就填 <code>vercel.prohibitorum.top</code> 即可。</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/08/28/202208281112182.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/08/28/202208281112182.avif" alt=""></a></p><p>新建之后我们点击右侧的 <code>edit</code> 按钮，会出现如下：</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/08/28/202208281114088.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/08/28/202208281114088.avif" alt=""></a></p><p>点击 <code>View DNS Records &amp; More for XXX →</code> 这个链接，跳转到如下界面，然后添加一条 <code>CNAME</code> 规则，如下：</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/08/28/202208281116569.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/08/28/202208281116569.avif" alt=""></a></p><p>这样就完成了，然后访问你设置的网址，如果出现了如下页面就是成功了。</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/08/28/202208281117515.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/08/28/202208281117515.avif" alt=""></a></p><p>然后我们修改 <code>next</code> 主题下的配置即可，如下图所示，这里我用我的服务做示范：</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/08/28/202208281121620.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/08/28/202208281121620.avif" alt=""></a></p><p>部署，然后就可以正常获取 <code>token</code> 了。</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/08/28/202208281125915.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/08/28/202208281125915.avif" alt=""></a></p><p>话说 <code>github</code> 也是间歇性抽风，写个帖子是真的不容易，各种推送失败…</p><h2 id="_2022-10-22-使用-netlify-部署服务" tabindex="-1">2022-10-22 使用 netlify 部署服务 <a class="header-anchor" href="#_2022-10-22-使用-netlify-部署服务">🔗</a></h2><p>评论区有朋友说 <code>vercel</code> 有点慢，想使用 <code>netlify</code> 来部署。</p><p>我也没用过 <code>netlify</code> ，不过既然都差不多，也就花了点时间搞了下，还行，可以部署。</p><p>和 <code>vercel</code> 不同的是，这里 <code>netlify</code> 好像不支持路由映射？即使通过函数启动了服务器，好像也没用，这个没搞懂。</p><p>不过这里用了另一种函数，<code>Edge Function</code> 边缘函数，它允许我们导出函数来拦截对应的请求。</p><p>所以，你可以看到我们在 <code>netlify.toml</code> 文件内放了写了如下的配置。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-toml"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#80A665;--s-light:#59873A;">build</span><span style="--s-dark:#666666;--s-light:#999999;">]</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">edge_functions</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">edge_functions</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">[[</span><span style="--s-dark:#80A665;--s-light:#59873A;">edge_functions</span><span style="--s-dark:#666666;--s-light:#999999;">]]</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">path</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">/github_access_token</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">function</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">github_access_token</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span></code></pre><p><code>edge_functions = &quot;edge_functions&quot;</code> 指定了放边缘函数文件夹的路径。</p><p>下面的部分即当访问 <code>/github_access_token</code> 这个路径时，用 <code>edge_functions</code> 下的 <code>github_access_token</code> 文件来处理它。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">/**</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> * </span><span style="--s-dark:#666666;--s-light:#999999;">@</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">param</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Request</span><span style="--s-dark:#666666;--s-light:#999999;">}</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> request</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;"> */</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">export</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> default</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> async</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">request</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">request</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">method</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ===</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">OPTIONS</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // 预检请求</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> resp</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> Response</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">null</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">      status</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 204</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    });</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    resp</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">headers</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">set</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Access-Control-Allow-Origin</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">*</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    resp</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">headers</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">set</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Access-Control-Allow-Methods</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">POST, OPTIONS</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    resp</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">headers</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">set</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Access-Control-Allow-Headers</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Content-Type</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    resp</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">headers</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">set</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Access-Control-Max-Age</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> \`</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">\${</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">86400</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> *</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 30</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">}</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">\`</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    return</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> resp</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">request</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">method</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ===</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">POST</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    try</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">      const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> reqBody</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> await</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> request</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">text</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">request body: </span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> reqBody</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">      const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> res</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> await</span><span style="--s-dark:#80A665;--s-light:#59873A;"> fetch</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">https://github.com/login/oauth/access_token</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">        method</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">POST</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">        body</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> reqBody</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">        headers</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">          &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Content-type</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">application/json</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        },</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      });</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">      const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> text</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> await</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> res</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">text</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">github api res: </span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> text</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">      const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> params</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> URLSearchParams</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">text</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">      const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> resp</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> Response</span><span style="--s-dark:#666666;--s-light:#999999;">(</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        JSON</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">stringify</span><span style="--s-dark:#666666;--s-light:#999999;">(</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">          Array</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">from</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">params</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">entries</span><span style="--s-dark:#666666;--s-light:#999999;">()).</span><span style="--s-dark:#80A665;--s-light:#59873A;">reduce</span><span style="--s-dark:#666666;--s-light:#999999;">((</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">obj</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#666666;--s-light:#999999;"> [</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">key</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> value</span><span style="--s-dark:#666666;--s-light:#999999;">])</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">            obj</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">key</span><span style="--s-dark:#666666;--s-light:#999999;">]</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> value</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">            return</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> obj</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">          },</span><span style="--s-dark:#666666;--s-light:#999999;"> {})</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        ),</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">          status</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 200</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      );</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      resp</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">headers</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">set</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Access-Control-Allow-Origin</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">*</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      resp</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">headers</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">set</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Access-Control-Allow-Methods</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">POST, OPTIONS</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      resp</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">headers</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">set</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Access-Control-Allow-Headers</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Content-Type</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      resp</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">headers</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">set</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Access-Control-Max-Age</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> \`</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">\${</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">86400</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> *</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 30</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">}</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">\`</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">      return</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> resp</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> catch</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">e</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">error</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">e</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">      throw</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> e</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  return</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> Response</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">a cors proxy by netlify!</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p>目前代码已经更新，根目录下新增了 <code>edge_functions</code> 目录下的 <code>github_access_token.js</code> 文件。</p><p>当然，这里我们就没必要用三方库了，直接手撕。</p><p>对 <code>OPTIONS</code> ，<code>POST</code> ，其他方法分别处理即可。</p><p>部署的话，点击这里进入 <a href="https://netlify.com" target="_blank" rel="noopener">netlify</a> 。</p><p>注册的话我们直接用 <code>github</code> 登录就行了，方便导入相应的仓库。</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/10/22/202210221427591.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/10/22/202210221427591.avif" alt=""></a></p><p>选择 <code>github</code> ，第一次进要跳转到 <code>github</code> 那边授权，照做就行了。</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/10/22/202210221429287.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/10/22/202210221429287.avif" alt=""></a></p><p>选择 <code>cors-server</code> 仓库：</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/10/22/202210221431460.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/10/22/202210221431460.avif" alt=""></a></p><p>配置默认即可，不需要填，直接点击 <code>deploy site</code> 。</p><p>如果成功了，那么就有如下画面：</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/10/22/202210221433872.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/10/22/202210221433872.avif" alt=""></a></p><p>然后我们进入 <code>https://xxxx.netlify.app/github_access_token</code> ，如果出现如下的画面，那么就完成了（这里 <code>xxxx</code> 是 <code>netlify</code> 随机的一个前缀）。</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/10/22/202210221435165.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/10/22/202210221435165.avif" alt=""></a></p><p>至于域名的话，我觉得没必要，因为目前来看，没有污染问题。</p><p>大家如果嫌麻烦，可以使用我的地址：<code>https://strong-caramel-969805.netlify.app/github_access_token</code> 即可。</p><p>不过我还是建议大家自行注册，因为每个账号是有免费的额度的。</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/10/22/202210221441392.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/10/22/202210221441392.avif" alt=""></a></p><p>接口访问效果如下：</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/10/22/202210221445817.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/10/22/202210221445817.avif" alt=""></a></p><h2 id="_2023-08-13-使用-docker-部署服务" tabindex="-1">2023-08-13 使用 Docker 部署服务 <a class="header-anchor" href="#_2023-08-13-使用-docker-部署服务">🔗</a></h2><p>已支持 Docker 容器方式部署，不过这种方式适合你自己有服务器的情况，并且服务器要能正确代理原始的地址。</p><p>感谢 <a href="https://github.com/jorben" target="_blank" rel="noopener">@Jorbenzhu</a> 提供的 Dockerfile 文件。</p><p>镜像已经提交到 DockerHub ，可以使用以下命令来拉取镜像。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-text"><span class="line"><span>docker pull dedicatus545/github-cors-server:1.0.0</span></span></code></pre><p>然后使用以下命令启动镜像</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-text"><span class="line"><span>docker run -d --name cors-server -p8080:9999 dedicatus545/github-cors-server:1.0.0</span></span></code></pre><p>这里容器内部是 9999 端口，绑定主机的 8080 端口，这里可以根据你的服务器端口占用情况进行动态修改。</p><h1 id="后记" tabindex="-1">后记 <a class="header-anchor" href="#后记">🔗</a></h1><p>什么？你问我如果 <code>Github</code> 要是被墙了怎么办？</p><p>那就凉拌，转 <code>Gitee</code> 是不可能转 <code>Gitee</code> 的，这辈子都不可能转 <code>Gitee</code> 。</p><p>要是转了，我怕我的 <code>JavaScript</code> 标签有一天就变成 <code>J**aScript</code> 了。</p>`,128)])))}};export{c as categories,y as date,D as default,g as key,o as tags,h as title,A as top,k as updated,B as wordCount};
