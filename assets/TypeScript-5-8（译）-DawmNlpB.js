import{createElementBlock as a,openBlock as e,createStaticVNode as n}from"vue";import{c as p}from"./app-xo0Ya-nB.js";import"nprogress";import"pinia-plugin-persistedstate";import"vue-router";import"vue-router-better-scroller";import"@vueuse/core";import"@vueuse/components";import"@vueuse/router";import"octokit";import"pinia";import"date-fns";const r={class:"kan-doc"},T="TypeScript 5.8（译）",b=["TypeScript","JavaScript"],_=["编程"],C="2025-03-03T22:45:58.000Z",x="2025-03-04T14:54:58.000Z",E=1741013159,v=542,F=[{property:"og:title",content:"TypeScript 5.8（译）"},{name:"twitter:title",content:"TypeScript 5.8（译）"}],w={__name:"TypeScript-5-8（译）",setup(l,{expose:t}){return t({frontmatter:{title:"TypeScript 5.8（译）",tags:["TypeScript","JavaScript"],categories:["编程"],date:"2025-03-03T22:45:58.000Z",updated:"2025-03-04T14:54:58.000Z",key:1741013159,wordCount:542,meta:[{property:"og:title",content:"TypeScript 5.8（译）"},{name:"twitter:title",content:"TypeScript 5.8（译）"}]}}),p({title:"TypeScript 5.8（译）",meta:[{property:"og:title",content:"TypeScript 5.8（译）"},{name:"twitter:title",content:"TypeScript 5.8（译）"}]}),(o,s)=>(e(),a("div",r,s[0]||(s[0]=[n(`<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言">🔗</a></h1><p>原文地址：<a href="https://devblogs.microsoft.com/typescript/announcing-typescript-5-8/" target="_blank" rel="noopener">Announcing TypeScript 5.8</a></p><h1 id="正文" tabindex="-1">正文 <a class="header-anchor" href="#正文">🔗</a></h1><h2 id="细粒化检测返回表达式的分支" tabindex="-1">细粒化检测返回表达式的分支 <a class="header-anchor" href="#细粒化检测返回表达式的分支">🔗</a></h2><p>考虑一段如下的代码：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-typescript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">declare const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">untypedCache</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Map</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">any</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">any</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> getUrlObject</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">urlString</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">string</span><span style="--s-dark:#666666;--s-light:#999999;">):</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> URL</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  return</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> untypedCache</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">has</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">urlString</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ?</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> untypedCache</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">get</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">urlString</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> :</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> urlString</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p>这段代码的意图是如果缓存中存在的话，从缓存中取 URL 对象，如果缓存中不存在，则创建一个新的对象。然而这里有一个 bug ：我们实际上忘记根据输入构建一个新的 URL 对象。不幸的是， TypeScript 通常不会捕获这类错误。</p><p>更多信息查看此 <a href="https://github.com/microsoft/TypeScript/pull/60761" target="_blank" rel="noopener">PR</a> 。</p>`,8)])))}};export{_ as categories,C as date,w as default,E as key,F as meta,b as tags,T as title,x as updated,v as wordCount};
//# sourceMappingURL=TypeScript-5-8（译）-DawmNlpB.js.map
