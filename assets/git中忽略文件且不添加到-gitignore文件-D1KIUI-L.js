import{k as t,a as c,o as i,l as d}from"./app-I7hi7fN_.js";const p={class:"kan-doc"},l="git中忽略文件且不添加到.gitignore文件",h=1641372699,m="2022-01-05T16:51:39.000Z",f="2023-02-13T18:28:44.000Z",u=["git",".gitignore"],x=["编程"],k=2519,_=[{property:"og:title",content:"git中忽略文件且不添加到.gitignore文件"},{name:"twitter:title",content:"git中忽略文件且不添加到.gitignore文件"}],b={__name:"git中忽略文件且不添加到-gitignore文件",setup(s,{expose:o}){return o({frontmatter:{title:"git中忽略文件且不添加到.gitignore文件",key:1641372699,date:"2022-01-05T16:51:39.000Z",updated:"2023-02-13T18:28:44.000Z",tags:["git",".gitignore"],categories:["编程"],wordCount:2519,meta:[{property:"og:title",content:"git中忽略文件且不添加到.gitignore文件"},{name:"twitter:title",content:"git中忽略文件且不添加到.gitignore文件"}]}}),t({title:"git中忽略文件且不添加到.gitignore文件",meta:[{property:"og:title",content:"git中忽略文件且不添加到.gitignore文件"},{name:"twitter:title",content:"git中忽略文件且不添加到.gitignore文件"}]}),(g,e)=>(i(),c("div",p,e[0]||(e[0]=[d(`<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言">🔗</a></h1><p>记一次添加 <code>git</code> 忽略文件不添加到 <code>.gitignore</code> 中</p><h1 id="正文" tabindex="-1">正文 <a class="header-anchor" href="#正文">🔗</a></h1><p>写一些需求的时候，有时会随手创建一些 <code>test.js</code> 来跑一些代码</p><p><code>git add</code> 然后 <code>commit</code> 提交的时候，很容易忘记把它排除掉</p><p>但是又不想因为这个文件污染 <code>.gitignore</code> 文件</p><p>这时候，就要使用另一种方式来添加要排除的文件</p><p>在 <code>git</code> 中，每个项目的根目录下都会有 <code>.git</code> 文件夹</p><p><img src="https://s4.ax1x.com/2022/01/10/7VFPdP.png" alt=""></p><p>由于这个文件夹是隐藏的，所以可能你会看不到</p><p>这时候就要设置资源管理器显示隐藏目录了（这里我使用的是window11）</p><p><img src="https://s4.ax1x.com/2022/01/10/7VkVk6.png" alt=""></p><p>找个 <code>.git</code> 文件夹之后，进入这个文件夹</p><p>在这个文件夹里面，找到 <code>info/exclude</code></p><p><img src="https://s4.ax1x.com/2022/01/10/7Vk37t.png" alt=""></p><p>然后用记事本打开它，发现是个空文件</p><p>不过顶部有一些注释</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-text"><span class="line"><span># git ls-files --others --exclude-from=.git/info/exclude</span></span>
<span class="line"><span># Lines that start with &#39;#&#39; are comments.</span></span>
<span class="line"><span># For a project mostly in C, the following would be a good set of</span></span>
<span class="line"><span># exclude patterns (uncomment them if you want to use them):</span></span>
<span class="line"><span># *.[oa]</span></span>
<span class="line"><span># *~</span></span></code></pre><p>可以看到，最后两行给了我们两个例子</p><ul><li><code>*.[oa]</code></li><li><code>*~</code></li></ul><p>在注释中提到这是 <code>C</code> 项目可能会用到的注释</p><p>当然，我是个切图仔，所以添加的一般是一些 <code>test</code> 的 <code>js</code> 文件</p><p>所以我们可以加一行</p><ul><li><code>*.test.local.js</code></li></ul><p><img src="https://s4.ax1x.com/2022/01/10/7VATqs.png" alt=""></p><p>然后 <code>ctrl + s</code> 保存后关闭</p><p>回到 <code>vscode</code> 中，我们建一个 <code>1.test.local.js</code> ，随便写点内容</p><p><img src="https://s4.ax1x.com/2022/01/10/7VE1FP.png" alt=""></p><p>然后使用 <code>git status</code> 查看工作区的状态</p><p>发现此时工作区是干净的，也就是 <code>git</code> 没有对 <code>1.test.local.js</code> 这个文件进行追踪</p><p>当然目前这种添加是项目级别的</p><p>那我要是想全部的项目都排除某个文件，那要如何操作呢</p><p>这时候需要配置 <code>git config</code> 在 <code>git config</code> 中，我们可以指定全局的 <code>.gitignore</code> 文件</p><p><code>git-config</code>文档：<a href="http://git-scm.com/docs/git-config" target="_blank" rel="noopener">git-config</a></p><p>进上面的地址然后 <code>ctrl + f</code> 搜索 <code>core.excludesFile</code> ，然后就可以找到下面这段内容</p><blockquote><p>Specifies the pathname to the file that contains patterns to describe paths that are not meant to be tracked, in addition to <code>.gitignore</code> (per-directory) and <code>.git/info/exclude</code>. Defaults to <code>$XDG_CONFIG_HOME/git/ignore</code>. If <code>$XDG_CONFIG_HOME</code> is either not set or empty, <code>$HOME/.config/git/ignore</code> is used instead.</p></blockquote><p>指定一个除了每个项目下的 <code>.gitignore</code> 和 <code>.git/info/exclude</code> 之外的不被 <code>git</code> 跟踪的文件 默认的位置为 <code>$XDG_CONFIG_HOME/git/ignore</code> 如果 <code>$XDG_CONFIG_HOME</code> 环境变量不存在，则使用 <code>$HOME/.config/git/ignore</code></p><p>由于我电脑上 <code>git</code> 是在 <code>window10</code> 的时候装的，然后期间我又格盘装了 <code>window11</code></p><p>所以 <code>git</code> 的环境变量基本没了，这里就试着指定一个绝对路径来试试</p><p>在控制台下输入 <code>git config --global core.excludesFile E:\\ignore</code></p><p>为全局的 <code>git</code> 配置 <code>core.excludesFile</code></p><p>然后我们在 <code>E:\\ignore</code> 随便写个规则</p><p>就写 <code>index.js</code> ，可恶的 <code>index.js</code> 今天定让你有来无回！</p><p>先通过 <code>git config -l</code> 看看当前的配置</p><p><img src="https://s4.ax1x.com/2022/01/10/7VueQf.png" alt=""></p><p>没问题 <code>E:\\ignore</code> 已经在配置中的</p><p>然后写个 <code>index.js</code>，然后依然执行 <code>git status</code> 查看工作区的状态</p><p><img src="https://s4.ax1x.com/2022/01/10/7VugOO.png" alt=""></p><p>一个干净的工作区，哈哈哈哈哈</p><h1 id="后记" tabindex="-1">后记 <a class="header-anchor" href="#后记">🔗</a></h1><p>记得要去掉配置，不然代码没提交上去不关我事啊</p><p>删掉配置的指令 <code>git config --global --unset core.excludesFile</code></p><p>然后再次 <code>git status</code> ， <code>index.js</code> 现在就可以被添加了</p><p><img src="https://s4.ax1x.com/2022/01/10/7VubX8.png" alt=""></p>`,54)])))}};export{x as categories,m as date,b as default,h as key,_ as meta,u as tags,l as title,f as updated,k as wordCount};
