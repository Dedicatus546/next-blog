import{createElementBlock as t,openBlock as n,createStaticVNode as p}from"vue";import{c as e}from"./app-CGnJzz9B.js";import"nprogress";import"pinia-plugin-persistedstate";import"vue-router";import"vue-router-better-scroller";import"@vueuse/core";import"@vueuse/components";import"@vueuse/router";import"octokit";import"pinia";import"date-fns";const l={class:"kan-doc"},m="ECMAScript2017（es8）新特性",u=1597721573,j="2020-08-18T11:32:53.000Z",S="2024-12-26T15:57:35.000Z",x=["JavaScript"],E=["笔记"],O=1596,w=[{property:"og:title",content:"ECMAScript2017（es8）新特性"},{name:"twitter:title",content:"ECMAScript2017（es8）新特性"}],F={__name:"ECMAScript2017（es8）新特性",setup(i,{expose:a}){return a({frontmatter:{title:"ECMAScript2017（es8）新特性",key:1597721573,date:"2020-08-18T11:32:53.000Z",updated:"2024-12-26T15:57:35.000Z",tags:["JavaScript"],categories:["笔记"],wordCount:1596,meta:[{property:"og:title",content:"ECMAScript2017（es8）新特性"},{name:"twitter:title",content:"ECMAScript2017（es8）新特性"}]}}),e({title:"ECMAScript2017（es8）新特性",meta:[{property:"og:title",content:"ECMAScript2017（es8）新特性"},{name:"twitter:title",content:"ECMAScript2017（es8）新特性"}]}),(h,s)=>(n(),t("div",l,s[0]||(s[0]=[p(`<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言">🔗</a></h1><p>ECMAScript2017（es8）新特性。</p><h1 id="正文" tabindex="-1">正文 <a class="header-anchor" href="#正文">🔗</a></h1><h2 id="padstart和padend" tabindex="-1"><code>padStart</code>和<code>padEnd</code> <a class="header-anchor" href="#padstart和padend">🔗</a></h2><p>这两个函数顾名思义，就是往头部和尾部填充东西的，可以来个例子理解下（以<code>padStart</code>为例子）。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">let</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> a</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">nick</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">a</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">padStart</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">10</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">123</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">   // 输出 &#39;123123nick&#39;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">a</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">padStart</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">10</span><span style="--s-dark:#666666;--s-light:#999999;">);</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">         // 输出 &#39;      nick&#39;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">a</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">padStart</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">1</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">           // 输出 &#39;nick&#39;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">a</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">padStart</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;">5</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">123</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">     // 输出 &#39;1nick&#39;       </span></span></code></pre><p>默认使用空格填充，第一个参数是指填充完字符串的长度，而不是填充串的长度。</p><p>如果第一个参数小于了原字符串的长度，那么直接返回原字符串。</p><h2 id="object-values和object-entries" tabindex="-1"><code>Object.values</code>和<code>Object.entries</code> <a class="header-anchor" href="#object-values和object-entries">🔗</a></h2><p>之前如果需要遍历对象的属性的话，一般是用<code>es5</code>的<code>Object.keys</code>来获取对象的键数组，再根据键数组来遍历对象。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> o</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span><span style="--s-dark:#B8A965;--s-light:#998418;">a</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 1</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#B8A965;--s-light:#998418;"> b</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 2</span><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> keys</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> Object</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">keys</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">o</span><span style="--s-dark:#666666;--s-light:#999999;">);</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">      // keys = [&#39;a&#39;,&#39;b&#39;];</span></span></code></pre><p>而现在可以直接拿到对象的值数组。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> o</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span><span style="--s-dark:#B8A965;--s-light:#998418;">a</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 1</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#B8A965;--s-light:#998418;"> b</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 2</span><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> values</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> Object</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">values</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">o</span><span style="--s-dark:#666666;--s-light:#999999;">);</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // values = [1, 2]</span></span></code></pre><p>当然也可以用<code>keys</code>方法来实现这个操作。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> values</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> Object</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">keys</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">o</span><span style="--s-dark:#666666;--s-light:#999999;">).</span><span style="--s-dark:#80A665;--s-light:#59873A;">map</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">key</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> o</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">key</span><span style="--s-dark:#666666;--s-light:#999999;">]);</span></span></code></pre><p>也可以直接拿到对象的键值对数组了。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> o</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span><span style="--s-dark:#B8A965;--s-light:#998418;">a</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 1</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#B8A965;--s-light:#998418;"> b</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 2</span><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> entries</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> Object</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">entries</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">o</span><span style="--s-dark:#666666;--s-light:#999999;">);</span><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // entries = [[&#39;a&#39;, 1], [&#39;b&#39;, 2]]</span></span></code></pre><p>依然可以用<code>keys</code>来实现这个操作。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> entries</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> Object</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">entries</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">o</span><span style="--s-dark:#666666;--s-light:#999999;">).</span><span style="--s-dark:#80A665;--s-light:#59873A;">map</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">key</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> [</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">key</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> o</span><span style="--s-dark:#666666;--s-light:#999999;">[</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">key</span><span style="--s-dark:#666666;--s-light:#999999;">]]);</span></span></code></pre><p>（<code>map</code>天下第一！！！）</p><p>总体上是趋于直接性和易读性的一个特性。</p><h2 id="object-getownpropertydescriptors" tabindex="-1">Object.getOwnPropertyDescriptors <a class="header-anchor" href="#object-getownpropertydescriptors">🔗</a></h2><p>获取当前对象自身的属性描述符的数组，不包括原型链上的</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> o</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span><span style="--s-dark:#B8A965;--s-light:#998418;">name</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Dedicatus545</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#B8A965;--s-light:#998418;"> age</span><span style="--s-dark:#666666;--s-light:#999999;">:</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 22</span><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">Object</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">getPrototypeOf</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">o</span><span style="--s-dark:#666666;--s-light:#999999;">).</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">myProperty</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">property in prototype</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">var</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> descriptors</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> Object</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">getOwnPropertyDescriptors</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">o</span><span style="--s-dark:#666666;--s-light:#999999;">);</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">    </span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// 输出 （不包括myProperty属性的描述符对象）</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">//   name: {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">//     value: &#39;Dedicatus545&#39;,</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">//       writable: true,</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">//       enumerable: true,</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">//       configurable: true</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">//   },</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">//   age: { </span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">//     value: 22, </span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">//     writable: true, </span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">//     enumerable: true, </span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">//     configurable: true </span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">//   }</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// }</span></span></code></pre>`,24)])))}};export{E as categories,j as date,F as default,u as key,w as meta,x as tags,m as title,S as updated,O as wordCount};
