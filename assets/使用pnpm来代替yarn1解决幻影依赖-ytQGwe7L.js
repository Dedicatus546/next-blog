import{createElementBlock as d,openBlock as c,createStaticVNode as a}from"vue";const n={class:"kan-doc"},l="使用pnpm来代替yarn1解决幻影依赖",h=1639102971,m="2021-12-10T10:22:51.000Z",i="2023-02-13T18:28:44.000Z",x=["npm","yarn","pnpm","node_modules"],g=["编程"],f=1359,u={__name:"使用pnpm来代替yarn1解决幻影依赖",setup(p,{expose:o}){return o({frontmatter:{title:"使用pnpm来代替yarn1解决幻影依赖",key:1639102971,date:"2021-12-10T10:22:51.000Z",updated:"2023-02-13T18:28:44.000Z",tags:["npm","yarn","pnpm","node_modules"],categories:["编程"],wordCount:1359}}),(r,e)=>(c(),d("div",n,e[0]||(e[0]=[a('<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言">🔗</a></h1><p>之前在使用 <code>vue</code> 的 <code>pinia</code> 的时候出现的问题</p><p>使用 <code>pnpm</code> 来代替 <code>yarn1</code> 解决幻影依赖</p><h1 id="正文" tabindex="-1">正文 <a class="header-anchor" href="#正文">🔗</a></h1><h2 id="什么是-phantom-dependencies-幻影依赖" tabindex="-1">什么是 <code>Phantom dependencies</code> 幻影依赖 <a class="header-anchor" href="#什么是-phantom-dependencies-幻影依赖">🔗</a></h2><blockquote><p>一个库使用了不属于其 <code>dependencies</code> 里的 <code>Package</code> 称之为 <code>Phantom dependencies</code>（幻影依赖、幽灵依赖、隐式依赖）</p></blockquote><h2 id="为什么会产生-phantom-dependencies-幻影依赖" tabindex="-1">为什么会产生 <code>Phantom dependencies</code> 幻影依赖 <a class="header-anchor" href="#为什么会产生-phantom-dependencies-幻影依赖">🔗</a></h2><p>在之前，我个人都是使用 <code>yarn1</code> 来进行依赖安装</p><p>而 <code>yarn1</code> 有个特性， 他会把依赖扁平到 <code>node_modules</code> 中</p><p>举个例子，如果现在我安装了依赖 <code>A</code> ， 依赖 <code>A</code> 依赖了依赖 <code>B</code> ，</p><p>那么，依赖 <code>B</code> 并不会安装到依赖 <code>A</code> 文件夹的 <code>node_modules</code> 中，即 <code>node_modules/A/node_modules/B</code></p><p>而是安装到根 <code>node_modules</code> 中，即 <code>node_modules/B</code></p><h2 id="phantom-dependencies-幻影依赖带来的问题" tabindex="-1"><code>Phantom dependencies</code> 幻影依赖带来的问题 <a class="header-anchor" href="#phantom-dependencies-幻影依赖带来的问题">🔗</a></h2><p>在 <code>package.json</code> 中并没有安装依赖 <code>B</code>， 但是在代码中却可以引用到 <code>B</code> 导出的功能</p><p>并且打包并不会造成错误，因为依赖 <code>B</code> 确实存在 <code>node_modules</code> 目录下</p><p>但是如果此时删除依赖 <code>A</code> ，那么项目中使用到依赖 <code>B</code> 的代码就会报错， 因为依赖 <code>B</code> 一同被删除了</p><h2 id="代码复现" tabindex="-1">代码复现 <a class="header-anchor" href="#代码复现">🔗</a></h2><p>我们新建一个 <code>vite + vue3</code> 的项目，然后把初始的依赖给安装了</p><p>这时 <code>node_modules</code> 长这样</p><p><a data-fancybox="doc-gallery" href="https://s4.ax1x.com/2021/12/12/oHbdSO.png" target="_blank" rel="noopener noreferrer"><img src="https://s4.ax1x.com/2021/12/12/oHbdSO.png" alt=""></a></p><p>可以看到这时候已经出现幻影依赖了，像 <code>rollup</code> ， <code>postcss</code> ， <code>esbuild</code> 等都是不存在 <code>package.json</code> 中</p><p>但是代码中却可以引用到</p><p><a data-fancybox="doc-gallery" href="https://s4.ax1x.com/2021/12/12/oHqx8f.png" target="_blank" rel="noopener noreferrer"><img src="https://s4.ax1x.com/2021/12/12/oHqx8f.png" alt=""></a></p><p>并且运行正常</p><p><a data-fancybox="doc-gallery" href="https://s4.ax1x.com/2021/12/12/oHLPbj.png" target="_blank" rel="noopener noreferrer"><img src="https://s4.ax1x.com/2021/12/12/oHLPbj.png" alt=""></a></p><h2 id="问题解决" tabindex="-1">问题解决 <a class="header-anchor" href="#问题解决">🔗</a></h2><p>知道出现这个问题的原因是 <code>yarn1</code> 本身扁平依赖之后</p><p>我们需要换一个包管理器，这里选择了 <code>pnpm</code></p><p><code>pnpm</code> 依然会扁平化依赖，但是却不会直接出现在根 <code>node_modules</code> 下</p><p>而是 <code>node_modules/.pnpm</code></p><p><a data-fancybox="doc-gallery" href="https://s4.ax1x.com/2021/12/12/oHOo0H.png" target="_blank" rel="noopener noreferrer"><img src="https://s4.ax1x.com/2021/12/12/oHOo0H.png" alt=""></a></p><p>在安装完依赖之后，我们可以看到 <code>node_modules</code> 下非常干净</p><p><a data-fancybox="doc-gallery" href="https://s4.ax1x.com/2021/12/12/oHOQl8.png" target="_blank" rel="noopener noreferrer"><img src="https://s4.ax1x.com/2021/12/12/oHOQl8.png" alt=""></a></p><p>重新运行项目，发现已经无法启动了，提示找不到特定的依赖，幻影依赖这个问题，就被解决了</p><p><a data-fancybox="doc-gallery" href="https://s4.ax1x.com/2021/12/12/oHOgt1.png" target="_blank" rel="noopener noreferrer"><img src="https://s4.ax1x.com/2021/12/12/oHOgt1.png" alt=""></a></p>',35)])))}};export{g as categories,m as date,u as default,h as key,x as tags,l as title,i as updated,f as wordCount};
