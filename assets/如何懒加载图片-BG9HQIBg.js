import{createElementBlock as n,openBlock as t,createStaticVNode as l}from"vue";import{c as e}from"./app-u6mH9xpQ.js";import"nprogress";import"pinia-plugin-persistedstate";import"vue-router";import"vue-router-better-scroller";import"@vueuse/core";import"@vueuse/components";import"@vueuse/router";import"octokit";import"pinia";import"date-fns";const p={class:"kan-doc"},f="如何懒加载图片",I=1646577738,v="2022-03-06T22:42:18.000Z",Z="2023-02-13T18:28:45.000Z",W=["Vue","VueUse","JavaScript","Lazy Load Image"],x=["编程"],G=17297,X=[{property:"og:title",content:"如何懒加载图片"},{name:"twitter:title",content:"如何懒加载图片"}],J={__name:"如何懒加载图片",setup(i,{expose:a}){return a({frontmatter:{title:"如何懒加载图片",key:1646577738,date:"2022-03-06T22:42:18.000Z",updated:"2023-02-13T18:28:45.000Z",tags:["Vue","VueUse","JavaScript","Lazy Load Image"],categories:["编程"],wordCount:17297,meta:[{property:"og:title",content:"如何懒加载图片"},{name:"twitter:title",content:"如何懒加载图片"}]}}),e({title:"如何懒加载图片",meta:[{property:"og:title",content:"如何懒加载图片"},{name:"twitter:title",content:"如何懒加载图片"}]}),(g,s)=>(t(),n("div",p,s[0]||(s[0]=[l(`<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言">🔗</a></h1><p><code>vueuse/core</code> 中有 <code>useElementVisibility</code> 以及 <code>useIntersectionObserver</code> 这两个 <code>API</code> 。</p><p>刚好可以写写关于图片懒加载的一些实现方法。</p><h1 id="正文" tabindex="-1">正文 <a class="header-anchor" href="#正文">🔗</a></h1><h2 id="什么是图片懒加载" tabindex="-1">什么是图片懒加载 <a class="header-anchor" href="#什么是图片懒加载">🔗</a></h2><p>可以简单的理解为只有图片在第一次进入用户可视范围时进行加载的一个技术。</p><h2 id="为什么要图片懒加载" tabindex="-1">为什么要图片懒加载 <a class="header-anchor" href="#为什么要图片懒加载">🔗</a></h2><p>对于比较小型的网站，对于首页的图片资源，大部分情况下都是直接加载的。</p><p>但是当网站首页变复杂，比如超多的展示图的时候，不在用户可视区域的部分的图片其实是可以不去加载的。</p><p>因为这些图片对用户来说不可感知，完全可以在进入用户可视区域之后再发出请求进行加载。</p><p>这就是我们常说的图片懒加载，比如视频网站 <code>Bilibili</code> 。</p><p><code>B</code> 站的首页对于每一个分区都会展示一部分的视频推荐。</p><p>这些视频都会有一张封面，如下：</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/06/202203062258499.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/06/202203062258499.avif" alt=""></a></p><p>这一个分区就有 <code>12</code> 张封面图了，而 <code>B</code> 站的分区类型是非常多的，如下：</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/06/202203062300356.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/06/202203062300356.avif" alt=""></a></p><p>如果直接展示，即使再怎么去压缩图片质量，图片的加载也是要耗费一定的流量的，而这些图片的加载是完全没必要的。</p><p>因为可能用户就只是打开首页，然后点击进入个人中心，或者直接点击搜索框进行视频搜索。</p><p>至少对于我来说是这样的，我个人很少下拉去查看各个分区的视频。</p><p>所以懒加载这些不在可视区域的图片是非常有必要的。</p><p>一方面，如果是个人网站，没使用 <code>CDN</code> 的话，可以减轻服务器的压力，这样单位时间内服务器可以对更多的用户服务，如果走 <code>CDN</code> 的话，可以减少流量消耗，毕竟走 <code>CDN</code> 的钱也不是大风刮来的，能扣就扣，你说是吧。</p><p>另一方面，可以加快网页的访问速度，现在大部分的网站都还是使用 <code>HTTP/1.1</code> ，而 <code>HTTP/1.1</code> 虽然支持长连接以及 <code>TCP</code> 连接复用，但是依然受限于 <code>TCP</code> 数量的限制，同时请求多个图片，可能把 <code>TCP</code> 连接给占满了，可能会影响后续 <code>js</code> 文件的请求，导致网页无法正常地对用户的操作进行响应。</p><p>而 <code>HTTP/2</code> 很好地解决了 <code>TCP</code> 连接数受限的问题，不过这个不是本文的重点。</p><p><a href="https://http2.akamai.com/demo" target="_blank" rel="noopener">戳这里查看 HTTP/2 和 HTTP/1.1 的图片加载速度测试 DEMO</a></p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/06/202203062328306.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/06/202203062328306.avif" alt=""></a></p><p>当然，现在 <code>B</code> 站的图片基本上都是 <code>HTTP/2</code> 的了。</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/07/202203070946642.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/07/202203070946642.avif" alt=""></a></p><h2 id="如何实现懒加载" tabindex="-1">如何实现懒加载 <a class="header-anchor" href="#如何实现懒加载">🔗</a></h2><p>根据前面的解释，基本上我们的思路就有了。</p><p>在不可视区域的图片都使用一张占位图，这样除首屏可视图片之外的图片吗，就只要请求一个图片即可。</p><p>在用户滚动的时候，不断的判断页面上的 <code>img</code> 是否出现在用户的可视区域中。</p><p>如果到达了用户的可视区域，那么把 <code>img</code> 的 <code>src</code> 切换为真实的图片地址，然后浏览器就会自动的请求图片了。</p><p>当然已经经过加载的图片，再次经过用户的可视区域的时候，就不应该在执行切换 <code>src</code> 的逻辑了，因为这已经没有意义了。</p><p>经过这段分析，我们可以得出第一种方式。</p><p>PS：这里我们都使用 <code>Vue</code> 组件的方式来编写代码。</p><h3 id="通过监听-scroll-事件来判断图片是否在可视区域" tabindex="-1">通过监听 <code>scroll</code> 事件来判断图片是否在可视区域 <a class="header-anchor" href="#通过监听-scroll-事件来判断图片是否在可视区域">🔗</a></h3><p>首先我们需要确认这个 <code>Vue</code> 组件需要什么 <code>props</code>。</p><p>首先必须有一个真实的图片地址。</p><p>其次由于我们使用占位图片来减少图片请求，所以需要另一张占位图片的地址。</p><p>在真实图片访问失败之后，需要一张表示错误的占位图片来展示，所以还需要一张表示加载错误的占位图片地址。</p><p>这样子，我们就可以写出 <code>props</code> 的结构了。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> setup</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> lang</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">ts</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> props</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> defineProps</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;{</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  src</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">string</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  defaultSrc</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">string</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  errorSrc</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">string</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}&gt;();</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p>对于组件的方式，就一个 <code>img</code> ，简单。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">img</span><span style="--s-dark:#666666;--s-light:#999999;"> /&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p>这里需要绑定 <code>img</code> 的 <code>src</code> ，这里初始化一个 <code>currentSrc</code> 的 <code>ref</code> 。</p><p>以及需要一个 <code>ref</code> 来拿到 <code>img</code> 这个元素。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> setup</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> lang</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">ts</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> currentSrc</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> ref</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">string</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> imgRef</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> ref</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">HTMLImageElement</span><span style="--s-dark:#666666;--s-light:#999999;"> |</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> null</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">null</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">img</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> </span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    ref</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">imgRef</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> </span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    :src</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">currentSrc</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  /&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p>在加载目标图片出现错误的时候启用错误图片的地址。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> setup</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> lang</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">ts</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// 添加一个加载错误的回调</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#80A665;--s-light:#59873A;"> onError</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> ()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  currentSrc</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> props</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">errorSrc</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">img</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> </span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    ref</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">imgRef</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> </span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    :src</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">currentSrc</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    @error</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">onError</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  /&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p>默认情况下由于图片不可视，所以要启用默认的占位图片。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> setup</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> lang</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">ts</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">onMounted</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 启用默认的占位图片</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  currentSrc</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> props</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">defaultSrc</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p>接着就是主要的 <code>onScroll</code> 回调的编写了。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> setup</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> lang</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">ts</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#80A665;--s-light:#59873A;"> onScroll</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> ()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> rect</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> imgRef</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">getBoundingClientRect</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> top</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> left</span><span style="--s-dark:#666666;--s-light:#999999;"> }</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> rect</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 这里不仅判断了 top ，也判断了 left ，这样可以在横向滚动的时候也适用</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">top</span><span style="--s-dark:#666666;--s-light:#999999;"> &lt;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> window</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">innerHeight</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> &amp;&amp;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> left</span><span style="--s-dark:#666666;--s-light:#999999;"> &lt;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> window</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">innerWidth</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    currentSrc</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> props</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">src</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">onMounted</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // ...</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 执行一次判断，不然已经在可视区域内的图片指向了 defaultSrc ，而不是 src</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">  onScroll</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 监听</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  window</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">addEventListener</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">scroll</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> onScroll</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">onBeforeUnmount</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 取消监听</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  window</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">removeEventListener</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">scroll</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> onScroll</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p>这里放下完整的代码。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> setup</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> lang</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">ts</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">import</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> onBeforeUnmount</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> onMounted</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> ref</span><span style="--s-dark:#666666;--s-light:#999999;"> }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> from</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">vue</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> props</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> defineProps</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;{</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  src</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">string</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  defaultSrc</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">string</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  errorSrc</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">string</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> currentSrc</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> ref</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">string</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> imgRef</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> ref</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">HTMLImageElement</span><span style="--s-dark:#666666;--s-light:#999999;"> |</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> null</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">null</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#80A665;--s-light:#59873A;"> onError</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> ()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  currentSrc</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> props</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">errorSrc</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#80A665;--s-light:#59873A;"> onScroll</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> ()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> rect</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> imgRef</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">getBoundingClientRect</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> top</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> left</span><span style="--s-dark:#666666;--s-light:#999999;"> }</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> rect</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">top</span><span style="--s-dark:#666666;--s-light:#999999;"> &lt;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> window</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">innerHeight</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> &amp;&amp;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> left</span><span style="--s-dark:#666666;--s-light:#999999;"> &lt;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> window</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">innerWidth</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    currentSrc</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> props</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">src</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">onMounted</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  currentSrc</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> props</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">defaultSrc</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">  onScroll</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  window</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">addEventListener</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">scroll</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> onScroll</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">onBeforeUnmount</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  window</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">removeEventListener</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">scroll</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> onScroll</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">img</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    ref</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">imgRef</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    :src</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">currentSrc</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    @error</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">currentSrc === errorSrc ?? onError</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  /&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p><a href="https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCBMYXp5SW1hZ2UgZnJvbSAnLi9MYXp5SW1hZ2UudnVlJztcbjwvc2NyaXB0PlxuXG48dGVtcGxhdGU+XG4gIDxkaXY+XG4gICAgPExhenlJbWFnZSBcbiAgICAgIHNyYz1cImh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9EZWRpY2F0dXM1NDYvaW1hZ2VAbWFpbi8yMDIyMDEyMjE3MzU0NTkuYXZpZlwiIFxuICAgICAgZGVmYXVsdFNyYz1cImh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9EZWRpY2F0dXM1NDYvaW1hZ2VAbWFpbi8yMDIyMDMwODE1Mzc0NDMuYXZpZlwiIFxuICAgICAgZXJyb3JTcmM9XCJcIlxuICAgICAgc3R5bGU9XCJ3aWR0aDogMTAwcHg7IG1hcmdpbi10b3A6IDEwMDBweFwiXG4gICAgPlxuICAgIDwvTGF6eUltYWdlPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+IiwiaW1wb3J0LW1hcC5qc29uIjoie1xuICBcImltcG9ydHNcIjoge1xuICAgIFwidnVlXCI6IFwiaHR0cHM6Ly9zZmMudnVlanMub3JnL3Z1ZS5ydW50aW1lLmVzbS1icm93c2VyLmpzXCJcbiAgfVxufSIsIkxhenlJbWFnZS52dWUiOiI8c2NyaXB0IHNldHVwPlxuaW1wb3J0IHtyZWYsb25Nb3VudGVkLG9uQmVmb3JlVW5tb3VudH0gZnJvbSAndnVlJztcbiAgXG5jb25zdCBwcm9wcyA9IGRlZmluZVByb3BzKHtcbiAgc3JjOiBTdHJpbmcsXG4gIGRlZmF1bHRTcmM6IFN0cmluZyxcbiAgZXJyb3JTcmM6IFN0cmluZyxcbn0pO1xuXG5jb25zdCBpbWdSZWYgPSByZWYobnVsbCk7XG5jb25zdCBjdXJyZW50U3JjID0gcmVmKCcnKTtcbiAgXG5jb25zdCBvbkVycm9yID0gKCkgPT4ge1xuICBjdXJyZW50U3JjLnZhbHVlID0gcHJvcHMuZXJyb3JTcmM7XG59XG5cbmNvbnN0IG9uU2Nyb2xsID0gKCkgPT4ge1xuICBjb25zdCByZWN0ID0gaW1nUmVmLnZhbHVlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICBjb25zdCB7IHRvcCwgbGVmdCB9ID0gcmVjdDtcbiAgaWYgKHRvcCA8IHdpbmRvdy5pbm5lckhlaWdodCAmJiBsZWZ0IDwgd2luZG93LmlubmVyV2lkdGgpIHtcbiAgICBjdXJyZW50U3JjLnZhbHVlID0gcHJvcHMuc3JjO1xuICB9XG59XG5cbm9uTW91bnRlZCgoKSA9PiB7XG4gIGN1cnJlbnRTcmMudmFsdWUgPSBwcm9wcy5kZWZhdWx0U3JjO1xuICBvblNjcm9sbCgpO1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgb25TY3JvbGwpO1xufSk7XG4gIFxub25CZWZvcmVVbm1vdW50KCgpID0+IHtcbiAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIG9uU2Nyb2xsKTtcbn0pO1xuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGltZyBcbiAgICByZWY9XCJpbWdSZWZcIlxuICAgIDpzcmM9XCJjdXJyZW50U3JjXCJcbiAgICBAZXJyb3I9XCJvbkVycm9yXCJcbiAgLz5cbjwvdGVtcGxhdGU+In0=" target="_blank" rel="noopener">戳这里查看 demo</a></p><p>可以看到，这里的核心的 <code>API</code> 为 <code>getBoundingClientRect</code> ，它能够获取元素当前的大小及其相对于视口的位置。</p><blockquote><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getBoundingClientRect" target="_blank" rel="noopener">Element.getBoundingClientRect() - MDN</a></p></blockquote><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/08/202203081158957.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/08/202203081158957.avif" alt=""></a></p><p>返回的 <code>top</code> ， <code>bottom</code> ， <code>left</code> ， <code>right</code> 这四个属性代表的意义如下图：</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/08/202203081621412.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/08/202203081621412.avif" alt=""></a></p><p>这里要注意 <code>onMounted</code> 里面执行一次 <code>onScroll</code> ，原因是，如果我们不在 <code>onMounted</code> 里面执行一次 <code>onScroll</code> 的话，就会出现图片指向了默认图片，然后一滑动就指向真正的图片了。</p><p><a href="https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCBMYXp5SW1hZ2UgZnJvbSAnLi9MYXp5SW1hZ2UudnVlJztcbjwvc2NyaXB0PlxuXG48dGVtcGxhdGU+XG4gIOeojeW+ruW+gOS4i+a7muWKqFxuICA8ZGl2IHN0eWxlPVwiaGVpZ2h0OiAxMDAwcHhcIj5cbiAgICA8TGF6eUltYWdlIFxuICAgICAgc3JjPVwiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL0RlZGljYXR1czU0Ni9pbWFnZUBtYWluLzIwMjIwMTIyMTczNTQ1OS5hdmlmXCIgXG4gICAgICBkZWZhdWx0U3JjPVwiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL0RlZGljYXR1czU0Ni9pbWFnZUBtYWluLzIwMjIwMzA4MTUzNzQ0My5hdmlmXCIgXG4gICAgICBlcnJvclNyYz1cIlwiXG4gICAgICBzdHlsZT1cIndpZHRoOiAxMDBweFwiXG4gICAgPlxuICAgIDwvTGF6eUltYWdlPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+IiwiaW1wb3J0LW1hcC5qc29uIjoie1xuICBcImltcG9ydHNcIjoge1xuICAgIFwidnVlXCI6IFwiaHR0cHM6Ly9zZmMudnVlanMub3JnL3Z1ZS5ydW50aW1lLmVzbS1icm93c2VyLmpzXCJcbiAgfVxufSIsIkxhenlJbWFnZS52dWUiOiI8c2NyaXB0IHNldHVwPlxuaW1wb3J0IHtyZWYsb25Nb3VudGVkLG9uQmVmb3JlVW5tb3VudH0gZnJvbSAndnVlJztcbiAgXG5jb25zdCBwcm9wcyA9IGRlZmluZVByb3BzKHtcbiAgc3JjOiBTdHJpbmcsXG4gIGRlZmF1bHRTcmM6IFN0cmluZyxcbiAgZXJyb3JTcmM6IFN0cmluZyxcbn0pO1xuXG5jb25zdCBpbWdSZWYgPSByZWYobnVsbCk7XG5jb25zdCBjdXJyZW50U3JjID0gcmVmKCcnKTtcbiAgXG5jb25zdCBvbkVycm9yID0gKCkgPT4ge1xuICBjdXJyZW50U3JjLnZhbHVlID0gcHJvcHMuZXJyb3JTcmM7XG59XG5cbmNvbnN0IG9uU2Nyb2xsID0gKCkgPT4ge1xuICBjb25zdCByZWN0ID0gaW1nUmVmLnZhbHVlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICBjb25zdCB7IHRvcCwgbGVmdCB9ID0gcmVjdDtcbiAgaWYgKHRvcCA8IHdpbmRvdy5pbm5lckhlaWdodCAmJiBsZWZ0IDwgd2luZG93LmlubmVyV2lkdGgpIHtcbiAgICBjdXJyZW50U3JjLnZhbHVlID0gcHJvcHMuc3JjO1xuICB9XG59XG5cbm9uTW91bnRlZCgoKSA9PiB7XG4gIGN1cnJlbnRTcmMudmFsdWUgPSBwcm9wcy5kZWZhdWx0U3JjO1xuICAvLyBvblNjcm9sbCgpO1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgb25TY3JvbGwpO1xufSk7XG4gIFxub25CZWZvcmVVbm1vdW50KCgpID0+IHtcbiAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIG9uU2Nyb2xsKTtcbn0pO1xuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGltZyBcbiAgICByZWY9XCJpbWdSZWZcIlxuICAgIDpzcmM9XCJjdXJyZW50U3JjXCJcbiAgICBAZXJyb3I9XCJvbkVycm9yXCJcbiAgLz5cbjwvdGVtcGxhdGU+In0=" target="_blank" rel="noopener">戳这里查看 demo</a></p><p>当然，我们这个代码还有一些瑕疵，比如当图片已经进入过一次可视区域进行加载之后， <code>scroll</code> 事件的绑定函数就应该取消掉了。</p><p>也就是需要在 <code>onScroll</code> 的 <code>if</code> 条件内加上 <code>window.removeEventListner(&#39;scroll&#39;, onScroll)</code> 。</p><p>以及我们现在对于 <code>if</code> 的判断是通过 <code>top</code> 和 <code>left</code> 来判定的。</p><p>我们可以想象一下，如果刚好有这么一张图片，刚打开网页的时候不渲染（理解为 <code>v-if=&quot;false&quot;</code> ），往下拖动到这张图片进入不可视范围的时候，图片开始渲染。</p><p>这时候我们肯定希望它指向默认的占位图片，但实际上它已经指向了真正的图片地址了。</p><p>也就是说，我们不仅要判断 <code>top</code> 和 <code>left</code>， 也要判断 <code>right</code> 和 <code>bottom</code> 。</p><p><code>top</code> 和 <code>left</code> 判断了元素从下方进入可视区域和从右方进入可视区域。</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091005866.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091005866.avif" alt=""></a></p><p>而 <code>bottom</code> 和 <code>right</code> 判断了元素了从上方进入可视区域和从左方进入可视区域。</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091010470.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091010470.avif" alt=""></a></p><p>这时候 <code>if</code> 判断就要修改为如下了：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-ts"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">rect</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> imgRef</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">getBoundingClientRect</span><span style="--s-dark:#666666;--s-light:#999999;">();</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const </span><span style="--s-dark:#666666;--s-light:#999999;">{</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> top</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> left</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> bottom</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> right</span><span style="--s-dark:#666666;--s-light:#999999;"> }</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> rect</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">top</span><span style="--s-dark:#666666;--s-light:#999999;"> &lt;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> window</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">innerHeight</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> &amp;&amp;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> left</span><span style="--s-dark:#666666;--s-light:#999999;"> &lt;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> window</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">innerWidth</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> &amp;&amp;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> bottom</span><span style="--s-dark:#666666;--s-light:#999999;"> &gt;</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> &amp;&amp;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> right</span><span style="--s-dark:#666666;--s-light:#999999;"> &gt;</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  currentSrc</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> props</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">src</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p>在 <code>vueuse/core</code> 中，正好为我们封装了这样的一个的函数 <code>useElementVisibility</code> 。</p><blockquote><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useElementVisibility/index.ts" target="_blank" rel="noopener">useElementVisibility - vueuse</a></p></blockquote><p>在源码中，我们也可以看到判断是否在可见区域的逻辑。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-javascript"><span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">elementIsVisible</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">value</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  rect</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">top</span><span style="--s-dark:#666666;--s-light:#999999;"> &lt;=</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">window</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">innerHeight</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ||</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> document</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">documentElement</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">clientHeight</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;"> </span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    &amp;&amp;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> rect</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">left</span><span style="--s-dark:#666666;--s-light:#999999;"> &lt;=</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">window</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">innerWidth</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> ||</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> document</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">documentElement</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">clientWidth</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    &amp;&amp;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> rect</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">bottom</span><span style="--s-dark:#666666;--s-light:#999999;"> &gt;=</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    &amp;&amp;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> rect</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">right</span><span style="--s-dark:#666666;--s-light:#999999;"> &gt;=</span><span style="--s-dark:#4C9A91;--s-light:#2F798A;"> 0</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">)</span></span></code></pre><p>可以看到，和我们上面的逻辑基本一样。</p><p>不过，我们发现存在 <code>window.innerHeight || document.documentElement.clientHeight</code> 这样的写法。</p><p><code>window.innerHeight</code> 返回了浏览器窗口的视口高度，如果有水平滚动条，也包括滚动条高度。</p><p><code>document.documentElement.clientHeight</code> 返回元素内部的高度，包含内边距，但不包括水平滚动条、边框和外边距。</p><p>其中 <code>document.documentElement</code> 可以简单理解为 <code>html</code> 元素即可。</p><p>看起来像是为了兼容 <code>IE</code> 的写法， 可是 <code>vue2</code> 已经不支持 <code>IE8</code> 及以下的版本了。</p><p>查了下 <code>Can I Use</code> 发现 <code>innerWidth</code> 这个属性 <code>IE8</code> 以下不支持。</p><p>似乎没有什么必要啊…难道是滚动条的问题吗？ emmm，不懂…</p><h3 id="通过-intersectionobserver-来观察图片是否在可视区域" tabindex="-1">通过 <code>IntersectionObserver</code> 来观察图片是否在可视区域 <a class="header-anchor" href="#通过-intersectionobserver-来观察图片是否在可视区域">🔗</a></h3><p><code>IntersectionObserver</code> 是一个构造器，可以通过创建该类型的对象，可以对元素进行异步地观察，当可见部分超过了预先设置的阈值之后，调用创建该对象时传入的回调函数。</p><blockquote><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver" target="_blank" rel="noopener">Intersection Observer - MDN</a></p></blockquote><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/08/202203081717560.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/08/202203081717560.avif" alt=""></a></p><p>简单点理解就是浏览器原生实现了 <code>onScroll</code> 这个函数的逻辑。</p><p>那么我们的代码就可以变为如下：</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-html"><span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> setup</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> lang</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">ts</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">import</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> onBeforeUnmount</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> onMounted</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> ref</span><span style="--s-dark:#666666;--s-light:#999999;"> }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> from</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;"> &quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">vue</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> props</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> defineProps</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;{</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  src</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">string</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  defaultSrc</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">string</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  errorSrc</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">string</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> currentSrc</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> ref</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">string</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> imgRef</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> ref</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">HTMLImageElement</span><span style="--s-dark:#666666;--s-light:#999999;"> |</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> null</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">null</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">let</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> observer</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">IntersectionObserver</span><span style="--s-dark:#666666;--s-light:#999999;"> | </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">null</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> null</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const</span><span style="--s-dark:#80A665;--s-light:#59873A;"> onError</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> ()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  currentSrc</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> props</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">errorSrc</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">onMounted</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  currentSrc</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> props</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">defaultSrc</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  observer</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new</span><span style="--s-dark:#80A665;--s-light:#59873A;"> IntersectionObserver</span><span style="--s-dark:#666666;--s-light:#999999;">(([</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">entry</span><span style="--s-dark:#666666;--s-light:#999999;">])</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">entry</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">isIntersecting</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      currentSrc</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> props</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">src</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      observer</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">unobserve</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">imgRef</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  });</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  observer</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">observe</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">imgRef</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">onBeforeUnmount</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  observer</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">unobserve</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">imgRef</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">script</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  &lt;</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">img</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    ref</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">imgRef</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    :src</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">currentSrc</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    @error</span><span style="--s-dark:#666666;--s-light:#999999;">=</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">currentSrc === errorSrc ?? onError</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  /&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">&lt;/</span><span style="--s-dark:#4D9375;--s-light:#1E754F;">template</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span></code></pre><p>看起来相当的简单！</p><p><a href="https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCBMYXp5SW1hZ2UgZnJvbSAnLi9MYXp5SW1hZ2UudnVlJztcbjwvc2NyaXB0PlxuXG48dGVtcGxhdGU+XG4gIDxkaXY+XG4gICAgPExhenlJbWFnZSBcbiAgICAgIHNyYz1cImh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9EZWRpY2F0dXM1NDYvaW1hZ2VAbWFpbi8yMDIyMDEyMjE3MzU0NTkuYXZpZlwiIFxuICAgICAgZGVmYXVsdFNyYz1cImh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9EZWRpY2F0dXM1NDYvaW1hZ2VAbWFpbi8yMDIyMDMwODE1Mzc0NDMuYXZpZlwiIFxuICAgICAgZXJyb3JTcmM9XCJcIlxuICAgICAgc3R5bGU9XCJ3aWR0aDogMTAwcHg7bWFyZ2luLXRvcDogMTAwMHB4XCJcbiAgICA+XG4gICAgPC9MYXp5SW1hZ2U+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT4iLCJpbXBvcnQtbWFwLmpzb24iOiJ7XG4gIFwiaW1wb3J0c1wiOiB7XG4gICAgXCJ2dWVcIjogXCJodHRwczovL3NmYy52dWVqcy5vcmcvdnVlLnJ1bnRpbWUuZXNtLWJyb3dzZXIuanNcIlxuICB9XG59IiwiTGF6eUltYWdlLnZ1ZSI6IjxzY3JpcHQgc2V0dXA+XG5pbXBvcnQge3JlZixvbk1vdW50ZWQsb25CZWZvcmVVbm1vdW50fSBmcm9tICd2dWUnO1xuICBcbmNvbnN0IHByb3BzID0gZGVmaW5lUHJvcHMoe1xuICBzcmM6IFN0cmluZyxcbiAgZGVmYXVsdFNyYzogU3RyaW5nLFxuICBlcnJvclNyYzogU3RyaW5nLFxufSk7XG5cbmNvbnN0IGltZ1JlZiA9IHJlZihudWxsKTtcbmNvbnN0IGN1cnJlbnRTcmMgPSByZWYoJycpO1xubGV0IG9ic2VydmVyID0gbnVsbDtcbiAgXG5jb25zdCBvbkVycm9yID0gKCkgPT4ge1xuICBjdXJyZW50U3JjLnZhbHVlID0gcHJvcHMuZXJyb3JTcmM7XG59XG5cbm9uTW91bnRlZCgoKSA9PiB7XG4gIGN1cnJlbnRTcmMudmFsdWUgPSBwcm9wcy5kZWZhdWx0U3JjO1xuICBvYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcigoW2VudHJ5XSkgPT4ge1xuICAgIGlmIChlbnRyeS5pc0ludGVyc2VjdGluZykge1xuICAgICAgY3VycmVudFNyYy52YWx1ZSA9IHByb3BzLnNyYztcbiAgICAgIG9ic2VydmVyLnVub2JzZXJ2ZShpbWdSZWYudmFsdWUpO1xuICAgIH1cbiAgfSk7XG4gIG9ic2VydmVyLm9ic2VydmUoaW1nUmVmLnZhbHVlKTtcbn0pO1xuICBcbm9uQmVmb3JlVW5tb3VudCgoKSA9PiB7XG4gIG9ic2VydmVyLnVub2JzZXJ2ZShpbWdSZWYudmFsdWUpO1xufSk7XG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8aW1nIFxuICAgIHJlZj1cImltZ1JlZlwiXG4gICAgOnNyYz1cImN1cnJlbnRTcmNcIlxuICAgIEBlcnJvcj1cIm9uRXJyb3JcIlxuICAvPlxuPC90ZW1wbGF0ZT4ifQ==" target="_blank" rel="noopener">戳这里查看 demo</a></p><p>这里需要注意，<code>IntersectionObserver</code> 支持对指定容器进行观察，默认情况下对整个 <code>document</code> 进行观察</p><p><code>IntersectionObserver</code> 使用了 <code>threshold</code> 阈值这个概念，简单理解为就是目标元素与容器元素相交部分的大小占目标元素的大小的比重，值为 <code>0 ~ 1</code> ，默认情况下为 <code>0</code> ，即边框相交就直接调用回调函数。</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091017411.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091017411.avif" alt=""></a></p><p><code>IntersectionObserver</code> 使用了 <code>roomMargin</code> 来扩大或者缩小检测的边框，该值默认为 <code>0px 0px 0px 0px</code> ，即边框就是对应的 <code>width</code> 和 <code>height</code> 。</p><p>举例来说，如果将 <code>roomMargin</code> 设置为 <code>0 0 100px 0</code> 的话，意味着检测的边框向“外”扩大了，即图片会更早地被加载。</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091023313.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091023313.avif" alt=""></a></p><p>相反，如果将 <code>roomMargin</code> 设置为 <code>0 0 -100px 0</code> 的话，意味着检测的边框向“内”收缩了，即图片会更晚地被加载。</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091027183.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091027183.avif" alt=""></a></p><p>如果还是对相关的参数不是很了解，可以直接去 <code>MDN</code> 的相关页面查看解释：</p><blockquote><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Intersection_Observer_API" target="_blank" rel="noopener">Intersection Observer API - MDN</a></p></blockquote><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/08/202203081824246.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/08/202203081824246.avif" alt=""></a></p><p>中文页后半部分还没完全翻译好，凑合着看。</p><p>除了第二个参数，我们还在第一个参数的回调中使用数组解构的语法解构出了一个 <code>entry</code> 对象，使用了它的 <code>isIntersecting</code> 属性，这个属性返回 <code>true</code> 意味着从非相交转到相交，返回 <code>false</code> 则相反。</p><p>当然除了 <code>isIntersecting</code> 属性，也有其他一些属性，可以获取相关的布局信息，不过这里用不到，就不详细展开了，可以去 <code>MDN</code> 上查看：</p><blockquote><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserverEntry" target="_blank" rel="noopener">IntersectionObserverEntry - MDN</a></p></blockquote><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091053471.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091053471.avif" alt=""></a></p><p>在 <code>vueuse/core</code> 中，也为我们封装了这样的一个的函数 <code>useIntersectionObserver</code> 。</p><blockquote><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useIntersectionObserver/index.ts" target="_blank" rel="noopener">useIntersectionObserver - vueuse</a></p></blockquote><p>其中对是否支持 <code>IntersectionObserver</code> 的判断为 <code>const isSupported = window &amp;&amp; &#39;IntersectionObserver&#39; in window</code> 。</p><p>所以根据这个就可以做一些降级处理，从 <code>IntersectionObserver</code> 降级到 <code>getBoundingClientRect</code> 。</p><h2 id="这两种懒加载方法的区别" tabindex="-1">这两种懒加载方法的区别 <a class="header-anchor" href="#这两种懒加载方法的区别">🔗</a></h2><p>上面我们讲了两种方法</p><ul><li>监听 <code>scroll</code> 事件，通过 <code>getBoundingClientRect</code> 来获取位置，从而进行计算和判断。</li><li>使用原生的 <code>IntersectionObserver</code> 创建对象。</li></ul><h3 id="兼容性" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性">🔗</a></h3><p>兼容性上讲，<code>getBoundingClientRect</code> 的兼容性是完胜 <code>IntersectionObserver</code> 。</p><p><code>IntersectionObserver</code> 的兼容性如下：</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091059499.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091059499.avif" alt=""></a></p><p><code>getBoundingClientRect</code> 兼容性如下：</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091102664.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091102664.avif" alt=""></a></p><p>兼容 <code>IE</code> 这点 <code>IntersectionObserver</code> 完败哈哈哈哈。</p><p><code>IntersectionObserver</code> 的兼容性还是相当不错的，所以如果项目对兼容性要求不高的话，大胆地上吧。</p><p>哦对了，回调内的 <code>IntersectionObserverEntry</code> 对象的属性现在还是实验性质的，未来可能还会发生变化，不过就单单 <code>isIntersecting</code> 这个属性，我觉得应该是不会出现什么改动的，嗯，大概…</p><h3 id="性能" tabindex="-1">性能 <a class="header-anchor" href="#性能">🔗</a></h3><p>首先，我们知道 <code>getBoundingClientRect</code> 这个方法是会立即清空（执行）浏览器的重排缓冲队列，如果网站的动画很多的话，可能会增加重排的次数，造成网站卡顿。</p><p>而且调用 <code>getBoundingClientRect</code> 是一个同步的过程，如果操作时间过长，意味着主线程被长时间的占用，可能会影响到用户的其他交互，并且由于 <code>scroll</code> 的调用频率是非常高的，在 <code>scroll</code> 事件中调用 <code>getBoundingClientRect</code> ，在老人机上就完全有可能造成相当严重的卡顿，所以我们可以在这个加个<strong>节流</strong>，一定程度上来缓解 <code>scroll</code> 调用频率过高问题。</p><p>新的 <code>IntersectionObserver</code> 实现是异步的，这意味着不需要在 <code>scroll</code> 事件中进行大量的计算，类似于 <code>requestIdleCallback</code> ，它的优先级是比较低的，这可以防止长时间占用主线程造成的页面无响应。</p><p>这里贴一个 <code>IntersectionObserver</code> 的 <code>polyfill</code> ：</p><blockquote><p><a href="https://github.com/w3c/IntersectionObserver/blob/cac7ad29d28629f8d25affda853eda3440b05f97/polyfill/intersection-observer.js" target="_blank" rel="noopener">polyfill/intersection-observer.js - w3c</a></p></blockquote><p>在实现的第 <code>369</code> 和 <code>370</code> 可以看出，降级之后还是通过监听 <code>scroll</code> 和 <code>resize</code> 事件来检测是否相交的。</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091451387.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091451387.avif" alt=""></a></p><p>在 <code>143</code> 行，使用了节流函数 <code>throttle</code> 来包住 <code>_checkForIntersections</code> 。</p><p><a data-fancybox="doc-gallery" href="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091453045.avif" target="_blank" rel="noopener noreferrer"><img src="https://fastly.jsdelivr.net/gh/Dedicatus546/image@main/2022/03/09/202203091453045.avif" alt=""></a></p><p>so，直接上 <code>IntersectionObserver</code> 就完事了，大佬都把降级写好了，拿来引入即可。</p><h1 id="后记" tabindex="-1">后记 <a class="header-anchor" href="#后记">🔗</a></h1><p>如果你看到这里了，那么对于第一个通过 <code>scroll</code> 实现的懒加载还是有一个问题。</p><p>那就是没监听 <code>resize</code> 事件，因为窗口大小的变化也会改变元素的可见状态。</p><p>当然，检测可见这种技术不仅可以用在图片懒加载，还可以用在很多地方，比如：</p><ul><li>视频进入可视窗口自动播放</li><li>监听一个占位元素来实现下拉到最后自动刷新</li><li>检测用户对某个区域的停留时长，比如广告，消息区域等等</li><li>在元素可见之后再执行该元素的动画</li><li>…</li></ul><p>虽然它真的很厉害，但是我到现在还没在项目中用到它…</p>`,145)])))}};export{x as categories,v as date,J as default,I as key,X as meta,W as tags,f as title,Z as updated,G as wordCount};
