import{createElementBlock as n,openBlock as p,createStaticVNode as t}from"vue";import{c as l}from"./app-kEKefLn2.js";import"nprogress";import"pinia-plugin-persistedstate";import"vue-router";import"vue-router-better-scroller";import"@vueuse/core";import"@vueuse/components";import"@vueuse/router";import"octokit";import"pinia";import"date-fns";const e={class:"kan-doc"},F="Vue3.0Reactivity之computed",C=1591932799,v="2020-06-12T11:33:19.000Z",b="2023-02-13T18:28:43.000Z",T=["JavaScript","Vue"],x=["编程"],O=9887,V=[{property:"og:title",content:"Vue3.0Reactivity之computed"},{name:"twitter:title",content:"Vue3.0Reactivity之computed"}],R={__name:"Vue3-0Reactivity之computed",setup(i,{expose:a}){return a({frontmatter:{title:"Vue3.0Reactivity之computed",key:1591932799,date:"2020-06-12T11:33:19.000Z",updated:"2023-02-13T18:28:43.000Z",tags:["JavaScript","Vue"],categories:["编程"],wordCount:9887,meta:[{property:"og:title",content:"Vue3.0Reactivity之computed"},{name:"twitter:title",content:"Vue3.0Reactivity之computed"}]}}),l({title:"Vue3.0Reactivity之computed",meta:[{property:"og:title",content:"Vue3.0Reactivity之computed"},{name:"twitter:title",content:"Vue3.0Reactivity之computed"}]}),(g,s)=>(p(),n("div",e,s[0]||(s[0]=[t(`<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言">🔗</a></h1><p>这次讲讲<code>computed</code>这个API</p><h1 id="computed" tabindex="-1"><code>computed</code> <a class="header-anchor" href="#computed">🔗</a></h1><p><code>computed</code>在Vue2也有体现，基本上是一个缓存比较大的计算量的值的一种方法，并且能在依赖的值发生变化的时候自动的计算更新后的值。</p><p>在我们前面的翻译API的文章中知道了Vue3中<code>computed</code>接收一个getter函数，返回了一个<code>ref</code>的对象。</p><p>可以用一个例子来简单的看下Vue3中<code>computed</code>的使用。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-typescript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const </span><span style="--s-dark:#666666;--s-light:#999999;">{</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">reactive</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> effect</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">}</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> VueReactivity</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">o</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">  name</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">lwf</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">r</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> reactive</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">o</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">c</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> r</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> + </span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;"> --- computed</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">effect</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">r</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span></code></pre><p>这时候我们尝试改变<code>r.name</code>的值，然后再输出<code>c.value</code>的值</p><p><a data-fancybox="doc-gallery" href="https://i.loli.net/2020/05/04/FZPTJUfeywNV9mS.gif" target="_blank" rel="noopener noreferrer"><img src="https://i.loli.net/2020/05/04/FZPTJUfeywNV9mS.gif" alt=""></a></p><p>在更新了响应式对象<code>r</code>的<code>name</code>属性之后，它的依赖，也就是我们写的effect便执行了，然后再打印<code>c.value</code>，发现它的值已经发生了改变。</p><p>接下来，我们就来探究这个API是如何做到这种效果的。</p><p>首先，老套路，找到它的定义</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-typescript"><span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">export</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  getterOrOptions</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ComputedGetter</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt; | </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">WritableComputedOptions</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  let </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">getter</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ComputedGetter</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  let </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">setter</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ComputedSetter</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#80A665;--s-light:#59873A;">isFunction</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">getterOrOptions</span><span style="--s-dark:#666666;--s-light:#999999;">))</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    getter</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> getterOrOptions</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    setter</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> __DEV__</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">      ?</span><span style="--s-dark:#666666;--s-light:#999999;"> ()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">          console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">warn</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Write operation failed: computed value is readonly</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">      :</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> NOOP</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> else</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    getter</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> getterOrOptions</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">get</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    setter</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> getterOrOptions</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">set</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  let </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">dirty</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> true</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  let </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  let </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">computed</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ComputedRef</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">runner</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> effect</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">getter</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">    lazy</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#4D9375;--s-light:#1E754F;">true</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // mark effect as computed so that it gets priority during trigger</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">    computed</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#4D9375;--s-light:#1E754F;">true</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">    scheduler</span><span style="--s-dark:#666666;--s-light:#999999;">: () =&gt; {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">      if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">dirty</span><span style="--s-dark:#666666;--s-light:#999999;">) {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        dirty</span><span style="--s-dark:#666666;--s-light:#999999;"> = </span><span style="--s-dark:#4D9375;--s-light:#1E754F;">true</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">        trigger</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">computed</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">TriggerOpTypes</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">SET</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">value</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  })</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  computed</span><span style="--s-dark:#666666;--s-light:#999999;"> = {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">    _isRef</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#4D9375;--s-light:#1E754F;">true</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // expose effect so computed can be stopped</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">    effect</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">runner</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    get</span><span style="--s-dark:#80A665;--s-light:#59873A;"> value</span><span style="--s-dark:#666666;--s-light:#999999;">() {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">      if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">dirty</span><span style="--s-dark:#666666;--s-light:#999999;">) {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        value</span><span style="--s-dark:#666666;--s-light:#999999;"> = </span><span style="--s-dark:#80A665;--s-light:#59873A;">runner</span><span style="--s-dark:#666666;--s-light:#999999;">()</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        dirty</span><span style="--s-dark:#666666;--s-light:#999999;"> = </span><span style="--s-dark:#4D9375;--s-light:#1E754F;">false</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      }</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">      track</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">computed</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">TrackOpTypes</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">GET</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">value</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">      return</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> value</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    },</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    set</span><span style="--s-dark:#80A665;--s-light:#59873A;"> value</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">newValue</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">) {</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">      setter</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">newValue</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> as</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> any</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  return</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> computed</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p>这个函数很长，但总体上可以分成三个部分</p><ul><li>匹配参数</li><li>建立依赖</li><li>返回构建的<code>computed</code>对象（也就是<code>ref</code>对象）</li></ul><h2 id="匹配参数" tabindex="-1">匹配参数 <a class="header-anchor" href="#匹配参数">🔗</a></h2><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-typescript"><span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">export</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  getterOrOptions</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ComputedGetter</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt; | </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">WritableComputedOptions</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  let </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">getter</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ComputedGetter</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  let </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">setter</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ComputedSetter</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#80A665;--s-light:#59873A;">isFunction</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">getterOrOptions</span><span style="--s-dark:#666666;--s-light:#999999;">))</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    getter</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> getterOrOptions</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    setter</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> __DEV__</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">      ?</span><span style="--s-dark:#666666;--s-light:#999999;"> ()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">          console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">warn</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">Write operation failed: computed value is readonly</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">      :</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> NOOP</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> else</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    getter</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> getterOrOptions</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">get</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    setter</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> getterOrOptions</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">set</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // ...</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p>这里判断了传进来的参数是不是一个函数，如果是，那么这个函数就作为一个getter（此时就是只读的），如果不是，那就分别取<code>get</code>和<code>set</code>属性做为getter和setter。</p><p>一般而言，使用<code>computed</code>时，都是直接传递一个函数进去，也就是上面我举的例子一样，基本上用不到setter。</p><h2 id="建立effect（依赖）" tabindex="-1">建立effect（依赖） <a class="header-anchor" href="#建立effect（依赖）">🔗</a></h2><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-typescript"><span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">export</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  getterOrOptions</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ComputedGetter</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt; | </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">WritableComputedOptions</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // ...</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  let </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">dirty</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> true</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  let </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  let </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">computed</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ComputedRef</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">runner</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> effect</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">getter</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">    lazy</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#4D9375;--s-light:#1E754F;">true</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // mark effect as computed so that it gets priority during trigger</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">    computed</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#4D9375;--s-light:#1E754F;">true</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">    scheduler</span><span style="--s-dark:#666666;--s-light:#999999;">: () =&gt; {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">      if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">dirty</span><span style="--s-dark:#666666;--s-light:#999999;">) {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        dirty</span><span style="--s-dark:#666666;--s-light:#999999;"> = </span><span style="--s-dark:#4D9375;--s-light:#1E754F;">true</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">        trigger</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">computed</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">TriggerOpTypes</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">SET</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">value</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  })</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // ...</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p>这里构建了一个effect，把传进来的getter传进了<code>effect</code>这个API，通过之前<code>reactive</code>API的学习，我们知道，</p><p><code>effect</code>传进一个函数，把这个函数和这个函数内部使用的响应式变量建立关联，当这些响应式变量发生改变时，就重新执行这个传进来的函数。</p><p>但是这个构建的effect和我们之前似乎有点不同，额外的传入了一个参数。</p><p>首先是<code>lazy</code>，这个参数的意思是，不马上执行（也就是自动）这个函数来建立依赖，而是通过返回的函数来手动的来收集依赖。</p><p>这里的<code>lazy</code>在<code>effect</code>的源码中非常简单</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-typescript"><span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">export</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> effect</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> any</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">  fn</span><span style="--s-dark:#666666;--s-light:#999999;">: () =&gt; </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  options</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ReactiveEffectOptions</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> EMPTY_OBJ</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">):</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> ReactiveEffect</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#80A665;--s-light:#59873A;">isEffect</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">fn</span><span style="--s-dark:#666666;--s-light:#999999;">))</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">    fn</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> fn</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">raw</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">effect</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> createReactiveEffect</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">fn</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> options</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 下面为lazy参数</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">options</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">lazy</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">    effect</span><span style="--s-dark:#666666;--s-light:#999999;">()</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  return</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> effect</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p>可以简单的理解，<code>lazy</code>为假，就自动帮你执行了这个在函数内部创建出来的effect，也就是自动的收集依赖。如果为真，直接返回，可以由用户自己执行来改变收集依赖的时机。</p><p>第二个参数为<code>computed</code>，这个参数上面有一个注释，翻译过来为：给这个effect添加一个标记，以至于它可以在trigger时，优先的执行。</p><p>第三个参数为<code>scheduler</code>，传入的为一个函数。</p><p>这里我们可以回到前面看<code>trigger</code>函数的实现。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-typescript"><span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">export</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> trigger</span><span style="--s-dark:#666666;--s-light:#999999;">(</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  target</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">object</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  type</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">TriggerOpTypes</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  key</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">?</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">unknown</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  newValue</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">?</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">unknown</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  oldValue</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">?</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">unknown</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  oldTarget</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">?</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Map</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">unknown</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">unknown</span><span style="--s-dark:#666666;--s-light:#999999;">&gt; | </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Set</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">unknown</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // ...</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">effects</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new </span><span style="--s-dark:#80A665;--s-light:#59873A;">Set</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ReactiveEffect</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;()</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 这是一个计算属性的effect的Set</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">computedRunners</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> new </span><span style="--s-dark:#80A665;--s-light:#59873A;">Set</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ReactiveEffect</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;()</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const </span><span style="--s-dark:#80A665;--s-light:#59873A;">add</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">effectsToAdd</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">Set</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ReactiveEffect</span><span style="--s-dark:#666666;--s-light:#999999;">&gt; | </span><span style="--s-dark:#CB7676;--s-light:#AB5959;">undefined</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">effectsToAdd</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      effectsToAdd</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">forEach</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">effect</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">        if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">effect</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> !== </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">activeEffect</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> || !</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">shouldTrack</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">          // 根据computed这个参数来分类effect</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">          if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">effect</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">options</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">computed</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">            computedRunners</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">add</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">effect</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">          }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> else</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">            effects</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">add</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">effect</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">          }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> else</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">          // the effect mutated its own dependency during its execution.</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">          // this can be caused by operations like foo.value++</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">          // do not trigger or we end in an infinite loop</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">        }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      })</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">  </span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // ...</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">  </span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const </span><span style="--s-dark:#80A665;--s-light:#59873A;">run</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">effect</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ReactiveEffect</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">__DEV__</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> &amp;&amp; </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">effect</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">options</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">onTrigger</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      effect</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">options</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">onTrigger</span><span style="--s-dark:#666666;--s-light:#999999;">({</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        effect</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        target</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        key</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        type</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        newValue</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        oldValue</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        oldTarget</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      })</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // 如果scheduler有值，就执行scheduler，否则就执行effect。</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">effect</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">options</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">scheduler</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      effect</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">options</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">scheduler</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">effect</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> else</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">      effect</span><span style="--s-dark:#666666;--s-light:#999999;">()</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // Important: computed effects must be run first so that computed getters</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // can be invalidated before any normal effects that depend on them are run.</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 重点：计算effect需要提前运行。这样可以使得计算effect的getter的值在任何一般的effect运行之前失效</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  computedRunners</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">forEach</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">run</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  effects</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">forEach</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">run</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p>具体的重点都写在代码的注释中了，简单讲就是分effect为两类，一类是一般effect，一类是计算effect，当一个响应式对象发生变化时，先执行它的计算effect，再执行它的一般effect。</p><p>为啥要先执行计算effect呢？这个我们最后再说。</p><h2 id="返回构建的computed对象（也就是ref对象）" tabindex="-1">返回构建的<code>computed</code>对象（也就是<code>ref</code>对象） <a class="header-anchor" href="#返回构建的computed对象（也就是ref对象）">🔗</a></h2><p>我们再看最后一段代码</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-typescript"><span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">export</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  options</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">WritableComputedOptions</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">):</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> WritableComputedRef</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">export</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  getterOrOptions</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ComputedGetter</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt; | </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">WritableComputedOptions</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // ...</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  computed</span><span style="--s-dark:#666666;--s-light:#999999;"> = {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">    _isRef</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#4D9375;--s-light:#1E754F;">true</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // expose effect so computed can be stopped</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">    effect</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">runner</span><span style="--s-dark:#666666;--s-light:#999999;">,</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    get</span><span style="--s-dark:#80A665;--s-light:#59873A;"> value</span><span style="--s-dark:#666666;--s-light:#999999;">() {</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">      if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">dirty</span><span style="--s-dark:#666666;--s-light:#999999;">) {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        value</span><span style="--s-dark:#666666;--s-light:#999999;"> = </span><span style="--s-dark:#80A665;--s-light:#59873A;">runner</span><span style="--s-dark:#666666;--s-light:#999999;">()</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        dirty</span><span style="--s-dark:#666666;--s-light:#999999;"> = </span><span style="--s-dark:#4D9375;--s-light:#1E754F;">false</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      }</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">      track</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">computed</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">TrackOpTypes</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">GET</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">value</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">      return</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> value</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    },</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    set</span><span style="--s-dark:#80A665;--s-light:#59873A;"> value</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">newValue</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">) {</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">      setter</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">newValue</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> as</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> any</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">  return</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> computed</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p>最后就是构建一个ref对象，和一般的ref对象不同的是，计算ref有一个<code>effect</code>的属性，暴露了通过参数生成的effect对象，可以让我们停止这个effect。</p><p>这个构建的ref对象和我们之前通过<code>ref</code>构建的ref对象基本很像，但是在getter中出现了一个判断。判断了<code>dirty</code>的值来执行<code>runner</code>也就是effect。</p><p>那这个<code>dirty</code>是干什么用的呢？我们可以用开头举的例子。</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-typescript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const </span><span style="--s-dark:#666666;--s-light:#999999;">{</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">reactive</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> effect</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">}</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> VueReactivity</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">o</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">  name</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">lwf</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">r</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> reactive</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">o</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">c</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> r</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> + </span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;"> --- computed</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">effect</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">r</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span></code></pre><p>当我们打印<code>c.value</code>时，这是触发了<code>value</code>的getter，也就是到了</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-typescript"><span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">export</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  options</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">WritableComputedOptions</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">):</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> WritableComputedRef</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">export</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  getterOrOptions</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ComputedGetter</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt; | </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">WritableComputedOptions</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // ...</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  computed</span><span style="--s-dark:#666666;--s-light:#999999;"> = {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // ...</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">    get</span><span style="--s-dark:#80A665;--s-light:#59873A;"> value</span><span style="--s-dark:#666666;--s-light:#999999;">() {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">      // 此时运行到这里</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">      if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">dirty</span><span style="--s-dark:#666666;--s-light:#999999;">) {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        value</span><span style="--s-dark:#666666;--s-light:#999999;"> = </span><span style="--s-dark:#80A665;--s-light:#59873A;">runner</span><span style="--s-dark:#666666;--s-light:#999999;">()</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        dirty</span><span style="--s-dark:#666666;--s-light:#999999;"> = </span><span style="--s-dark:#4D9375;--s-light:#1E754F;">false</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      }</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">      track</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">computed</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">TrackOpTypes</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">GET</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">value</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">      return</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> value</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    },</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // ...</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> as</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;"> any</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // ...</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p>接下来我们判断了<code>dirty</code>，<code>dirty</code>初始化是<code>true</code>的，所以会执行if块。</p><p>这时候执行了<code>runner</code>，也就是响应式对象<code>r</code>会收集到传入<code>computed</code>的函数。</p><p><code>runner</code>的返回值也就是传入函数的返回值，赋给了<code>value</code>变量，然后置<code>dirty</code>变量为<code>false</code>，接着便是收集依赖，返回<code>value</code>变量了。</p><p>到这，我们就获得了computed对象的<code>value</code>属性了</p><p>如果现在我们再一次的运行<code>c.value</code>，依然会调用这个属性的getter，但是由于<code>dirty</code>变量为<code>false</code>，直接返回了<code>value</code>对象。</p><p>聪明的人可能明白了，<code>dirty</code>是用来判断依赖到的响应式对象是否发生改变的。</p><p>没改变的话，直接返回缓存的值，也就避免了多次的计算。</p><p>ok，这时，我执行了<code>r.name = &amp;#39;index&amp;#39;</code>，也就是会触发响应式对象<code>r</code>的所有依赖effect执行。</p><p>这时，响应式对象<code>r</code>的依赖中是有我们传入<code>computed</code>的函数所构成的effect的。</p><p>在<code>trigger</code>函数中，有一个<code>run</code>函数</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-typescript"><span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">export</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> trigger</span><span style="--s-dark:#666666;--s-light:#999999;">(</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // ...</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // ...</span></span>
<span class="line"><span style="--s-dark:#DBD7CAEE;--s-light:#393A34;">  </span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const </span><span style="--s-dark:#80A665;--s-light:#59873A;">run</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">effect</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ReactiveEffect</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // ...</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // 如果scheduler有值，就执行scheduler，否则就执行effect。</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">    if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">effect</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">options</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">scheduler</span><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">      effect</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">options</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">scheduler</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">effect</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span><span style="--s-dark:#4D9375;--s-light:#1E754F;"> else</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">      effect</span><span style="--s-dark:#666666;--s-light:#999999;">()</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // Important: computed effects must be run first so that computed getters</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // can be invalidated before any normal effects that depend on them are run.</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">  // 重点：计算effect需要提前运行。这样可以使得计算effect的getter的值在任何一般的effect运行之前失效</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  computedRunners</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">forEach</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">run</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  effects</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">forEach</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">run</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p>这个<code>run</code>函数就是执行我们的effect的，其中判断了<code>effect.options.scheduler</code>，为真就传入effect对象并执行，也就是<code>effect.options.scheduler(effect)</code>，为假就直接执行effect对象。</p><p>还记得我们之前通过传入函数生成一个计算effect时传入的额外参数吗？</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-typescript"><span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">export</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> function</span><span style="--s-dark:#80A665;--s-light:#59873A;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;(</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  getterOrOptions</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">ComputedGetter</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt; | </span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">WritableComputedOptions</span><span style="--s-dark:#666666;--s-light:#999999;">&lt;</span><span style="--s-dark:#5DA994;--s-light:#2E8F82;">T</span><span style="--s-dark:#666666;--s-light:#999999;">&gt;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">)</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">  const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">runner</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> effect</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">getter</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">    // ...</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">    scheduler</span><span style="--s-dark:#666666;--s-light:#999999;">: () =&gt; {</span></span>
<span class="line"><span style="--s-dark:#758575DD;--s-light:#A0ADA0;">      //这里就是当计算effect依赖的响应式对象发生改变时，会执行的代码段。</span></span>
<span class="line"><span style="--s-dark:#4D9375;--s-light:#1E754F;">      if</span><span style="--s-dark:#666666;--s-light:#999999;"> (</span><span style="--s-dark:#CB7676;--s-light:#AB5959;">!</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">dirty</span><span style="--s-dark:#666666;--s-light:#999999;">) {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">        dirty</span><span style="--s-dark:#666666;--s-light:#999999;"> = </span><span style="--s-dark:#4D9375;--s-light:#1E754F;">true</span></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">        trigger</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">computed</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">TriggerOpTypes</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">SET</span><span style="--s-dark:#666666;--s-light:#999999;">, </span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">value</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&#39;</span><span style="--s-dark:#666666;--s-light:#999999;">)</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">      }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">    }</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">  })</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">}</span></span></code></pre><p>这里判断了<code>dirty</code>变量，如果为<code>false</code>，就置为<code>true</code>并触发这个计算ref的依赖，<code>dirty</code>为假的意思就是此时计算ref所依赖的响应式对象已经发生改变了。</p><p>前面我们已经打印了<code>c.value</code>的值了，这时的<code>dirty</code>就是<code>false</code>了，进入了if的代码块。置为<code>dirty</code>为<code>true</code>，触发了计算ref的依赖。</p><p>如果一直没有取<code>value</code>属性的值，那么就没有必要去触发计算ref的依赖。在第一次获取计算ref的值（<code>.value</code>）之前，它的值都是不确定的（也不能说不确定，就是会根据它所依赖响应式对象的最新值来进行计算并返回）。</p><p>这时我们再次打印<code>c.value</code>，由于响应式对象<code>r</code>的改变使得<code>dirty</code>变为了<code>true</code>，就又要再执行一次<code>runner</code>来获取最新的值。</p><p>最后，为什么要先执行响应式对象的计算effect呢？</p><p>很简单，我们用下面的代码来理解</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-typescript"><span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const </span><span style="--s-dark:#666666;--s-light:#999999;">{</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">reactive</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> effect</span><span style="--s-dark:#666666;--s-light:#999999;">,</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">}</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> VueReactivity</span><span style="--s-dark:#666666;--s-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">o</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#B8A965;--s-light:#998418;">  name</span><span style="--s-dark:#666666;--s-light:#999999;">: </span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;">lwf</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">r</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> reactive</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">o</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#CB7676;--s-light:#AB5959;">const </span><span style="--s-dark:#BD976A;--s-light:#B07D48;">c</span><span style="--s-dark:#666666;--s-light:#999999;"> =</span><span style="--s-dark:#80A665;--s-light:#59873A;"> computed</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#BD976A;--s-light:#B07D48;"> r</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#CB7676;--s-light:#AB5959;"> + </span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#C98A7D;--s-light:#B56959;"> --- computed</span><span style="--s-dark:#C98A7D77;--s-light:#B5695977;">&quot;</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--s-dark:#80A665;--s-light:#59873A;">effect</span><span style="--s-dark:#666666;--s-light:#999999;">(()</span><span style="--s-dark:#666666;--s-light:#999999;"> =&gt;</span><span style="--s-dark:#666666;--s-light:#999999;"> {</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">r</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">name</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#BD976A;--s-light:#B07D48;">  console</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#80A665;--s-light:#59873A;">log</span><span style="--s-dark:#666666;--s-light:#999999;">(</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">c</span><span style="--s-dark:#666666;--s-light:#999999;">.</span><span style="--s-dark:#BD976A;--s-light:#B07D48;">value</span><span style="--s-dark:#666666;--s-light:#999999;">);</span></span>
<span class="line"><span style="--s-dark:#666666;--s-light:#999999;">});</span></span></code></pre><p>这时运行<code>r.name = &amp;#39;index&amp;#39;</code>的话，这时会打印两次effect</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-text"><span class="line"><span>// r对象改变触发了effect</span></span>
<span class="line"><span>&#39;index&#39;</span></span>
<span class="line"><span>&#39;index --- computed&#39;</span></span>
<span class="line"><span>// c对象改变触发了effect</span></span>
<span class="line"><span>&#39;index&#39;</span></span>
<span class="line"><span>&#39;index --- computed&#39;</span></span></code></pre><p>如果你没有先执行计算effect的话，此时对于该计算ref的<code>dirty</code>还是<code>false</code>，也就是没有通知到计算ref对象此时依赖的响应式对象发生了变化，使用到了旧的值。也就是打印了</p><pre class="shiki shiki-themes vitesse-dark vitesse-light" style="--s-dark:#dbd7caee;--s-light:#393a34;--s-dark-bg:#121212;--s-light-bg:#ffffff;" tabindex="0"><code class="language-text"><span class="line"><span>// r对象改变触发了effect</span></span>
<span class="line"><span>&#39;index&#39;</span></span>
<span class="line"><span>// c的getter中dirty还是为false，使用到了旧的值。</span></span>
<span class="line"><span>&#39;lwf --- computed&#39;</span></span>
<span class="line"><span>// c对象改变触发了effect</span></span>
<span class="line"><span>&#39;index&#39;</span></span>
<span class="line"><span>&#39;index --- computed&#39;</span></span></code></pre><p>至此，<code>computed</code>API的基本流程基本上就讲完了。不得不说实现上确实很巧妙，用到了很多的闭包。</p><h1 id="后记" tabindex="-1">后记 <a class="header-anchor" href="#后记">🔗</a></h1><p>还差最后一个<code>readonly</code>API了，这个和<code>reactive</code>差不多，这几天应该就可以写出来了，如果我写的有错，希望可以指出，非常感谢！~</p>`,71)])))}};export{x as categories,v as date,R as default,C as key,V as meta,T as tags,F as title,b as updated,O as wordCount};
